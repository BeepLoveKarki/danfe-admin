{"version":3,"sources":["webpack:///src/extensions/b56fb9cdcdc63b969b2316b16e91948a34b2d6d2d536505a0f555e1737c5e94a/statswidget/statswidgetmodule.component.ts"],"names":["StatsWidgetComponent","dataService","this","sellerscount","admincount","customercount","ordercount","getSellersCount$","query","mapStream","data","channels","length","getAdministratorsCount$","options","administrators","totalItems","getCustomersCount$","customers","getOrdersCount$","orders","StatsWidgetModule"],"mappings":"6FACA,2KAaO,MAAMA,EAOX,YAAoBC,GAAA,KAAAA,cAEpB,WACCC,KAAKC,eACLD,KAAKE,aACLF,KAAKG,gBACLH,KAAKI,aAGN,eACGJ,KAAKK,iBAAmBL,KAAKD,YAAYO,MAAM,GAAG;;;;;;MAOlDC,UAAWC,GAAWA,EAAKC,SAASC,OAAO,GAG9C,aACEV,KAAKW,wBAA0BX,KAAKD,YAAYO,MAAM,GAAG;;;;;;KAMxD,CACFM,QAAS,KAENL,UAAWC,GAAWA,EAAKK,eAAeC,YAG9C,gBACEd,KAAKe,mBAAqBf,KAAKD,YAAYO,MAAM,GAAG;;;;;;KAMnD,CACFM,QAAS,KAENL,UAAWC,GAAWA,EAAKQ,UAAUF,YAGzC,aAEAd,KAAKiB,gBAAkBjB,KAAKD,YAAYO,MAAM,GAAG;;;;;;KAM9C,CACFM,QAAS,KAENL,UAAWC,GAAWA,EAAKU,OAAOJ,a,sCAhE3BhB,GAAoB,Y,uBAApBA,EAAoB,2EANhC,aAAK,Q,gBAA+B,OAAM,aAAM,oBAChD,aAAK,Q,gBAAsC,OAAM,aAAM,2BACvD,cAAK,S,iBAAiC,OAAM,cAAM,uBAClD,cAAK,S,iBAA8B,OAAM,cAAM,qB,MAH1C,mDACA,0DACA,sDACA,sD,8BA8EC,MAAMqB,G,uBAAAA,I,oDAAAA,IAAiB,SAJjB,CAAC","file":"x","sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\r\nimport { DataService, SharedModule } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport gql from 'graphql-tag';\r\n\r\n@Component({\r\n  selector: 'stats-widget',\r\n  template: ` \r\n\t<h1> {{ getSellersCount$ | async }} </h1> <br/> SELLERS\r\n\t<h1> {{ getAdministratorsCount$ | async }} </h1> <br/> ADMINISTRATORS\r\n\t<h1> {{ getCustomersCount$ | async }} </h1> <br/> CUSTOMERS\r\n\t<h1> {{ getOrdersCount$ | async }} </h1> <br/> ORDERS \r\n  `,\r\n})\r\nexport class StatsWidgetComponent implements OnInit {\r\n\r\n  getSellersCount$: Observable<any>;\r\n  getAdministratorsCount$: Observable<any>;\r\n  getCustomersCount$: Observable<any>;\r\n  getOrdersCount$: Observable<any>;\r\n\r\n  constructor(private dataService: DataService) {}\r\n\r\n  ngOnInit() {\r\n\t  this.sellerscount();\r\n\t  this.admincount();\r\n\t  this.customercount();\r\n\t  this.ordercount();\r\n  }\r\n  \r\n  sellerscount(){ //count channels\r\n     this.getSellersCount$ = this.dataService.query(gql`\r\n\t query GetAllChannels{\r\n        channels{\r\n          id\r\n        }\r\n      }\r\n\t  `\r\n\t  ).mapStream((data:any)=>data.channels.length-1); //1 is default channel so\r\n  }\r\n  \r\n  admincount(){\r\n    this.getAdministratorsCount$ = this.dataService.query(gql`\r\n\t query GetAllAdministrators($options: AdministratorListOptions) {\r\n        administrators(options: $options) {\r\n          totalItems\r\n        }\r\n      }\r\n\t  `,{\r\n\t\t options: {\r\n\t\t }\r\n\t  }).mapStream((data:any)=>data.administrators.totalItems);\r\n  }\r\n  \r\n  customercount(){\r\n    this.getCustomersCount$ = this.dataService.query(gql`\r\n\t query GetAllCustomers($options: CustomerListOptions) {\r\n        customers(options: $options) {\r\n          totalItems\r\n        }\r\n      }\r\n\t  `,{\r\n\t\t options: {\r\n\t\t }\r\n\t  }).mapStream((data:any)=>data.customers.totalItems);\r\n  }\r\n  \r\n  ordercount(){\r\n     \r\n\t this.getOrdersCount$ = this.dataService.query(gql`\r\n\t query GetAllOrders($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n          totalItems\r\n        }\r\n      }\r\n\t  `,{\r\n\t\t options: {\r\n\t\t }\r\n\t  }).mapStream((data:any)=>data.orders.totalItems);\r\n  }\r\n\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [SharedModule],\r\n    declarations: [StatsWidgetComponent],\r\n})\r\n\r\nexport class StatsWidgetModule {}"]}