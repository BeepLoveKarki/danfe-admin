{"version":3,"sources":["webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/components/all-phones-list/all-phones-list.graphql.ts","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/components/all-phones-list/all-phones-list.component.html","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/components/all-phones-list/all-phones-list.component.ts","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/components/phone-detail/phone-detail.graphql.ts","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/components/phone-detail/phone-detail.component.html","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/components/phone-detail/phone-detail.component.ts","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/providers/routing/phone-detail/phone-detail-resolver.graphql.ts","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/providers/routing/phone-detail/phone-detail-resolver.ts","webpack:///src/extensions/a9af16c80b8350127fca1c5ca0d099380624f452297f6cb10aeadc83972207c1/phonesubscription-ui-lazy.module.ts"],"names":["GET_ALL_PHONES","DELETE_PHONE","dataService","modalService","notificationService","apollo","router","route","super","searchTerm","args","this","query","data","SubscriptionPhones","skip","take","options","filter","phone","contains","getfilter","sort","updatedAt","Desc","value","toString","valueChanges","pipe","debounceTime","takeUntil","destroy$","subscribe","refresh","watchQuery","variables","exportToCsv","items","id","ids","dialog","title","buttons","type","label","returnValue","switchMap","response","mutate","success","entity","err","error","setPageNumber","setItemsPerPage","UPDATE_PHONE","CREATE_PHONE","serverConfigService","formBuilder","changeDetector","which","detailForm","group","required","url","init","destroy","addNew","result","markAsPristine","markForCheck","saveChanges","dirty","input","mapTo","of","num","patchValue","parseInt","GET_PHONE","__typename","createdAt","mapStream","SubscriptionPhone","PhoneSubscriptionUIModule","phoneDetailBreadcrumb","resolved","map","link","forChild","path","pathMatch","component","breadcrumb","resolve"],"mappings":"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","file":"x","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nimport { PHONE_SUBSCRIPTION_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const GET_ALL_PHONES = gql`\r\n    query GetAllPhones($options: PhoneListOptions){\r\n\t\tSubscriptionPhones(options: $options){\r\n\t\t\titems{\r\n\t\t\t...SubscribedPhones\r\n\t\t\t}\r\n\t\t\ttotalItems\r\n       }\r\n    }\r\n\t${PHONE_SUBSCRIPTION_FRAGMENT}\r\n`;\r\n\r\n\r\nexport const DELETE_PHONE = gql`\r\n   mutation DeletePhone($input:[ID!]!){\r\n      deleteSubscriptionPhone(id:$input){\r\n\t     ...SubscribedPhones \r\n\t  }\r\n   }\r\n   ${PHONE_SUBSCRIPTION_FRAGMENT}\r\n`;","<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <input\r\n            type=\"number\"\r\n            name=\"searchTerm\"\r\n\t\t\t[formControl]=\"searchTerm\"\r\n            [placeholder]=\"'vdr-subscription-plugin.search-by-phone' | translate\"\r\n            class=\"clr-input search-input\"\r\n        />\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId=\"phone-list\"></vdr-action-bar-items>\r\n        <a href=\"javascript:void(0)\" class=\"btn btn-primary\" id=\"downloadbtn\" (click)=\"downloadcsv()\" *vdrIfPermissions=\"'CreateSettings'\">\r\n            <clr-icon shape=\"download-cloud\"></clr-icon>\r\n\t\t\t{{ 'vdr-subscription-plugin.download-csv' | translate }}\r\n        </a>\r\n\t\t<a class=\"btn btn-primary\" id=\"createbtn\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"'CreateSettings'\">\r\n            <clr-icon shape=\"plus\"></clr-icon>\r\n\t\t\t{{ 'vdr-subscription-plugin.create-new-phone' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n\t<vdr-dt-column>{{ 'vdr-subscription-plugin.phone' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-subscription-plugin.created' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-subscription-plugin.updated' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n\t<vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-phone=\"item\">\r\n\t\t<td class=\"left align-middle\">{{ phone.phone }}</td>\r\n\t\t<td class=\"left align-middle\">{{ phone.createdAt | date: 'longDate' }}</td>\r\n\t\t<td class=\"left align-middle\">{{ phone.updatedAt | date: 'longDate' }}</td>\r\n\t\t<td class=\"right align-middle\" *vdrIfPermissions=\"'UpdateSettings'\">\r\n            <vdr-table-row-action\r\n                iconShape=\"edit\"\r\n                [label]=\"'common.edit' | translate\"\r\n                [linkTo]=\"['/extensions', 'subscribedphones', phone.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n\t\t\r\n\t\t<td class=\"right align-middle\" *vdrIfPermissions=\"'DeleteSettings'\">\r\n            <vdr-dropdown>\r\n                <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\r\n                    {{ 'common.actions' | translate }}\r\n                    <clr-icon shape=\"caret down\"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"delete-button\"\r\n                        (click)=\"deletePhone(phone.id)\"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                        {{ 'common.delete' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n\t\t\r\n    </ng-template>\r\n</vdr-data-table>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseListComponent, DataService, NotificationService, ModalService  } from '@vendure/admin-ui/core';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { Apollo } from 'apollo-angular';\r\n\r\nimport { SortOrder } from '../../generated-types';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { debounceTime, takeUntil, switchMap } from 'rxjs/operators';\r\nimport { CsvDataService } from '../../common/export-as-csv';\r\n\r\nimport { \r\n  GetAllPhonesQuery,\r\n  SubscribedPhones,\r\n  GetAllPhonesQueryVariables,\r\n  DeletePhone\r\n} from '../../generated-types';\r\n\r\nimport { GET_ALL_PHONES, DELETE_PHONE } from './all-phones-list.graphql';\r\n\r\n@Component({\r\n    selector: 'vdr-all-phones-list',\r\n    templateUrl: './all-phones-list.component.html',\r\n    styleUrls: ['./all-phones-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class AllPhonesListComponent extends BaseListComponent<\r\n    GetAllPhonesQuery,\r\n\tSubscribedPhones.Fragment,\r\n    GetAllPhonesQueryVariables\r\n> implements OnInit {\r\n    searchTerm = new FormControl('');\r\n\tSubscriptionPhones: any;\r\n\tprivate querySubscription: Subscription;\r\n\r\n    constructor(\r\n\t   private dataService: DataService,\r\n       private modalService: ModalService,\r\n       private notificationService: NotificationService,\r\n       private apollo: Apollo,\t   \r\n\t   router: Router, \r\n\t   route: ActivatedRoute,\r\n\t) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.query(GET_ALL_PHONES,args),\r\n            (data) => data.SubscriptionPhones,\r\n\t\t\t(skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        phone: {\r\n                            contains: this.getfilter(),\r\n                        },\r\n                    },\r\n\t\t\t\t\tsort: {\r\n                        updatedAt: SortOrder.Desc,\r\n                    },\r\n                },\r\n            }),\r\n        );\r\n    }\r\n\t\r\n\tgetfilter(){\r\n\t   if(this.searchTerm.value){\r\n\t      return this.searchTerm.value.toString();\r\n\t   }else{\r\n\t     return \"\" ;\r\n\t   }\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n        super.ngOnInit();\r\n        this.searchTerm.valueChanges\r\n            .pipe(\r\n                debounceTime(250),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(() => {\r\n\t\t\t\tthis.refresh();\r\n\t\t\t});\r\n    }\r\n\t\r\n\t\r\n\tdownloadcsv(){\r\n\t  let args: any[] = [];\r\n\t  this.apollo.watchQuery<any>({\r\n         query: GET_ALL_PHONES,\r\n\t\t variables: args\r\n      }).valueChanges.subscribe((data) => {\r\n\t\t  CsvDataService.exportToCsv('danfe-subscribed-phones.csv', data.data.SubscriptionPhones.items);\r\n      });\r\n\t  \r\n\t   \r\n\t}\r\n\t\r\n\tdeletePhone(id: string) {\r\n\t\tlet ids:string[] =[id];\r\n        this.modalService\r\n            .dialog({\r\n                title: _('vdr-subscription-plugin.confirm-delete-phone'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.mutate<DeletePhone.Mutation,DeletePhone.Variables>(DELETE_PHONE,{\"input\":ids}) : EMPTY)),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Phone',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Phone',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PHONE_SUBSCRIPTION_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const UPDATE_PHONE = gql`\r\n    mutation UpdatePhone($input: [PhoneUpdateInput!]!) {\r\n        updateSubscriptionPhone(input: $input) {\r\n            ...SubscribedPhones\r\n        }\r\n    }\r\n    ${PHONE_SUBSCRIPTION_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PHONE = gql`\r\n    mutation CreatePhone($input: [PhoneAddInput!]!) {\r\n        addSubscriptionPhone(input: $input) {\r\n            ...SubscribedPhones\r\n        }\r\n    }\r\n    ${PHONE_SUBSCRIPTION_FRAGMENT}\r\n`;","<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <button\r\n            class=\"btn btn-primary\"\r\n\t\t\tid=\"custbtn\"\r\n            *ngIf=\"which; else updateButton\"\r\n            (click)=\"create()\"\r\n            [disabled]=\"!(detailForm.valid && detailForm.dirty)\"\r\n        >\r\n            {{ 'common.create' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n\t\t\t\tid=\"editbtn\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"!(detailForm.valid && detailForm.dirty)\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-form-field [label]=\"'vdr-subscription-plugin.phone-label' | translate\" for=\"phone\">\r\n        <input id=\"phone\" type=\"number\" formControlName=\"phone\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    BaseDetailComponent,\r\n    DataService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, mapTo, switchMap } from 'rxjs/operators';\r\n\r\nimport { \r\n   CreatePhone,\r\n   SubscribedPhonesFragment,\r\n   UpdatePhone,\r\n   PhoneAddInput,\r\n   PhoneUpdateInput\r\n} from '../../generated-types';\r\n\r\nimport { CREATE_PHONE,UPDATE_PHONE } from './phone-detail.graphql';\r\n\r\n@Component({\r\n    selector: 'vdr-subscription-phone-detail',\r\n    templateUrl: './phone-detail.component.html',\r\n    styleUrls: ['./phone-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\n\r\nexport class PhoneDetailComponent extends BaseDetailComponent<SubscribedPhonesFragment>\r\n    implements OnInit, OnDestroy {\r\n    detailForm: FormGroup;\r\n\twhich = false;\r\n\t\r\n\tconstructor(\r\n        route: ActivatedRoute,\r\n        router: Router,\r\n        serverConfigService: ServerConfigService,\r\n        private formBuilder: FormBuilder,\r\n        protected dataService: DataService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        \r\n\t\tthis.detailForm = this.formBuilder.group({\r\n            phone: ['', Validators.required]\r\n        });\r\n\t\t\r\n    }\r\n\t\r\n\tngOnInit() {\r\n\t\tif(this.router.url!='/extensions/subscribedphones/create'){\r\n\t\t  this.which=false;\r\n\t\t  this.init();\r\n\t\t}else{\r\n\t\t   this.which=true;\r\n\t\t}\r\n    }\r\n\t\r\n\tngOnDestroy() {\r\n      this.destroy();\r\n    }\r\n\t\r\n\tcreate(){\r\n\t   this.addNew()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-create-success', {\r\n                        entity: 'Phone',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-create-error', {\r\n                        entity: 'Phone',\r\n                    });\r\n                },\r\n            );\r\n\t}\r\n\t\r\n\tsave() {\r\n        this.saveChanges()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-update-success', {\r\n                        entity: 'Phone',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-update-error', {\r\n                        entity: 'Phone',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\t\r\n\tprivate addNew(): Observable<boolean>{\r\n\t   if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n\t\t\tconst num = formValue.phone.toString();\r\n            const input: PhoneAddInput[] = [{\r\n                phone: num,\r\n            }];\r\n            return this.dataService\r\n                .mutate<CreatePhone.Mutation,CreatePhone.Variables>(CREATE_PHONE, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n\t}\r\n\t\r\n\tprivate saveChanges(): Observable<boolean> {\r\n        if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n\t\t\tconst num = formValue.phone.toString();\r\n            const input: PhoneUpdateInput[] = [{\r\n                id: this.id,\r\n                phone: num,\r\n            }];\r\n            return this.dataService\r\n                .mutate<UpdatePhone.Mutation,UpdatePhone.Variables>(UPDATE_PHONE, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n    }\r\n\t\r\n\tprotected setFormValues(entity: SubscribedPhonesFragment) {\r\n\t\t  \r\n\t\t  this.detailForm.patchValue({\r\n            phone: parseInt(entity.phone),\r\n          });\r\n\t}\r\n    \r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PHONE_SUBSCRIPTION_FRAGMENT } from '../../../common/fragments.graphql';\r\n\r\nexport const GET_PHONE = gql`\r\n  query GetPhone($id: ID!) {\r\n    SubscriptionPhone(id: $id) {\r\n      ...SubscribedPhones\r\n    }\r\n  }\r\n  ${PHONE_SUBSCRIPTION_FRAGMENT}\r\n`;","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService, BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { GET_PHONE } from './phone-detail-resolver.graphql';\r\n\r\nimport { \r\n  GetPhoneQuery,\r\n  SubscribedPhonesFragment,\r\n  GetPhoneQueryVariables\r\n} from '../../../generated-types';\r\n\r\n@Injectable()\r\nexport default class PhoneDetailResolver extends BaseEntityResolver<\r\n  SubscribedPhonesFragment\r\n> {\r\n  constructor(router: Router, dataService: DataService) {\r\n    super(\r\n      router,\r\n      {\r\n        __typename: 'Phone',\r\n        id: '',\r\n\t\tphone:'',\r\n\t\tcreatedAt: '',\r\n\t\tupdatedAt: ''\r\n      },\r\n      (id) =>\r\n        dataService.query<GetPhoneQuery, GetPhoneQueryVariables>(GET_PHONE, {\r\n            id: id\r\n        })\r\n        .mapStream((data) => data.SubscriptionPhone)\r\n    );\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule, createResolveData } from '@vendure/admin-ui/core';\r\nimport { AllPhonesListComponent } from './components/all-phones-list/all-phones-list.component';\r\nimport { PhoneDetailComponent } from './components/phone-detail/phone-detail.component';\r\n\r\nimport PhoneDetailResolver from './providers/routing/phone-detail/phone-detail-resolver';\r\nimport { SubscribedPhonesFragment } from './generated-types';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n\t{\r\n      path: '',\r\n      pathMatch: 'full',\r\n      component: AllPhonesListComponent ,\r\n      data: { breadcrumb: 'Subscribed Phones' },\r\n    },\r\n\t{\r\n\t  path: 'create',\r\n      component: PhoneDetailComponent,\r\n      data: {breadcrumb: [\r\n             {\r\n                label: 'Subscribed Phones',\r\n                link: ['/extensions', 'subscribedphones'],\r\n             },\r\n             {\r\n                label: 'Create Phone',\r\n                link: [],\r\n             }\r\n\t       ]\r\n\t     } \r\n\t},\r\n    {\r\n       path: ':id',\r\n       component: PhoneDetailComponent,\r\n       resolve: createResolveData(PhoneDetailResolver),\r\n       data: { breadcrumb: phoneDetailBreadcrumb },\r\n    }\r\n\t]),\r\n  ],\r\n  declarations: [\r\n    AllPhonesListComponent,\r\n\tPhoneDetailComponent\r\n  ],\r\n  providers:[PhoneDetailResolver],\r\n})\r\nexport class PhoneSubscriptionUIModule {}\r\n\r\nexport function phoneDetailBreadcrumb(resolved: { entity: Observable<SubscribedPhonesFragment> }) {\r\n\treturn resolved.entity.pipe(\r\n        map(entity => [\r\n            {\r\n                label: 'Subscribed Phones',\r\n                link: ['/extensions', 'subscribedphones'],\r\n            },\r\n            {\r\n                label: `${entity.phone}`,\r\n                link: [],\r\n            },\r\n        ]),\r\n    );\r\n}\r\n"]}