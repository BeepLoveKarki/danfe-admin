{"version":3,"sources":["webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/generated-types.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/common/fragments.graphql.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/components/all-feedbacks-list/all-feedbacks-list.graphql.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/components/all-feedbacks-list/all-feedbacks-list.component.html","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/components/all-feedbacks-list/all-feedbacks-list.component.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/common/export-as-csv.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/components/feedback-detail/feedback-detail.graphql.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/components/feedback-detail/feedback-detail.component.html","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/components/feedback-detail/feedback-detail.component.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/providers/routing/feedback-detail/feedback-detail-resolver.graphql.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/providers/routing/feedback-detail/feedback-detail-resolver.ts","webpack:///src/extensions/4bd412b956d4c1baedfedaa6aa36beabe17096aeaddd966cdb15d5b0044cbcd1/feedback-ui-lazy.module.ts"],"names":["AdjustmentType","AssetType","CurrencyCode","DeletionResult","HistoryEntryType","JobState","LanguageCode","LogicalOperator","Permission","RecommendationType","SortOrder","StockMovementType","Tax","Promotion","Shipping","Refund","TaxRefund","PromotionRefund","ShippingRefund","Image","Video","Binary","Aed","Afn","All","Amd","Ang","Aoa","Ars","Aud","Awg","Azn","Bam","Bbd","Bdt","Bgn","Bhd","Bif","Bmd","Bnd","Bob","Brl","Bsd","Btn","Bwp","Byn","Bzd","Cad","Cdf","Chf","Clp","Cny","Cop","Crc","Cuc","Cup","Cve","Czk","Djf","Dkk","Dop","Dzd","Egp","Ern","Etb","Eur","Fjd","Fkp","Gbp","Gel","Ghs","Gip","Gmd","Gnf","Gtq","Gyd","Hkd","Hnl","Hrk","Htg","Huf","Idr","Ils","Inr","Iqd","Irr","Isk","Jmd","Jod","Jpy","Kes","Kgs","Khr","Kmf","Kpw","Krw","Kwd","Kyd","Kzt","Lak","Lbp","Lkr","Lrd","Lsl","Lyd","Mad","Mdl","Mga","Mkd","Mmk","Mnt","Mop","Mru","Mur","Mvr","Mwk","Mxn","Myr","Mzn","Nad","Ngn","Nio","Nok","Npr","Nzd","Omr","Pab","Pen","Pgk","Php","Pkr","Pln","Pyg","Qar","Ron","Rsd","Rub","Rwf","Sar","Sbd","Scr","Sdg","Sek","Sgd","Shp","Sll","Sos","Srd","Ssp","Stn","Svc","Syp","Szl","Thb","Tjs","Tmt","Tnd","Top","Try","Ttd","Twd","Tzs","Uah","Ugx","Usd","Uyu","Uzs","Ves","Vnd","Vuv","Wst","Xaf","Xcd","Xof","Xpf","Yer","Zar","Zmw","Zwl","Deleted","NotDeleted","CustomerRegistered","CustomerVerified","CustomerDetailUpdated","CustomerAddedToGroup","CustomerRemovedFromGroup","CustomerAddressCreated","CustomerAddressUpdated","CustomerAddressDeleted","CustomerPasswordUpdated","CustomerPasswordResetRequested","CustomerPasswordResetVerified","CustomerEmailUpdateRequested","CustomerEmailUpdateVerified","CustomerNote","OrderStateTransition","OrderPaymentTransition","OrderFullfillment","OrderCancellation","OrderRefundTransition","OrderNote","OrderCouponApplied","OrderCouponRemoved","Pending","Running","Completed","Retrying","Failed","Af","Ak","Sq","Am","Ar","Hy","As","Az","Bm","Bn","Eu","Be","Bs","Br","Bg","My","Ca","Ce","Zh","ZhHans","ZhHant","Cu","Kw","Co","Hr","Cs","Da","Nl","NlBe","Dz","En","EnAu","EnCa","EnGb","EnUs","Eo","Et","Ee","Fo","Fi","Fr","FrCa","FrCh","Ff","Gl","Lg","Ka","De","DeAt","DeCh","El","Gu","Ht","Ha","He","Hi","Hu","Is","Ig","Id","Ia","Ga","It","Ja","Jv","Kl","Kn","Ks","Kk","Km","Ki","Rw","Ko","Ku","Ky","Lo","La","Lv","Ln","Lt","Lu","Lb","Mk","Mg","Ms","Ml","Mt","Gv","Mi","Mr","Mn","Ne","Nd","Se","Nb","Nn","Ny","Or","Om","Os","Ps","Fa","FaAf","Pl","Pt","PtBr","PtPt","Pa","Qu","Ro","RoMd","Rm","Rn","Ru","Sm","Sg","Sa","Gd","Sr","Sn","Ii","Sd","Si","Sk","Sl","So","St","Es","EsEs","EsMx","Su","Sw","SwCd","Sv","Tg","Ta","Tt","Te","Th","Bo","Ti","To","Tr","Tk","Uk","Ur","Ug","Uz","Vi","Vo","Cy","Fy","Wo","Xh","Yi","Yo","Zu","And","Authenticated","SuperAdmin","Owner","Public","CreateCatalog","ReadCatalog","UpdateCatalog","DeleteCatalog","CreateCustomer","ReadCustomer","UpdateCustomer","DeleteCustomer","CreateAdministrator","ReadAdministrator","UpdateAdministrator","DeleteAdministrator","CreateOrder","ReadOrder","UpdateOrder","DeleteOrder","CreatePromotion","ReadPromotion","UpdatePromotion","DeletePromotion","CreateSettings","ReadSettings","UpdateSettings","DeleteSettings","Crosssell","Upsell","Asc","Desc","Adjustment","Sale","Cancellation","Return","FEEDBACK_FRAGMENT","GET_ALL_FEEDBACKS","DELETE_FEEDBACK","dataService","modalService","notificationService","apollo","router","route","super","searchTerm","setQueryFn","args","this","query","data","Feedbacks","skip","take","options","sort","updatedAt","ngOnInit","valueChanges","pipe","debounceTime","takeUntil","destroy$","subscribe","filtertable","filter","value","toUpperCase","table","document","querySelector","console","log","tr","getElementsByTagName","i","length","j","td","txtValue","innerHTML","indexOf","style","display","watchQuery","variables","filename","rows","keys","Object","csvContent","join","map","row","k","cell","undefined","Date","toLocaleString","toString","replace","search","blob","Blob","type","navigator","msSaveBlob","link","createElement","download","url","URL","createObjectURL","setAttribute","visibility","body","appendChild","click","removeChild","exportToCsv","items","id","dialog","title","buttons","label","returnValue","switchMap","response","mutate","success","entity","refresh","err","error","setPageNumber","setItemsPerPage","UPDATE_FEEDBACK","CREATE_FEEDBACK","serverConfigService","formBuilder","changeDetector","which","detailForm","group","name","email","phone","feedback","required","init","destroy","addNew","result","markAsPristine","markForCheck","saveChanges","dirty","formValue","input","mapTo","of","datas","parseInt","patchValue","GET_FEEDBACK","__typename","createdAt","mapStream","Feedback","FeedbackUIModule","feedbackDetailBreadcrumb","resolved","forChild","path","pathMatch","component","breadcrumb","resolve"],"mappings":"wGA0DYA,EA0GAC,EA8cAC,EAkfAC,EA4RAC,EA2GAC,EAkBAC,EA8UAC,EAs5BAC,EA8wBAC,EAoOAC,EAsCAC,E,iDA/rHZ,SAAYX,GACV,EAAAY,IAAA,MACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SACA,EAAAC,UAAA,aACA,EAAAC,gBAAA,mBACA,EAAAC,eAAA,kBAPF,CAAYlB,MAAc,KA0G1B,SAAYC,GACV,EAAAkB,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,OAAA,SAHF,CAAYpB,MAAS,KA8crB,SAAYC,GAEV,EAAAohL,MAAY,KAkfxB,SAAYC,GAEV,EAAAgL,QAAA,UAEA,EAAAC,WAAA,cAJF,CAAYjL,MAAc,KA4R1B,SAAYC,GACV,EAAAiL,mBAAA,sBACA,EAAAC,iBAAA,oBACA,EAAAC,sBAAA,0BACA,EAAAC,qBAAA,0BACA,EAAAC,yBAAA,8BACA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,wBAAA,4BACA,EAAAC,+BAAA,oCACA,EAAAC,8BAAA,mCACA,EAAAC,6BAAA,kCACA,EAAAC,4BAAA,iCACA,EAAAC,aAAA,gBACA,EAAAC,qBAAA,yBACA,EAAAC,uBAAA,2BACA,EAAAC,kBAAA,qBACA,EAAAC,kBAAA,qBACA,EAAAC,sBAAA,0BACA,EAAAC,UAAA,aACA,EAAAC,mBAAA,uBACA,EAAAC,mBAAA,uBAtBF,CAAYtM,MAAgB,KA2G5B,SAAYC,GACV,EAAAsM,QAAA,UACA,EAAAC,QAAA,UACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SALF,CAAY1M,MAAQ,KAkBpB,SAAYC,GAEV,EAAA0M,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,OAAA,UAEA,EAAAC,OAAA,UAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KA1TF,CAAYtW,MAAY,KA8UxB,SAAYC,GACV,EAAAsW,IAAA,MACA,EAAA5D,GAAA,KAFF,CAAY1S,MAAe,KAs5B3B,SAAYC,GAEV,EAAAsW,cAAA,gBAEA,EAAAC,WAAA,aAEA,EAAAC,MAAA,QAEA,EAAAC,OAAA,SACA,EAAAC,cAAA,gBACA,EAAAC,YAAA,cACA,EAAAC,cAAA,gBACA,EAAAC,cAAA,gBACA,EAAAC,eAAA,iBACA,EAAAC,aAAA,eACA,EAAAC,eAAA,iBACA,EAAAC,eAAA,iBACA,EAAAC,oBAAA,sBACA,EAAAC,kBAAA,oBACA,EAAAC,oBAAA,sBACA,EAAAC,oBAAA,sBACA,EAAAC,YAAA,cACA,EAAAC,UAAA,YACA,EAAAC,YAAA,cACA,EAAAC,YAAA,cACA,EAAAC,gBAAA,kBACA,EAAAC,cAAA,gBACA,EAAAC,gBAAA,kBACA,EAAAC,gBAAA,kBACA,EAAAC,eAAA,iBACA,EAAAC,aAAA,eACA,EAAAC,eAAA,iBACA,EAAAC,eAAA,iBAhCF,CAAYjY,MAAU,KA8wBtB,SAAYC,GACV,EAAAiY,UAAA,YACA,EAAAC,OAAA,SAFF,CAAYlY,MAAkB,KAoO9B,SAAYC,GACV,EAAAkY,IAAA,MACA,EAAAC,KAAA,OAFF,CAAYnY,MAAS,KAsCrB,SAAYC,GACV,EAAAmY,WAAA,aACA,EAAAC,KAAA,OACA,EAAAC,aAAA,eACA,EAAAC,OAAA,SAJF,CAAYtY,MAAiB,K,6ECvvHtB,MAAMuY,EAAoB,GAAG;;;;;;;;;;ECEvBC,EAAoB,GAAG;;;;;;;;;GASjCD;EAIUE,EAAkB,GAAG;;;;;;KAM7BF;yGCXG,cAAsE,gEAClE,qBACT,Q,oBACK,O,MADL,oE,6DAED,cACU,qBACT,Q,oBACK,Q,MAHoC,6BAEzC,2E,kFAyBD,gBACU,kC,oBAKJ,Q,yBAHQ,8CAAmC,0B,uCAKjD,gBACU,uBACI,oBACI,Q,oBACA,sBACJ,OACA,+BACI,oBAGI,2FAGA,sBACA,Q,qBACJ,OACJ,OACJ,OACJ,O,MAfY,iDAWI,kD,yBA1BtB,eAA8B,QAAmB,OACjD,eAA8B,QAAoB,OAClD,eAA8B,QAAoB,OAClD,eAA8B,QAAuB,OACrD,sBAQA,wB,oBAZ8B,qBACA,sBACA,sBACA,yBACC,kDAQA,mDCtB1B,MAAM,UAAkC,IAS3C,YACQG,EACGC,EACAC,EACAC,EACXC,EACAC,GAEIC,MAAMF,EAAQC,GAPV,KAAAL,cACG,KAAAC,eACA,KAAAC,sBACA,KAAAC,SARX,KAAAI,WAAa,IAAI,IAAY,IAazBD,MAAME,WACF,IAAIC,IAAgBC,KAAKV,YAAYW,MAAMb,EAAkBW,GAC5DG,GAASA,EAAKC,UACxB,CAACC,EAAMC,MACMC,QAAS,CACLF,OACAC,OACfE,KAAM,CACaC,UAAW7Z,EAAUmY,UAO5C,WACOc,MAAMa,WACNT,KAAKH,WAAWa,aACXC,KACG,OAAAC,EAAA,GAAa,KACb,OAAAC,EAAA,GAAUb,KAAKc,WAElBC,UAAU,KACnBf,KAAKgB,gBAMP,cACC,IACIC,EADQjB,KAAKH,WAAWqB,MACTC,cACfC,EAAsBC,SAASC,cAAc,8BACjDC,QAAQC,IAAIJ,GACZ,IAAIK,EAAKL,EAAMM,qBAAqB,MACpCH,QAAQC,IAAIC,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAGG,OAAQD,IAEhC,IAAI,IAAIE,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAElB,IAAIC,EAAKL,EAAGE,GAAGD,qBAAqB,MAAMG,GAE1C,GADMN,QAAQC,IAAIM,GACdA,EAAI,CACRP,QAAQC,IAAI,KACZ,IAAIO,EAAWD,EAAGE,UAElB,GADAT,QAAQC,IAAIO,GACRA,EAASZ,cAAcc,QAAQhB,IAAW,EAAG,CAC/CQ,EAAGE,GAAGO,MAAMC,QAAU,GACtB,MAEDV,EAAGE,GAAGO,MAAMC,QAAU,SAS1B,cAEEnC,KAAKP,OAAO2C,WAAgB,CACtBnC,MAAOb,EACbiD,UAHkB,KAIZ3B,aAAaK,UAAWb,WC9G/B,mBAAmBoC,EAAkBC,GACnC,IAAKA,IAASA,EAAKX,OACjB,OAEF,MACMY,EAAOC,OAAOD,KAAKD,EAAK,IACxBG,EACJF,EAAKG,KAHW,KAIhB,KACAJ,EAAKK,IAAIC,GACAL,EAAKI,IAAIE,IACd,IAAIC,EAAkB,OAAXF,EAAIC,SAA0BE,IAAXH,EAAIC,GAAmB,GAAKD,EAAIC,GAO9D,OANAC,EAAOA,aAAgBE,KACnBF,EAAKG,iBACLH,EAAKI,WAAWC,QAAQ,KAAM,MAC9BL,EAAKM,OAAO,cAAgB,IAC9BN,EAAO,IAAIA,MAENA,IACNJ,KAfW,MAgBbA,KAAK,MAEJW,EAAO,IAAIC,KAAK,CAACb,GAAa,CAAEc,KAAM,4BAC5C,GAAIC,UAAUC,WACZD,UAAUC,WAAWJ,EAAMhB,OACtB,CACL,MAAMqB,EAAOtC,SAASuC,cAAc,KACpC,QAAsBZ,IAAlBW,EAAKE,SAAwB,CAE/B,MAAMC,EAAMC,IAAIC,gBAAgBV,GAChCK,EAAKM,aAAa,OAAQH,GAC1BH,EAAKM,aAAa,WAAY3B,GAC9BqB,EAAKzB,MAAMgC,WAAa,SACxB7C,SAAS8C,KAAKC,YAAYT,GAC1BA,EAAKU,QACLhD,SAAS8C,KAAKG,YAAYX,QD4EfY,YAAY,sBAAuBrE,EAAKA,KAAKC,UAAUqE,SAMzE,eAAeC,GACRzE,KAAKT,aACAmF,OAAO,CACJC,MAAO,YAAE,+CACTC,QAAS,CACL,CAAEpB,KAAM,YAAaqB,MAAO,YAAE,kBAC9B,CAAErB,KAAM,SAAUqB,MAAO,YAAE,iBAAkBC,aAAa,MAGjEnE,KACG,OAAAoE,EAAA,GAAUC,GAAaA,EAAWhF,KAAKV,YAAY2F,OAAyD5F,EAAgB,CAAC,MAAQoF,IAAO,MAE/I1D,UACG,KACIf,KAAKR,oBAAoB0F,QAAQ,YAAE,gCAAiC,CAChEC,OAAQ,aAEZnF,KAAKoF,WAETC,IACIrF,KAAKR,oBAAoB8F,MAAM,YAAE,8BAA+B,CAC5DH,OAAQ,gB,sCA9GnB,GAAyB,gE,uBAAzB,EAAyB,kjCD7BtC,yBACI,sBACI,kB,oBAOJ,OACA,uBACI,iCACA,oBAIN,oBAIE,OACJ,OAEA,2BAMI,sCAAc,EAAAI,cAAA,KAAd,CAAoC,yCACd,EAAAC,gBAAA,M,mEAEzB,yBAAe,S,qBAA4C,OAC3D,yBAAe,S,qBAA6C,OAC5D,yBAAe,S,qBAA6C,OAC5D,yBAAe,S,qBAAgD,OAC5D,yBACH,yBACG,8BAkCJ,Q,MAnEG,yCAA0B,gEAOyE,kDAI9B,kDASpE,0CAAwB,2CAAxB,CAAwB,uCAAxB,CAAwB,0CAOZ,qDACA,sDACA,sDACA,2D,gPG/BT,MAAMC,EAAkB,GAAG;;;;;;MAM5BtG;EAGOuG,EAAkB,GAAG;;;;;;MAM5BvG;yCCjBE,mBAII,2DAGA,Q,oBACJ,O,uBAHI,2DAEA,iD,uCAGA,mBAGI,yDAGA,Q,oBACJ,O,uBAHI,2DAEA,iDCWT,MAAM,UAAgC,IAK5C,YACOQ,EACAD,EACAiG,EACQC,EACEtG,EACFuG,EACArG,GAERI,MAAMD,EAAOD,EAAQiG,EAAqBrG,GALlC,KAAAsG,cACE,KAAAtG,cACF,KAAAuG,iBACA,KAAArG,sBATf,KAAAsG,OAAQ,EAaP9F,KAAK+F,WAAa/F,KAAK4F,YAAYI,MAAM,CAC/BC,KAAM,GACfC,MAAO,GACPC,MAAO,GACPC,SAAU,CAAC,GAAG,IAAWC,YAK3B,WACqB,gCAAjBrG,KAAKN,OAAOoE,KACb9D,KAAK8F,OAAM,EACX9F,KAAKsG,QAEJtG,KAAK8F,OAAM,EAIf,cACK9F,KAAKuG,UAGV,SACGvG,KAAKwG,SACI7F,KAAK,OAAAM,EAAA,GAAOwF,KAAYA,IACxB1F,UACG,KACIf,KAAK+F,WAAWW,iBAChB1G,KAAK6F,eAAec,eACpB3G,KAAKR,oBAAoB0F,QAAQ,+BAAgC,CAC7DC,OAAQ,cAGhB,KACInF,KAAKR,oBAAoB8F,MAAM,6BAA8B,CACzDH,OAAQ,eAM/B,OACOnF,KAAK4G,cACAjG,KAAK,OAAAM,EAAA,GAAOwF,KAAYA,IACxB1F,UACG,KACIf,KAAK+F,WAAWW,iBAChB1G,KAAK6F,eAAec,eACpB3G,KAAKR,oBAAoB0F,QAAQ,+BAAgC,CAC7DC,OAAQ,cAGhB,KACInF,KAAKR,oBAAoB8F,MAAM,6BAA8B,CACzDH,OAAQ,eAMvB,SACL,GAAInF,KAAK+F,WAAWc,MAAO,CACnB,MAAMC,EAAY9G,KAAK+F,WAAW7E,MAC5B6F,EAA0B,CACxCd,KAAMa,EAAUb,MAAQ,YACZC,MAAOY,EAAUZ,OAAS,YACtCC,MAAOW,EAAUX,MAAMhD,YAAc,YACrCiD,SAAUU,EAAUV,UAEZ,OAAOpG,KAAKV,YACP2F,OAAyDS,EAAiB,CACvEqB,UAEHpG,KAAK,OAAAqG,EAAA,IAAM,IAEhB,OAAO,OAAAC,EAAA,IAAG,GAIb,cACD,GAAIjH,KAAK+F,WAAWc,MAAO,CACvB,MAAMC,EAAY9G,KAAK+F,WAAW7E,MAC5B6F,EAA6B,CAC/BtC,GAAIzE,KAAKyE,GACTwB,KAAMa,EAAUb,MAAQ,YACxBC,MAAOY,EAAUZ,OAAS,YACtCC,MAAOW,EAAUX,MAAMhD,YAAc,YACrCiD,SAAUU,EAAUV,UAEZ,OAAOpG,KAAKV,YACP2F,OAAyDQ,EAAiB,CACvEsB,UAEHpG,KAAK,OAAAqG,EAAA,IAAM,IAEhB,OAAO,OAAAC,EAAA,IAAG,GAIX,cAAc9B,GACrB,IAAI+B,EAAa,GAED,aAAb/B,EAAOc,OACNiB,EAAMjB,KAAK,IAGE,aAAdd,EAAOe,QACNgB,EAAMhB,MAAM,IAGC,aAAdf,EAAOgB,MACNe,EAAMf,MAAM,GAEXe,EAAMf,MAAMgB,SAASD,EAAMf,OAGhCe,EAAMd,SAASjB,EAAOiB,SACtBpG,KAAK+F,WAAWqB,WAAWF,I,sCArIlB,GAAuB,0E,uBAAvB,EAAuB,ioB,GAAA,MD7BpC,yBACI,uBACI,yBASA,wCAUJ,OACJ,OAEA,iBACI,2B,oBACI,kBACJ,OACH,2B,qBACO,mBACJ,OACC,4B,qBACG,mBACJ,OACC,4B,qBAEH,sBACA,uBACE,OACJ,Q,qBAlCY,6BAAgC,cAmBzB,uCACC,kEACwC,4BAE3C,oEAC8C,4BAE1C,oEAC2C,4BAE3C,uEAEgC,8B,yJEhC9C,MAAMG,EAAe,GAAG;;;;;;IAM3BlI;ECGW,MAAM,UAA+B,IAGlD,YAAYO,EAAgBJ,GAC1BM,MACEF,EACA,CACE4H,WAAY,WACZ7C,GAAI,GACVwB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACX/G,UAAW,IAENiE,GACCnF,EAAYW,MAAmDoH,EAAc,CACzE5C,GAAIA,IAEP+C,UAAWtH,GAASA,EAAKuH,Y,sCApBb,GAAsB,sB,yBAAtB,EAAsB,QAAtB,EAAsB,Y,gBCZ3C,0GAiDO,MAAMC,GAEN,SAASC,EAAyBC,GACxC,OAAOA,EAASzC,OAAOxE,KAChB,OAAAiC,EAAA,GAAIuC,GAAU,CACV,CACIN,MAAO,YACPlB,KAAM,CAAC,cAAe,cAE1B,CACIkB,MAAO,kBACPlB,KAAM,O,uBAXT+D,I,oDAAAA,IAAgB,UAFjB,CAAC,GAAuB,SApCzB,CACP,KACA,IAAaG,SAAS,CACzB,CACKC,KAAM,GACNC,UAAW,OACXC,UAAW,EACX9H,KAAM,CAAE+H,WAAY,cAEzB,CACEH,KAAM,SACHE,UAAW,EACX9H,KAAM,CAAC+H,WAAY,CACZ,CACGpD,MAAO,YACPlB,KAAM,CAAC,cAAe,cAEzB,CACGkB,MAAO,kBACPlB,KAAM,OAKlB,CACGmE,KAAM,MACNE,UAAW,EACXE,QAAS,aAAkB,GAC3BhI,KAAM,CAAE+H,WAAYN","file":"x","sourcesContent":["// tslint:disable\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type AddNoteToCustomerInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type AddNoteToOrderInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type Address = Node & {\n  __typename?: 'Address';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country: Country;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Adjustment = {\n  __typename?: 'Adjustment';\n  adjustmentSource: Scalars['String'];\n  type: AdjustmentType;\n  description: Scalars['String'];\n  amount: Scalars['Int'];\n};\n\nexport enum AdjustmentType {\n  Tax = 'TAX',\n  Promotion = 'PROMOTION',\n  Shipping = 'SHIPPING',\n  Refund = 'REFUND',\n  TaxRefund = 'TAX_REFUND',\n  PromotionRefund = 'PROMOTION_REFUND',\n  ShippingRefund = 'SHIPPING_REFUND'\n}\n\nexport type Administrator = Node & {\n  __typename?: 'Administrator';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  user: User;\n};\n\nexport type AdministratorFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type AdministratorList = PaginatedList & {\n  __typename?: 'AdministratorList';\n  items: Array<Administrator>;\n  totalItems: Scalars['Int'];\n};\n\nexport type AdministratorListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AdministratorSortParameter>;\n  filter?: Maybe<AdministratorFilterParameter>;\n};\n\nexport type AdministratorSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  type: AssetType;\n  fileSize: Scalars['Int'];\n  mimeType: Scalars['String'];\n  width: Scalars['Int'];\n  height: Scalars['Int'];\n  source: Scalars['String'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\nexport type AssetFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  type?: Maybe<StringOperators>;\n  fileSize?: Maybe<NumberOperators>;\n  mimeType?: Maybe<StringOperators>;\n  width?: Maybe<NumberOperators>;\n  height?: Maybe<NumberOperators>;\n  source?: Maybe<StringOperators>;\n  preview?: Maybe<StringOperators>;\n};\n\nexport type AssetList = PaginatedList & {\n  __typename?: 'AssetList';\n  items: Array<Asset>;\n  totalItems: Scalars['Int'];\n};\n\nexport type AssetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AssetSortParameter>;\n  filter?: Maybe<AssetFilterParameter>;\n};\n\nexport type AssetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  fileSize?: Maybe<SortOrder>;\n  mimeType?: Maybe<SortOrder>;\n  width?: Maybe<SortOrder>;\n  height?: Maybe<SortOrder>;\n  source?: Maybe<SortOrder>;\n  preview?: Maybe<SortOrder>;\n};\n\nexport enum AssetType {\n  Image = 'IMAGE',\n  Video = 'VIDEO',\n  Binary = 'BINARY'\n}\n\nexport type AssignProductsToChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n  priceFactor?: Maybe<Scalars['Float']>;\n};\n\nexport type BooleanCustomFieldConfig = CustomField & {\n  __typename?: 'BooleanCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type BooleanOperators = {\n  eq?: Maybe<Scalars['Boolean']>;\n};\n\nexport type BulkDiscount = {\n  __typename?: 'BulkDiscount';\n  productVariant: ProductVariant;\n  quantity: Scalars['Int'];\n  price: Scalars['Int'];\n};\n\nexport type BulkDiscountInput = {\n  quantity: Scalars['Int'];\n  price: Scalars['Int'];\n};\n\nexport type Cancellation = Node & StockMovement & {\n  __typename?: 'Cancellation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type CancelOrderInput = {\n  /** The id of the order to be cancelled */\n  orderId: Scalars['ID'];\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\n  lines?: Maybe<Array<OrderLineInput>>;\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type Channel = Node & {\n  __typename?: 'Channel';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultTaxZone?: Maybe<Zone>;\n  defaultShippingZone?: Maybe<Zone>;\n  defaultLanguageCode: LanguageCode;\n  currencyCode: CurrencyCode;\n  pricesIncludeTax: Scalars['Boolean'];\n};\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode?: Maybe<LanguageCode>;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  breadcrumbs: Array<CollectionBreadcrumb>;\n  position: Scalars['Int'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  parent?: Maybe<Collection>;\n  children?: Maybe<Array<Collection>>;\n  filters: Array<ConfigurableOperation>;\n  translations: Array<CollectionTranslation>;\n  productVariants: ProductVariantList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CollectionProductVariantsArgs = {\n  options?: Maybe<ProductVariantListOptions>;\n};\n\nexport type CollectionBreadcrumb = {\n  __typename?: 'CollectionBreadcrumb';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type CollectionFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  position?: Maybe<NumberOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type CollectionList = PaginatedList & {\n  __typename?: 'CollectionList';\n  items: Array<Collection>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CollectionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CollectionSortParameter>;\n  filter?: Maybe<CollectionFilterParameter>;\n};\n\nexport type CollectionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  position?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type CollectionTranslation = {\n  __typename?: 'CollectionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ConfigArg = {\n  __typename?: 'ConfigArg';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigArgDefinition = {\n  __typename?: 'ConfigArgDefinition';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  config?: Maybe<Scalars['JSON']>;\n};\n\nexport type ConfigArgInput = {\n  name: Scalars['String'];\n  type: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigurableOperation = {\n  __typename?: 'ConfigurableOperation';\n  code: Scalars['String'];\n  args: Array<ConfigArg>;\n};\n\nexport type ConfigurableOperationDefinition = {\n  __typename?: 'ConfigurableOperationDefinition';\n  code: Scalars['String'];\n  args: Array<ConfigArgDefinition>;\n  description: Scalars['String'];\n};\n\nexport type ConfigurableOperationInput = {\n  code: Scalars['String'];\n  arguments: Array<ConfigArgInput>;\n};\n\nexport type Coordinate = {\n  __typename?: 'Coordinate';\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type CoordinateInput = {\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type Country = Node & {\n  __typename?: 'Country';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  translations: Array<CountryTranslation>;\n};\n\nexport type CountryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type CountryList = PaginatedList & {\n  __typename?: 'CountryList';\n  items: Array<Country>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CountryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CountrySortParameter>;\n  filter?: Maybe<CountryFilterParameter>;\n};\n\nexport type CountrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CountryTranslation = {\n  __typename?: 'CountryTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type CountryTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type CreateAddressInput = {\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateAdministratorInput = {\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  password: Scalars['String'];\n  roleIds: Array<Scalars['ID']>;\n};\n\nexport type CreateAssetInput = {\n  file: Scalars['Upload'];\n};\n\nexport type CreateChannelInput = {\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultLanguageCode: LanguageCode;\n  pricesIncludeTax: Scalars['Boolean'];\n  currencyCode: CurrencyCode;\n  defaultTaxZoneId: Scalars['ID'];\n  defaultShippingZoneId: Scalars['ID'];\n};\n\nexport type CreateCollectionInput = {\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  parentId?: Maybe<Scalars['ID']>;\n  filters: Array<ConfigurableOperationInput>;\n  translations: Array<CreateCollectionTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateCollectionTranslationInput = {\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateCountryInput = {\n  code: Scalars['String'];\n  translations: Array<CountryTranslationInput>;\n  enabled: Scalars['Boolean'];\n};\n\nexport type CreateCustomerGroupInput = {\n  name: Scalars['String'];\n  customerIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type CreateCustomerInput = {\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetInput = {\n  code: Scalars['String'];\n  isPrivate: Scalars['Boolean'];\n  translations: Array<FacetTranslationInput>;\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetValueInput = {\n  facetId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetValueWithFacetInput = {\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n};\n\nexport type CreateGroupOptionInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n};\n\nexport type CreateProductCustomFieldsInput = {\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type CreateProductInput = {\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations: Array<ProductTranslationInput>;\n  customFields?: Maybe<CreateProductCustomFieldsInput>;\n};\n\nexport type CreateProductOptionGroupInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  options: Array<CreateGroupOptionInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductOptionInput = {\n  productOptionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductVariantCustomFieldsInput = {\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\n  Unit?: Maybe<Scalars['String']>;\n  Sales?: Maybe<Scalars['Int']>;\n};\n\nexport type CreateProductVariantInput = {\n  productId: Scalars['ID'];\n  translations: Array<ProductVariantTranslationInput>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku: Scalars['String'];\n  price?: Maybe<Scalars['Int']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  optionIds?: Maybe<Array<Scalars['ID']>>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<CreateProductVariantCustomFieldsInput>;\n};\n\nexport type CreateProductVariantOptionInput = {\n  optionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionTranslationInput>;\n};\n\nexport type CreatePromotionInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions: Array<ConfigurableOperationInput>;\n  actions: Array<ConfigurableOperationInput>;\n};\n\nexport type CreateRoleInput = {\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type CreateShippingMethodInput = {\n  code: Scalars['String'];\n  description: Scalars['String'];\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n};\n\nexport type CreateTaxCategoryInput = {\n  name: Scalars['String'];\n};\n\nexport type CreateTaxRateInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  categoryId: Scalars['ID'];\n  zoneId: Scalars['ID'];\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateZoneInput = {\n  name: Scalars['String'];\n  memberIds?: Maybe<Array<Scalars['ID']>>;\n};\n\n/**\n * @description\n * ISO 4217 currency code\n * \n * @docsCategory common\n */\nexport enum CurrencyCode {\n  /** United Arab Emirates dirham */\n  Aed = 'AED',\n  /** Afghan afghani */\n  Afn = 'AFN',\n  /** Albanian lek */\n  All = 'ALL',\n  /** Armenian dram */\n  Amd = 'AMD',\n  /** Netherlands Antillean guilder */\n  Ang = 'ANG',\n  /** Angolan kwanza */\n  Aoa = 'AOA',\n  /** Argentine peso */\n  Ars = 'ARS',\n  /** Australian dollar */\n  Aud = 'AUD',\n  /** Aruban florin */\n  Awg = 'AWG',\n  /** Azerbaijani manat */\n  Azn = 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  Bam = 'BAM',\n  /** Barbados dollar */\n  Bbd = 'BBD',\n  /** Bangladeshi taka */\n  Bdt = 'BDT',\n  /** Bulgarian lev */\n  Bgn = 'BGN',\n  /** Bahraini dinar */\n  Bhd = 'BHD',\n  /** Burundian franc */\n  Bif = 'BIF',\n  /** Bermudian dollar */\n  Bmd = 'BMD',\n  /** Brunei dollar */\n  Bnd = 'BND',\n  /** Boliviano */\n  Bob = 'BOB',\n  /** Brazilian real */\n  Brl = 'BRL',\n  /** Bahamian dollar */\n  Bsd = 'BSD',\n  /** Bhutanese ngultrum */\n  Btn = 'BTN',\n  /** Botswana pula */\n  Bwp = 'BWP',\n  /** Belarusian ruble */\n  Byn = 'BYN',\n  /** Belize dollar */\n  Bzd = 'BZD',\n  /** Canadian dollar */\n  Cad = 'CAD',\n  /** Congolese franc */\n  Cdf = 'CDF',\n  /** Swiss franc */\n  Chf = 'CHF',\n  /** Chilean peso */\n  Clp = 'CLP',\n  /** Renminbi (Chinese) yuan */\n  Cny = 'CNY',\n  /** Colombian peso */\n  Cop = 'COP',\n  /** Costa Rican colon */\n  Crc = 'CRC',\n  /** Cuban convertible peso */\n  Cuc = 'CUC',\n  /** Cuban peso */\n  Cup = 'CUP',\n  /** Cape Verde escudo */\n  Cve = 'CVE',\n  /** Czech koruna */\n  Czk = 'CZK',\n  /** Djiboutian franc */\n  Djf = 'DJF',\n  /** Danish krone */\n  Dkk = 'DKK',\n  /** Dominican peso */\n  Dop = 'DOP',\n  /** Algerian dinar */\n  Dzd = 'DZD',\n  /** Egyptian pound */\n  Egp = 'EGP',\n  /** Eritrean nakfa */\n  Ern = 'ERN',\n  /** Ethiopian birr */\n  Etb = 'ETB',\n  /** Euro */\n  Eur = 'EUR',\n  /** Fiji dollar */\n  Fjd = 'FJD',\n  /** Falkland Islands pound */\n  Fkp = 'FKP',\n  /** Pound sterling */\n  Gbp = 'GBP',\n  /** Georgian lari */\n  Gel = 'GEL',\n  /** Ghanaian cedi */\n  Ghs = 'GHS',\n  /** Gibraltar pound */\n  Gip = 'GIP',\n  /** Gambian dalasi */\n  Gmd = 'GMD',\n  /** Guinean franc */\n  Gnf = 'GNF',\n  /** Guatemalan quetzal */\n  Gtq = 'GTQ',\n  /** Guyanese dollar */\n  Gyd = 'GYD',\n  /** Hong Kong dollar */\n  Hkd = 'HKD',\n  /** Honduran lempira */\n  Hnl = 'HNL',\n  /** Croatian kuna */\n  Hrk = 'HRK',\n  /** Haitian gourde */\n  Htg = 'HTG',\n  /** Hungarian forint */\n  Huf = 'HUF',\n  /** Indonesian rupiah */\n  Idr = 'IDR',\n  /** Israeli new shekel */\n  Ils = 'ILS',\n  /** Indian rupee */\n  Inr = 'INR',\n  /** Iraqi dinar */\n  Iqd = 'IQD',\n  /** Iranian rial */\n  Irr = 'IRR',\n  /** Icelandic króna */\n  Isk = 'ISK',\n  /** Jamaican dollar */\n  Jmd = 'JMD',\n  /** Jordanian dinar */\n  Jod = 'JOD',\n  /** Japanese yen */\n  Jpy = 'JPY',\n  /** Kenyan shilling */\n  Kes = 'KES',\n  /** Kyrgyzstani som */\n  Kgs = 'KGS',\n  /** Cambodian riel */\n  Khr = 'KHR',\n  /** Comoro franc */\n  Kmf = 'KMF',\n  /** North Korean won */\n  Kpw = 'KPW',\n  /** South Korean won */\n  Krw = 'KRW',\n  /** Kuwaiti dinar */\n  Kwd = 'KWD',\n  /** Cayman Islands dollar */\n  Kyd = 'KYD',\n  /** Kazakhstani tenge */\n  Kzt = 'KZT',\n  /** Lao kip */\n  Lak = 'LAK',\n  /** Lebanese pound */\n  Lbp = 'LBP',\n  /** Sri Lankan rupee */\n  Lkr = 'LKR',\n  /** Liberian dollar */\n  Lrd = 'LRD',\n  /** Lesotho loti */\n  Lsl = 'LSL',\n  /** Libyan dinar */\n  Lyd = 'LYD',\n  /** Moroccan dirham */\n  Mad = 'MAD',\n  /** Moldovan leu */\n  Mdl = 'MDL',\n  /** Malagasy ariary */\n  Mga = 'MGA',\n  /** Macedonian denar */\n  Mkd = 'MKD',\n  /** Myanmar kyat */\n  Mmk = 'MMK',\n  /** Mongolian tögrög */\n  Mnt = 'MNT',\n  /** Macanese pataca */\n  Mop = 'MOP',\n  /** Mauritanian ouguiya */\n  Mru = 'MRU',\n  /** Mauritian rupee */\n  Mur = 'MUR',\n  /** Maldivian rufiyaa */\n  Mvr = 'MVR',\n  /** Malawian kwacha */\n  Mwk = 'MWK',\n  /** Mexican peso */\n  Mxn = 'MXN',\n  /** Malaysian ringgit */\n  Myr = 'MYR',\n  /** Mozambican metical */\n  Mzn = 'MZN',\n  /** Namibian dollar */\n  Nad = 'NAD',\n  /** Nigerian naira */\n  Ngn = 'NGN',\n  /** Nicaraguan córdoba */\n  Nio = 'NIO',\n  /** Norwegian krone */\n  Nok = 'NOK',\n  /** Nepalese rupee */\n  Npr = 'NPR',\n  /** New Zealand dollar */\n  Nzd = 'NZD',\n  /** Omani rial */\n  Omr = 'OMR',\n  /** Panamanian balboa */\n  Pab = 'PAB',\n  /** Peruvian sol */\n  Pen = 'PEN',\n  /** Papua New Guinean kina */\n  Pgk = 'PGK',\n  /** Philippine peso */\n  Php = 'PHP',\n  /** Pakistani rupee */\n  Pkr = 'PKR',\n  /** Polish złoty */\n  Pln = 'PLN',\n  /** Paraguayan guaraní */\n  Pyg = 'PYG',\n  /** Qatari riyal */\n  Qar = 'QAR',\n  /** Romanian leu */\n  Ron = 'RON',\n  /** Serbian dinar */\n  Rsd = 'RSD',\n  /** Russian ruble */\n  Rub = 'RUB',\n  /** Rwandan franc */\n  Rwf = 'RWF',\n  /** Saudi riyal */\n  Sar = 'SAR',\n  /** Solomon Islands dollar */\n  Sbd = 'SBD',\n  /** Seychelles rupee */\n  Scr = 'SCR',\n  /** Sudanese pound */\n  Sdg = 'SDG',\n  /** Swedish krona/kronor */\n  Sek = 'SEK',\n  /** Singapore dollar */\n  Sgd = 'SGD',\n  /** Saint Helena pound */\n  Shp = 'SHP',\n  /** Sierra Leonean leone */\n  Sll = 'SLL',\n  /** Somali shilling */\n  Sos = 'SOS',\n  /** Surinamese dollar */\n  Srd = 'SRD',\n  /** South Sudanese pound */\n  Ssp = 'SSP',\n  /** São Tomé and Príncipe dobra */\n  Stn = 'STN',\n  /** Salvadoran colón */\n  Svc = 'SVC',\n  /** Syrian pound */\n  Syp = 'SYP',\n  /** Swazi lilangeni */\n  Szl = 'SZL',\n  /** Thai baht */\n  Thb = 'THB',\n  /** Tajikistani somoni */\n  Tjs = 'TJS',\n  /** Turkmenistan manat */\n  Tmt = 'TMT',\n  /** Tunisian dinar */\n  Tnd = 'TND',\n  /** Tongan paʻanga */\n  Top = 'TOP',\n  /** Turkish lira */\n  Try = 'TRY',\n  /** Trinidad and Tobago dollar */\n  Ttd = 'TTD',\n  /** New Taiwan dollar */\n  Twd = 'TWD',\n  /** Tanzanian shilling */\n  Tzs = 'TZS',\n  /** Ukrainian hryvnia */\n  Uah = 'UAH',\n  /** Ugandan shilling */\n  Ugx = 'UGX',\n  /** United States dollar */\n  Usd = 'USD',\n  /** Uruguayan peso */\n  Uyu = 'UYU',\n  /** Uzbekistan som */\n  Uzs = 'UZS',\n  /** Venezuelan bolívar soberano */\n  Ves = 'VES',\n  /** Vietnamese đồng */\n  Vnd = 'VND',\n  /** Vanuatu vatu */\n  Vuv = 'VUV',\n  /** Samoan tala */\n  Wst = 'WST',\n  /** CFA franc BEAC */\n  Xaf = 'XAF',\n  /** East Caribbean dollar */\n  Xcd = 'XCD',\n  /** CFA franc BCEAO */\n  Xof = 'XOF',\n  /** CFP franc (franc Pacifique) */\n  Xpf = 'XPF',\n  /** Yemeni rial */\n  Yer = 'YER',\n  /** South African rand */\n  Zar = 'ZAR',\n  /** Zambian kwacha */\n  Zmw = 'ZMW',\n  /** Zimbabwean dollar */\n  Zwl = 'ZWL'\n}\n\nexport type CurrentUser = {\n  __typename?: 'CurrentUser';\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n  channels: Array<CurrentUserChannel>;\n};\n\nexport type CurrentUserChannel = {\n  __typename?: 'CurrentUserChannel';\n  id: Scalars['ID'];\n  token: Scalars['String'];\n  code: Scalars['String'];\n  permissions: Array<Permission>;\n};\n\nexport type Customer = Node & {\n  __typename?: 'Customer';\n  groups: Array<CustomerGroup>;\n  history: HistoryEntryList;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  addresses?: Maybe<Array<Address>>;\n  orders: OrderList;\n  user?: Maybe<User>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CustomerHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\n\nexport type CustomerOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\nexport type CustomerFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  title?: Maybe<StringOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  phoneNumber?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type CustomerGroup = Node & {\n  __typename?: 'CustomerGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  customers: CustomerList;\n};\n\n\nexport type CustomerGroupCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\nexport type CustomerGroupFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n};\n\nexport type CustomerGroupList = PaginatedList & {\n  __typename?: 'CustomerGroupList';\n  items: Array<CustomerGroup>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerGroupListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerGroupSortParameter>;\n  filter?: Maybe<CustomerGroupFilterParameter>;\n};\n\nexport type CustomerGroupSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CustomerList = PaginatedList & {\n  __typename?: 'CustomerList';\n  items: Array<Customer>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerSortParameter>;\n  filter?: Maybe<CustomerFilterParameter>;\n};\n\nexport type CustomerSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  title?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  phoneNumber?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type CustomField = {\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig;\n\nexport type CustomFields = {\n  __typename?: 'CustomFields';\n  Address: Array<CustomFieldConfig>;\n  Collection: Array<CustomFieldConfig>;\n  Customer: Array<CustomFieldConfig>;\n  Facet: Array<CustomFieldConfig>;\n  FacetValue: Array<CustomFieldConfig>;\n  GlobalSettings: Array<CustomFieldConfig>;\n  Order: Array<CustomFieldConfig>;\n  OrderLine: Array<CustomFieldConfig>;\n  Product: Array<CustomFieldConfig>;\n  ProductOption: Array<CustomFieldConfig>;\n  ProductOptionGroup: Array<CustomFieldConfig>;\n  ProductVariant: Array<CustomFieldConfig>;\n  User: Array<CustomFieldConfig>;\n};\n\nexport type DateOperators = {\n  eq?: Maybe<Scalars['DateTime']>;\n  before?: Maybe<Scalars['DateTime']>;\n  after?: Maybe<Scalars['DateTime']>;\n  between?: Maybe<DateRange>;\n};\n\nexport type DateRange = {\n  start: Scalars['DateTime'];\n  end: Scalars['DateTime'];\n};\n\n\n/**\n * Expects the same validation formats as the <input type=\"datetime-local\"> HTML element.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\n */\nexport type DateTimeCustomFieldConfig = CustomField & {\n  __typename?: 'DateTimeCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['String']>;\n  max?: Maybe<Scalars['String']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type DeletionResponse = {\n  __typename?: 'DeletionResponse';\n  result: DeletionResult;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport enum DeletionResult {\n  /** The entity was successfully deleted */\n  Deleted = 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NotDeleted = 'NOT_DELETED'\n}\n\nexport type Email = Node & {\n  __typename?: 'Email';\n  id: Scalars['ID'];\n  email: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type EmailAddInput = {\n  email: Scalars['String'];\n};\n\nexport type EmailFilterParameter = {\n  email?: Maybe<StringOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n};\n\nexport type EmailList = PaginatedList & {\n  __typename?: 'EmailList';\n  items: Array<Email>;\n  totalItems: Scalars['Int'];\n};\n\nexport type EmailListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<EmailSortParameter>;\n  filter?: Maybe<EmailFilterParameter>;\n};\n\nexport type EmailSortParameter = {\n  id?: Maybe<SortOrder>;\n  email?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type EmailUpdateInput = {\n  id: Scalars['ID'];\n  email: Scalars['String'];\n};\n\nexport type Facet = Node & {\n  __typename?: 'Facet';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  values: Array<FacetValue>;\n  translations: Array<FacetTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n};\n\nexport type FacetList = PaginatedList & {\n  __typename?: 'FacetList';\n  items: Array<Facet>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<FacetSortParameter>;\n  filter?: Maybe<FacetFilterParameter>;\n};\n\nexport type FacetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\nexport type FacetTranslation = {\n  __typename?: 'FacetTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetValue = Node & {\n  __typename?: 'FacetValue';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  facet: Facet;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/**\n * Which FacetValues are present in the products returned\n * by the search, and in what quantity.\n */\nexport type FacetValueResult = {\n  __typename?: 'FacetValueResult';\n  facetValue: FacetValue;\n  count: Scalars['Int'];\n};\n\nexport type FacetValueTranslation = {\n  __typename?: 'FacetValueTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetValueTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Feedback = Node & {\n  __typename?: 'Feedback';\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  feedback: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type FeedbackAddInput = {\n  name?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  feedback: Scalars['String'];\n};\n\nexport type FeedbackFilterParameter = {\n  name?: Maybe<StringOperators>;\n  email?: Maybe<StringOperators>;\n  phone?: Maybe<StringOperators>;\n  feedback?: Maybe<StringOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n};\n\nexport type FeedbackList = PaginatedList & {\n  __typename?: 'FeedbackList';\n  items: Array<Feedback>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FeedbackListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<FeedbackSortParameter>;\n  filter?: Maybe<FeedbackFilterParameter>;\n};\n\nexport type FeedbackSortParameter = {\n  id?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  email?: Maybe<SortOrder>;\n  phone?: Maybe<SortOrder>;\n  feedback?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type FeedbackUpdateInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  feedback: Scalars['String'];\n};\n\nexport type FloatCustomFieldConfig = CustomField & {\n  __typename?: 'FloatCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Float']>;\n  max?: Maybe<Scalars['Float']>;\n  step?: Maybe<Scalars['Float']>;\n};\n\nexport type Fulfillment = Node & {\n  __typename?: 'Fulfillment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  orderItems: Array<OrderItem>;\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n};\n\nexport type FulfillOrderInput = {\n  lines: Array<OrderLineInput>;\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n};\n\nexport type GlobalSettings = {\n  __typename?: 'GlobalSettings';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  availableLanguages: Array<LanguageCode>;\n  trackInventory: Scalars['Boolean'];\n  serverConfig: ServerConfig;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type HistoryEntry = Node & {\n  __typename?: 'HistoryEntry';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isPublic: Scalars['Boolean'];\n  type: HistoryEntryType;\n  administrator?: Maybe<Administrator>;\n  data: Scalars['JSON'];\n};\n\nexport type HistoryEntryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  isPublic?: Maybe<BooleanOperators>;\n  type?: Maybe<StringOperators>;\n};\n\nexport type HistoryEntryList = PaginatedList & {\n  __typename?: 'HistoryEntryList';\n  items: Array<HistoryEntry>;\n  totalItems: Scalars['Int'];\n};\n\nexport type HistoryEntryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<HistoryEntrySortParameter>;\n  filter?: Maybe<HistoryEntryFilterParameter>;\n};\n\nexport type HistoryEntrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport enum HistoryEntryType {\n  CustomerRegistered = 'CUSTOMER_REGISTERED',\n  CustomerVerified = 'CUSTOMER_VERIFIED',\n  CustomerDetailUpdated = 'CUSTOMER_DETAIL_UPDATED',\n  CustomerAddedToGroup = 'CUSTOMER_ADDED_TO_GROUP',\n  CustomerRemovedFromGroup = 'CUSTOMER_REMOVED_FROM_GROUP',\n  CustomerAddressCreated = 'CUSTOMER_ADDRESS_CREATED',\n  CustomerAddressUpdated = 'CUSTOMER_ADDRESS_UPDATED',\n  CustomerAddressDeleted = 'CUSTOMER_ADDRESS_DELETED',\n  CustomerPasswordUpdated = 'CUSTOMER_PASSWORD_UPDATED',\n  CustomerPasswordResetRequested = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CustomerPasswordResetVerified = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CustomerEmailUpdateRequested = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CustomerEmailUpdateVerified = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CustomerNote = 'CUSTOMER_NOTE',\n  OrderStateTransition = 'ORDER_STATE_TRANSITION',\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\n  OrderFullfillment = 'ORDER_FULLFILLMENT',\n  OrderCancellation = 'ORDER_CANCELLATION',\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\n  OrderNote = 'ORDER_NOTE',\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED'\n}\n\nexport type ImportInfo = {\n  __typename?: 'ImportInfo';\n  errors?: Maybe<Array<Scalars['String']>>;\n  processed: Scalars['Int'];\n  imported: Scalars['Int'];\n};\n\nexport type IntCustomFieldConfig = CustomField & {\n  __typename?: 'IntCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Int']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type Job = Node & {\n  __typename?: 'Job';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  startedAt?: Maybe<Scalars['DateTime']>;\n  settledAt?: Maybe<Scalars['DateTime']>;\n  queueName: Scalars['String'];\n  state: JobState;\n  progress: Scalars['Float'];\n  data?: Maybe<Scalars['JSON']>;\n  result?: Maybe<Scalars['JSON']>;\n  error?: Maybe<Scalars['JSON']>;\n  isSettled: Scalars['Boolean'];\n  duration: Scalars['Int'];\n};\n\nexport type JobFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  startedAt?: Maybe<DateOperators>;\n  settledAt?: Maybe<DateOperators>;\n  queueName?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  progress?: Maybe<NumberOperators>;\n  isSettled?: Maybe<BooleanOperators>;\n  duration?: Maybe<NumberOperators>;\n};\n\nexport type JobList = PaginatedList & {\n  __typename?: 'JobList';\n  items: Array<Job>;\n  totalItems: Scalars['Int'];\n};\n\nexport type JobListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<JobSortParameter>;\n  filter?: Maybe<JobFilterParameter>;\n};\n\nexport type JobQueue = {\n  __typename?: 'JobQueue';\n  name: Scalars['String'];\n  running: Scalars['Boolean'];\n};\n\nexport type JobSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  startedAt?: Maybe<SortOrder>;\n  settledAt?: Maybe<SortOrder>;\n  queueName?: Maybe<SortOrder>;\n  progress?: Maybe<SortOrder>;\n  duration?: Maybe<SortOrder>;\n};\n\n/**\n * @description\n * The state of a Job in the JobQueue\n * \n * @docsCategory common\n */\nexport enum JobState {\n  Pending = 'PENDING',\n  Running = 'RUNNING',\n  Completed = 'COMPLETED',\n  Retrying = 'RETRYING',\n  Failed = 'FAILED'\n}\n\n\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n * \n * @docsCategory common\n */\nexport enum LanguageCode {\n  /** Afrikaans */\n  Af = 'af',\n  /** Akan */\n  Ak = 'ak',\n  /** Albanian */\n  Sq = 'sq',\n  /** Amharic */\n  Am = 'am',\n  /** Arabic */\n  Ar = 'ar',\n  /** Armenian */\n  Hy = 'hy',\n  /** Assamese */\n  As = 'as',\n  /** Azerbaijani */\n  Az = 'az',\n  /** Bambara */\n  Bm = 'bm',\n  /** Bangla */\n  Bn = 'bn',\n  /** Basque */\n  Eu = 'eu',\n  /** Belarusian */\n  Be = 'be',\n  /** Bosnian */\n  Bs = 'bs',\n  /** Breton */\n  Br = 'br',\n  /** Bulgarian */\n  Bg = 'bg',\n  /** Burmese */\n  My = 'my',\n  /** Catalan */\n  Ca = 'ca',\n  /** Chechen */\n  Ce = 'ce',\n  /** Chinese */\n  Zh = 'zh',\n  /** Simplified Chinese */\n  ZhHans = 'zh_Hans',\n  /** Traditional Chinese */\n  ZhHant = 'zh_Hant',\n  /** Church Slavic */\n  Cu = 'cu',\n  /** Cornish */\n  Kw = 'kw',\n  /** Corsican */\n  Co = 'co',\n  /** Croatian */\n  Hr = 'hr',\n  /** Czech */\n  Cs = 'cs',\n  /** Danish */\n  Da = 'da',\n  /** Dutch */\n  Nl = 'nl',\n  /** Flemish */\n  NlBe = 'nl_BE',\n  /** Dzongkha */\n  Dz = 'dz',\n  /** English */\n  En = 'en',\n  /** Australian English */\n  EnAu = 'en_AU',\n  /** Canadian English */\n  EnCa = 'en_CA',\n  /** British English */\n  EnGb = 'en_GB',\n  /** American English */\n  EnUs = 'en_US',\n  /** Esperanto */\n  Eo = 'eo',\n  /** Estonian */\n  Et = 'et',\n  /** Ewe */\n  Ee = 'ee',\n  /** Faroese */\n  Fo = 'fo',\n  /** Finnish */\n  Fi = 'fi',\n  /** French */\n  Fr = 'fr',\n  /** Canadian French */\n  FrCa = 'fr_CA',\n  /** Swiss French */\n  FrCh = 'fr_CH',\n  /** Fulah */\n  Ff = 'ff',\n  /** Galician */\n  Gl = 'gl',\n  /** Ganda */\n  Lg = 'lg',\n  /** Georgian */\n  Ka = 'ka',\n  /** German */\n  De = 'de',\n  /** Austrian German */\n  DeAt = 'de_AT',\n  /** Swiss High German */\n  DeCh = 'de_CH',\n  /** Greek */\n  El = 'el',\n  /** Gujarati */\n  Gu = 'gu',\n  /** Haitian Creole */\n  Ht = 'ht',\n  /** Hausa */\n  Ha = 'ha',\n  /** Hebrew */\n  He = 'he',\n  /** Hindi */\n  Hi = 'hi',\n  /** Hungarian */\n  Hu = 'hu',\n  /** Icelandic */\n  Is = 'is',\n  /** Igbo */\n  Ig = 'ig',\n  /** Indonesian */\n  Id = 'id',\n  /** Interlingua */\n  Ia = 'ia',\n  /** Irish */\n  Ga = 'ga',\n  /** Italian */\n  It = 'it',\n  /** Japanese */\n  Ja = 'ja',\n  /** Javanese */\n  Jv = 'jv',\n  /** Kalaallisut */\n  Kl = 'kl',\n  /** Kannada */\n  Kn = 'kn',\n  /** Kashmiri */\n  Ks = 'ks',\n  /** Kazakh */\n  Kk = 'kk',\n  /** Khmer */\n  Km = 'km',\n  /** Kikuyu */\n  Ki = 'ki',\n  /** Kinyarwanda */\n  Rw = 'rw',\n  /** Korean */\n  Ko = 'ko',\n  /** Kurdish */\n  Ku = 'ku',\n  /** Kyrgyz */\n  Ky = 'ky',\n  /** Lao */\n  Lo = 'lo',\n  /** Latin */\n  La = 'la',\n  /** Latvian */\n  Lv = 'lv',\n  /** Lingala */\n  Ln = 'ln',\n  /** Lithuanian */\n  Lt = 'lt',\n  /** Luba-Katanga */\n  Lu = 'lu',\n  /** Luxembourgish */\n  Lb = 'lb',\n  /** Macedonian */\n  Mk = 'mk',\n  /** Malagasy */\n  Mg = 'mg',\n  /** Malay */\n  Ms = 'ms',\n  /** Malayalam */\n  Ml = 'ml',\n  /** Maltese */\n  Mt = 'mt',\n  /** Manx */\n  Gv = 'gv',\n  /** Maori */\n  Mi = 'mi',\n  /** Marathi */\n  Mr = 'mr',\n  /** Mongolian */\n  Mn = 'mn',\n  /** Nepali */\n  Ne = 'ne',\n  /** North Ndebele */\n  Nd = 'nd',\n  /** Northern Sami */\n  Se = 'se',\n  /** Norwegian Bokmål */\n  Nb = 'nb',\n  /** Norwegian Nynorsk */\n  Nn = 'nn',\n  /** Nyanja */\n  Ny = 'ny',\n  /** Odia */\n  Or = 'or',\n  /** Oromo */\n  Om = 'om',\n  /** Ossetic */\n  Os = 'os',\n  /** Pashto */\n  Ps = 'ps',\n  /** Persian */\n  Fa = 'fa',\n  /** Dari */\n  FaAf = 'fa_AF',\n  /** Polish */\n  Pl = 'pl',\n  /** Portuguese */\n  Pt = 'pt',\n  /** Brazilian Portuguese */\n  PtBr = 'pt_BR',\n  /** European Portuguese */\n  PtPt = 'pt_PT',\n  /** Punjabi */\n  Pa = 'pa',\n  /** Quechua */\n  Qu = 'qu',\n  /** Romanian */\n  Ro = 'ro',\n  /** Moldavian */\n  RoMd = 'ro_MD',\n  /** Romansh */\n  Rm = 'rm',\n  /** Rundi */\n  Rn = 'rn',\n  /** Russian */\n  Ru = 'ru',\n  /** Samoan */\n  Sm = 'sm',\n  /** Sango */\n  Sg = 'sg',\n  /** Sanskrit */\n  Sa = 'sa',\n  /** Scottish Gaelic */\n  Gd = 'gd',\n  /** Serbian */\n  Sr = 'sr',\n  /** Shona */\n  Sn = 'sn',\n  /** Sichuan Yi */\n  Ii = 'ii',\n  /** Sindhi */\n  Sd = 'sd',\n  /** Sinhala */\n  Si = 'si',\n  /** Slovak */\n  Sk = 'sk',\n  /** Slovenian */\n  Sl = 'sl',\n  /** Somali */\n  So = 'so',\n  /** Southern Sotho */\n  St = 'st',\n  /** Spanish */\n  Es = 'es',\n  /** European Spanish */\n  EsEs = 'es_ES',\n  /** Mexican Spanish */\n  EsMx = 'es_MX',\n  /** Sundanese */\n  Su = 'su',\n  /** Swahili */\n  Sw = 'sw',\n  /** Congo Swahili */\n  SwCd = 'sw_CD',\n  /** Swedish */\n  Sv = 'sv',\n  /** Tajik */\n  Tg = 'tg',\n  /** Tamil */\n  Ta = 'ta',\n  /** Tatar */\n  Tt = 'tt',\n  /** Telugu */\n  Te = 'te',\n  /** Thai */\n  Th = 'th',\n  /** Tibetan */\n  Bo = 'bo',\n  /** Tigrinya */\n  Ti = 'ti',\n  /** Tongan */\n  To = 'to',\n  /** Turkish */\n  Tr = 'tr',\n  /** Turkmen */\n  Tk = 'tk',\n  /** Ukrainian */\n  Uk = 'uk',\n  /** Urdu */\n  Ur = 'ur',\n  /** Uyghur */\n  Ug = 'ug',\n  /** Uzbek */\n  Uz = 'uz',\n  /** Vietnamese */\n  Vi = 'vi',\n  /** Volapük */\n  Vo = 'vo',\n  /** Welsh */\n  Cy = 'cy',\n  /** Western Frisian */\n  Fy = 'fy',\n  /** Wolof */\n  Wo = 'wo',\n  /** Xhosa */\n  Xh = 'xh',\n  /** Yiddish */\n  Yi = 'yi',\n  /** Yoruba */\n  Yo = 'yo',\n  /** Zulu */\n  Zu = 'zu'\n}\n\nexport type LocaleStringCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleStringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n};\n\nexport type LocalizedString = {\n  __typename?: 'LocalizedString';\n  languageCode: LanguageCode;\n  value: Scalars['String'];\n};\n\nexport enum LogicalOperator {\n  And = 'AND',\n  Or = 'OR'\n}\n\nexport type LoginResult = {\n  __typename?: 'LoginResult';\n  user: CurrentUser;\n};\n\nexport type MoveCollectionInput = {\n  collectionId: Scalars['ID'];\n  parentId: Scalars['ID'];\n  index: Scalars['Int'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Create a new Administrator */\n  createAdministrator: Administrator;\n  /** Update an existing Administrator */\n  updateAdministrator: Administrator;\n  /** Assign a Role to an Administrator */\n  assignRoleToAdministrator: Administrator;\n  /** Create a new Asset */\n  createAssets: Array<Asset>;\n  /** Update an existing Asset */\n  updateAsset: Asset;\n  /** Delete an Asset */\n  deleteAsset: DeletionResponse;\n  login: LoginResult;\n  logout: Scalars['Boolean'];\n  /** Create a new Channel */\n  createChannel: Channel;\n  /** Update an existing Channel */\n  updateChannel: Channel;\n  /** Delete a Channel */\n  deleteChannel: DeletionResponse;\n  /** Create a new Collection */\n  createCollection: Collection;\n  /** Update an existing Collection */\n  updateCollection: Collection;\n  /** Delete a Collection and all of its descendants */\n  deleteCollection: DeletionResponse;\n  /** Move a Collection to a different parent or index */\n  moveCollection: Collection;\n  /** Create a new Country */\n  createCountry: Country;\n  /** Update an existing Country */\n  updateCountry: Country;\n  /** Delete a Country */\n  deleteCountry: DeletionResponse;\n  /** Create a new CustomerGroup */\n  createCustomerGroup: CustomerGroup;\n  /** Update an existing CustomerGroup */\n  updateCustomerGroup: CustomerGroup;\n  /** Delete a CustomerGroup */\n  deleteCustomerGroup: DeletionResponse;\n  /** Add Customers to a CustomerGroup */\n  addCustomersToGroup: CustomerGroup;\n  /** Remove Customers from a CustomerGroup */\n  removeCustomersFromGroup: CustomerGroup;\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\n  createCustomer: Customer;\n  /** Update an existing Customer */\n  updateCustomer: Customer;\n  /** Delete a Customer */\n  deleteCustomer: DeletionResponse;\n  /** Create a new Address and associate it with the Customer specified by customerId */\n  createCustomerAddress: Address;\n  /** Update an existing Address */\n  updateCustomerAddress: Address;\n  /** Update an existing Address */\n  deleteCustomerAddress: Scalars['Boolean'];\n  addNoteToCustomer: Customer;\n  updateCustomerNote: HistoryEntry;\n  deleteCustomerNote: DeletionResponse;\n  /** Create a new Facet */\n  createFacet: Facet;\n  /** Update an existing Facet */\n  updateFacet: Facet;\n  /** Delete an existing Facet */\n  deleteFacet: DeletionResponse;\n  /** Create one or more FacetValues */\n  createFacetValues: Array<FacetValue>;\n  /** Update one or more FacetValues */\n  updateFacetValues: Array<FacetValue>;\n  /** Delete one or more FacetValues */\n  deleteFacetValues: Array<DeletionResponse>;\n  updateGlobalSettings: GlobalSettings;\n  importProducts?: Maybe<ImportInfo>;\n  /** Remove all settled jobs in the given queues olfer than the given date. Returns the number of jobs deleted. */\n  removeSettledJobs: Scalars['Int'];\n  settlePayment: Payment;\n  fulfillOrder: Fulfillment;\n  cancelOrder: Order;\n  refundOrder: Refund;\n  settleRefund: Refund;\n  addNoteToOrder: Order;\n  updateOrderNote: HistoryEntry;\n  deleteOrderNote: DeletionResponse;\n  /** Update an existing PaymentMethod */\n  updatePaymentMethod: PaymentMethod;\n  /** Create a new ProductOptionGroup */\n  createProductOptionGroup: ProductOptionGroup;\n  /** Update an existing ProductOptionGroup */\n  updateProductOptionGroup: ProductOptionGroup;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  createProductOption: ProductOption;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  updateProductOption: ProductOption;\n  reindex: Job;\n  /** Create a new Product */\n  createProduct: Product;\n  /** Update an existing Product */\n  updateProduct: Product;\n  /** Delete a Product */\n  deleteProduct: DeletionResponse;\n  /** Add an OptionGroup to a Product */\n  addOptionGroupToProduct: Product;\n  /** Remove an OptionGroup from a Product */\n  removeOptionGroupFromProduct: Product;\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\n  createProductVariants: Array<Maybe<ProductVariant>>;\n  /** Update existing ProductVariants */\n  updateProductVariants: Array<Maybe<ProductVariant>>;\n  /** Delete a ProductVariant */\n  deleteProductVariant: DeletionResponse;\n  /** Assigns Products to the specified Channel */\n  assignProductsToChannel: Array<Product>;\n  /** Removes Products from the specified Channel */\n  removeProductsFromChannel: Array<Product>;\n  createPromotion: Promotion;\n  updatePromotion: Promotion;\n  deletePromotion: DeletionResponse;\n  /** Create a new Role */\n  createRole: Role;\n  /** Update an existing Role */\n  updateRole: Role;\n  /** Delete an existing Role */\n  deleteRole: DeletionResponse;\n  /** Create a new ShippingMethod */\n  createShippingMethod: ShippingMethod;\n  /** Update an existing ShippingMethod */\n  updateShippingMethod: ShippingMethod;\n  /** Delete a ShippingMethod */\n  deleteShippingMethod: DeletionResponse;\n  /** Create a new TaxCategory */\n  createTaxCategory: TaxCategory;\n  /** Update an existing TaxCategory */\n  updateTaxCategory: TaxCategory;\n  /** Deletes a TaxCategory */\n  deleteTaxCategory: DeletionResponse;\n  /** Create a new TaxRate */\n  createTaxRate: TaxRate;\n  /** Update an existing TaxRate */\n  updateTaxRate: TaxRate;\n  /** Delete a TaxRate */\n  deleteTaxRate: DeletionResponse;\n  /** Create a new Zone */\n  createZone: Zone;\n  /** Update an existing Zone */\n  updateZone: Zone;\n  /** Delete a Zone */\n  deleteZone: DeletionResponse;\n  /** Add members to a Zone */\n  addMembersToZone: Zone;\n  /** Remove members from a Zone */\n  removeMembersFromZone: Zone;\n  updateCrossSellingProducts: Scalars['Boolean'];\n  updateUpSellingProducts: Scalars['Boolean'];\n  updateProductVariantBulkDiscounts: Scalars['Boolean'];\n  updateProductVariantBulkDiscountsBySku: Scalars['Boolean'];\n  updateProductReview: ProductReview;\n  approveProductReview?: Maybe<ProductReview>;\n  rejectProductReview?: Maybe<ProductReview>;\n  addFeedback: Feedback;\n  updateFeedback: Feedback;\n  deleteFeedback: Feedback;\n  deleteAllFeedbacks: Scalars['Boolean'];\n  addSubscriptionEmail: Array<Maybe<Email>>;\n  updateSubscriptionEmail: Array<Maybe<Email>>;\n  deleteSubscriptionEmail: Array<Maybe<Email>>;\n  deleteAllSubscriptionEmails: Scalars['Boolean'];\n  addSubscriptionPhone: Array<Maybe<Phone>>;\n  updateSubscriptionPhone: Array<Maybe<Phone>>;\n  deleteSubscriptionPhone: Array<Maybe<Phone>>;\n  deleteAllSubscriptionPhones: Scalars['Boolean'];\n};\n\n\nexport type MutationCreateAdministratorArgs = {\n  input: CreateAdministratorInput;\n};\n\n\nexport type MutationUpdateAdministratorArgs = {\n  input: UpdateAdministratorInput;\n};\n\n\nexport type MutationAssignRoleToAdministratorArgs = {\n  administratorId: Scalars['ID'];\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationCreateAssetsArgs = {\n  input: Array<CreateAssetInput>;\n};\n\n\nexport type MutationUpdateAssetArgs = {\n  input: UpdateAssetInput;\n};\n\n\nexport type MutationDeleteAssetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationLoginArgs = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateChannelArgs = {\n  input: CreateChannelInput;\n};\n\n\nexport type MutationUpdateChannelArgs = {\n  input: UpdateChannelInput;\n};\n\n\nexport type MutationDeleteChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCollectionArgs = {\n  input: CreateCollectionInput;\n};\n\n\nexport type MutationUpdateCollectionArgs = {\n  input: UpdateCollectionInput;\n};\n\n\nexport type MutationDeleteCollectionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationMoveCollectionArgs = {\n  input: MoveCollectionInput;\n};\n\n\nexport type MutationCreateCountryArgs = {\n  input: CreateCountryInput;\n};\n\n\nexport type MutationUpdateCountryArgs = {\n  input: UpdateCountryInput;\n};\n\n\nexport type MutationDeleteCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCustomerGroupArgs = {\n  input: CreateCustomerGroupInput;\n};\n\n\nexport type MutationUpdateCustomerGroupArgs = {\n  input: UpdateCustomerGroupInput;\n};\n\n\nexport type MutationDeleteCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddCustomersToGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveCustomersFromGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationCreateCustomerArgs = {\n  input: CreateCustomerInput;\n  password?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input: UpdateCustomerInput;\n};\n\n\nexport type MutationDeleteCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCustomerAddressArgs = {\n  customerId: Scalars['ID'];\n  input: CreateAddressInput;\n};\n\n\nexport type MutationUpdateCustomerAddressArgs = {\n  input: UpdateAddressInput;\n};\n\n\nexport type MutationDeleteCustomerAddressArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddNoteToCustomerArgs = {\n  input: AddNoteToCustomerInput;\n};\n\n\nexport type MutationUpdateCustomerNoteArgs = {\n  input: UpdateCustomerNoteInput;\n};\n\n\nexport type MutationDeleteCustomerNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateFacetArgs = {\n  input: CreateFacetInput;\n};\n\n\nexport type MutationUpdateFacetArgs = {\n  input: UpdateFacetInput;\n};\n\n\nexport type MutationDeleteFacetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateFacetValuesArgs = {\n  input: Array<CreateFacetValueInput>;\n};\n\n\nexport type MutationUpdateFacetValuesArgs = {\n  input: Array<UpdateFacetValueInput>;\n};\n\n\nexport type MutationDeleteFacetValuesArgs = {\n  ids: Array<Scalars['ID']>;\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationUpdateGlobalSettingsArgs = {\n  input: UpdateGlobalSettingsInput;\n};\n\n\nexport type MutationImportProductsArgs = {\n  csvFile: Scalars['Upload'];\n};\n\n\nexport type MutationRemoveSettledJobsArgs = {\n  queueNames?: Maybe<Array<Scalars['String']>>;\n  olderThan?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type MutationSettlePaymentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationFulfillOrderArgs = {\n  input: FulfillOrderInput;\n};\n\n\nexport type MutationCancelOrderArgs = {\n  input: CancelOrderInput;\n};\n\n\nexport type MutationRefundOrderArgs = {\n  input: RefundOrderInput;\n};\n\n\nexport type MutationSettleRefundArgs = {\n  input: SettleRefundInput;\n};\n\n\nexport type MutationAddNoteToOrderArgs = {\n  input: AddNoteToOrderInput;\n};\n\n\nexport type MutationUpdateOrderNoteArgs = {\n  input: UpdateOrderNoteInput;\n};\n\n\nexport type MutationDeleteOrderNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdatePaymentMethodArgs = {\n  input: UpdatePaymentMethodInput;\n};\n\n\nexport type MutationCreateProductOptionGroupArgs = {\n  input: CreateProductOptionGroupInput;\n};\n\n\nexport type MutationUpdateProductOptionGroupArgs = {\n  input: UpdateProductOptionGroupInput;\n};\n\n\nexport type MutationCreateProductOptionArgs = {\n  input: CreateProductOptionInput;\n};\n\n\nexport type MutationUpdateProductOptionArgs = {\n  input: UpdateProductOptionInput;\n};\n\n\nexport type MutationCreateProductArgs = {\n  input: CreateProductInput;\n};\n\n\nexport type MutationUpdateProductArgs = {\n  input: UpdateProductInput;\n};\n\n\nexport type MutationDeleteProductArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddOptionGroupToProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveOptionGroupFromProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationCreateProductVariantsArgs = {\n  input: Array<CreateProductVariantInput>;\n};\n\n\nexport type MutationUpdateProductVariantsArgs = {\n  input: Array<UpdateProductVariantInput>;\n};\n\n\nexport type MutationDeleteProductVariantArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAssignProductsToChannelArgs = {\n  input: AssignProductsToChannelInput;\n};\n\n\nexport type MutationRemoveProductsFromChannelArgs = {\n  input: RemoveProductsFromChannelInput;\n};\n\n\nexport type MutationCreatePromotionArgs = {\n  input: CreatePromotionInput;\n};\n\n\nexport type MutationUpdatePromotionArgs = {\n  input: UpdatePromotionInput;\n};\n\n\nexport type MutationDeletePromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input: CreateRoleInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateShippingMethodArgs = {\n  input: CreateShippingMethodInput;\n};\n\n\nexport type MutationUpdateShippingMethodArgs = {\n  input: UpdateShippingMethodInput;\n};\n\n\nexport type MutationDeleteShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateTaxCategoryArgs = {\n  input: CreateTaxCategoryInput;\n};\n\n\nexport type MutationUpdateTaxCategoryArgs = {\n  input: UpdateTaxCategoryInput;\n};\n\n\nexport type MutationDeleteTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateTaxRateArgs = {\n  input: CreateTaxRateInput;\n};\n\n\nexport type MutationUpdateTaxRateArgs = {\n  input: UpdateTaxRateInput;\n};\n\n\nexport type MutationDeleteTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateZoneArgs = {\n  input: CreateZoneInput;\n};\n\n\nexport type MutationUpdateZoneArgs = {\n  input: UpdateZoneInput;\n};\n\n\nexport type MutationDeleteZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddMembersToZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveMembersFromZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateCrossSellingProductsArgs = {\n  productId: Scalars['ID'];\n  productIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateUpSellingProductsArgs = {\n  productId: Scalars['ID'];\n  productIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateProductVariantBulkDiscountsArgs = {\n  productVariantId: Scalars['ID'];\n  discounts: Array<BulkDiscountInput>;\n};\n\n\nexport type MutationUpdateProductVariantBulkDiscountsBySkuArgs = {\n  productVariantSku: Scalars['String'];\n  discounts: Array<BulkDiscountInput>;\n};\n\n\nexport type MutationUpdateProductReviewArgs = {\n  input: UpdateProductReviewInput;\n};\n\n\nexport type MutationApproveProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationRejectProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddFeedbackArgs = {\n  input: FeedbackAddInput;\n};\n\n\nexport type MutationUpdateFeedbackArgs = {\n  input: FeedbackUpdateInput;\n};\n\n\nexport type MutationDeleteFeedbackArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddSubscriptionEmailArgs = {\n  input: Array<EmailAddInput>;\n};\n\n\nexport type MutationUpdateSubscriptionEmailArgs = {\n  input: Array<EmailUpdateInput>;\n};\n\n\nexport type MutationDeleteSubscriptionEmailArgs = {\n  id: Array<Scalars['ID']>;\n};\n\n\nexport type MutationAddSubscriptionPhoneArgs = {\n  input: Array<PhoneAddInput>;\n};\n\n\nexport type MutationUpdateSubscriptionPhoneArgs = {\n  input: Array<PhoneUpdateInput>;\n};\n\n\nexport type MutationDeleteSubscriptionPhoneArgs = {\n  id: Array<Scalars['ID']>;\n};\n\nexport type Node = {\n  id: Scalars['ID'];\n};\n\nexport type NumberOperators = {\n  eq?: Maybe<Scalars['Float']>;\n  lt?: Maybe<Scalars['Float']>;\n  lte?: Maybe<Scalars['Float']>;\n  gt?: Maybe<Scalars['Float']>;\n  gte?: Maybe<Scalars['Float']>;\n  between?: Maybe<NumberRange>;\n};\n\nexport type NumberRange = {\n  start: Scalars['Float'];\n  end: Scalars['Float'];\n};\n\nexport type Order = Node & {\n  __typename?: 'Order';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  /** A unique code for the Order */\n  code: Scalars['String'];\n  state: Scalars['String'];\n  /** An order is active as long as the payment process has not been completed */\n  active: Scalars['Boolean'];\n  customer?: Maybe<Customer>;\n  shippingAddress?: Maybe<OrderAddress>;\n  billingAddress?: Maybe<OrderAddress>;\n  lines: Array<OrderLine>;\n  /** Order-level adjustments to the order total, such as discounts from promotions */\n  adjustments: Array<Adjustment>;\n  couponCodes: Array<Scalars['String']>;\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\n  promotions: Array<Promotion>;\n  payments?: Maybe<Array<Payment>>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  subTotalBeforeTax: Scalars['Int'];\n  /** The subTotal is the total of the OrderLines, before order-level promotions and shipping has been applied. */\n  subTotal: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  shipping: Scalars['Int'];\n  shippingWithTax: Scalars['Int'];\n  shippingMethod?: Maybe<ShippingMethod>;\n  totalBeforeTax: Scalars['Int'];\n  total: Scalars['Int'];\n  history: HistoryEntryList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type OrderHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\nexport type OrderAddress = {\n  __typename?: 'OrderAddress';\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n};\n\nexport type OrderFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  active?: Maybe<BooleanOperators>;\n  subTotalBeforeTax?: Maybe<NumberOperators>;\n  subTotal?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  shipping?: Maybe<NumberOperators>;\n  shippingWithTax?: Maybe<NumberOperators>;\n  totalBeforeTax?: Maybe<NumberOperators>;\n  total?: Maybe<NumberOperators>;\n};\n\nexport type OrderItem = Node & {\n  __typename?: 'OrderItem';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  cancelled: Scalars['Boolean'];\n  unitPrice: Scalars['Int'];\n  unitPriceWithTax: Scalars['Int'];\n  unitPriceIncludesTax: Scalars['Boolean'];\n  taxRate: Scalars['Float'];\n  adjustments: Array<Adjustment>;\n  fulfillment?: Maybe<Fulfillment>;\n  refundId?: Maybe<Scalars['ID']>;\n};\n\nexport type OrderLine = Node & {\n  __typename?: 'OrderLine';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  featuredAsset?: Maybe<Asset>;\n  unitPrice: Scalars['Int'];\n  unitPriceWithTax: Scalars['Int'];\n  quantity: Scalars['Int'];\n  items: Array<OrderItem>;\n  totalPrice: Scalars['Int'];\n  adjustments: Array<Adjustment>;\n  order: Order;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderLineInput = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type OrderList = PaginatedList & {\n  __typename?: 'OrderList';\n  items: Array<Order>;\n  totalItems: Scalars['Int'];\n};\n\nexport type OrderListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<OrderSortParameter>;\n  filter?: Maybe<OrderFilterParameter>;\n};\n\nexport type OrderSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  subTotalBeforeTax?: Maybe<SortOrder>;\n  subTotal?: Maybe<SortOrder>;\n  shipping?: Maybe<SortOrder>;\n  shippingWithTax?: Maybe<SortOrder>;\n  totalBeforeTax?: Maybe<SortOrder>;\n  total?: Maybe<SortOrder>;\n};\n\nexport type PaginatedList = {\n  items: Array<Node>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Payment = Node & {\n  __typename?: 'Payment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  method: Scalars['String'];\n  amount: Scalars['Int'];\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  errorMessage?: Maybe<Scalars['String']>;\n  refunds: Array<Refund>;\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type PaymentMethod = Node & {\n  __typename?: 'PaymentMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  configArgs: Array<ConfigArg>;\n};\n\nexport type PaymentMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PaymentMethodList = PaginatedList & {\n  __typename?: 'PaymentMethodList';\n  items: Array<PaymentMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PaymentMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PaymentMethodSortParameter>;\n  filter?: Maybe<PaymentMethodFilterParameter>;\n};\n\nexport type PaymentMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\n/**\n * \"\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n * \n * @docsCategory common\n */\nexport enum Permission {\n  /**  The Authenticated role means simply that the user is logged in  */\n  Authenticated = 'Authenticated',\n  /**  SuperAdmin can perform the most sensitive tasks */\n  SuperAdmin = 'SuperAdmin',\n  /**  Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner = 'Owner',\n  /**  Public means any unauthenticated user may perform the operation  */\n  Public = 'Public',\n  CreateCatalog = 'CreateCatalog',\n  ReadCatalog = 'ReadCatalog',\n  UpdateCatalog = 'UpdateCatalog',\n  DeleteCatalog = 'DeleteCatalog',\n  CreateCustomer = 'CreateCustomer',\n  ReadCustomer = 'ReadCustomer',\n  UpdateCustomer = 'UpdateCustomer',\n  DeleteCustomer = 'DeleteCustomer',\n  CreateAdministrator = 'CreateAdministrator',\n  ReadAdministrator = 'ReadAdministrator',\n  UpdateAdministrator = 'UpdateAdministrator',\n  DeleteAdministrator = 'DeleteAdministrator',\n  CreateOrder = 'CreateOrder',\n  ReadOrder = 'ReadOrder',\n  UpdateOrder = 'UpdateOrder',\n  DeleteOrder = 'DeleteOrder',\n  CreatePromotion = 'CreatePromotion',\n  ReadPromotion = 'ReadPromotion',\n  UpdatePromotion = 'UpdatePromotion',\n  DeletePromotion = 'DeletePromotion',\n  CreateSettings = 'CreateSettings',\n  ReadSettings = 'ReadSettings',\n  UpdateSettings = 'UpdateSettings',\n  DeleteSettings = 'DeleteSettings'\n}\n\nexport type Phone = Node & {\n  __typename?: 'Phone';\n  id: Scalars['ID'];\n  phone: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type PhoneAddInput = {\n  phone: Scalars['String'];\n};\n\nexport type PhoneFilterParameter = {\n  phone?: Maybe<StringOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n};\n\nexport type PhoneList = PaginatedList & {\n  __typename?: 'PhoneList';\n  items: Array<Phone>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PhoneListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PhoneSortParameter>;\n  filter?: Maybe<PhoneFilterParameter>;\n};\n\nexport type PhoneSortParameter = {\n  id?: Maybe<SortOrder>;\n  phone?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type PhoneUpdateInput = {\n  id: Scalars['ID'];\n  phone: Scalars['String'];\n};\n\n/** The price range where the result has more than one price */\nexport type PriceRange = {\n  __typename?: 'PriceRange';\n  min: Scalars['Int'];\n  max: Scalars['Int'];\n};\n\nexport type Product = Node & {\n  __typename?: 'Product';\n  enabled: Scalars['Boolean'];\n  channels: Array<Channel>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  variants: Array<ProductVariant>;\n  optionGroups: Array<ProductOptionGroup>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductTranslation>;\n  collections: Array<Collection>;\n  recommendations: Array<ProductRecommendation>;\n  reviews: ProductReviewList;\n  reviewsHistogram: Array<ProductReviewHistogramItem>;\n  customFields?: Maybe<ProductCustomFields>;\n};\n\n\nexport type ProductReviewsArgs = {\n  options?: Maybe<ProductReviewListOptions>;\n};\n\nexport type ProductCustomFields = {\n  __typename?: 'ProductCustomFields';\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type ProductFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n  productRecommendationsEnabled?: Maybe<BooleanOperators>;\n  reviewRating?: Maybe<NumberOperators>;\n  reviewCount?: Maybe<NumberOperators>;\n};\n\nexport type ProductList = PaginatedList & {\n  __typename?: 'ProductList';\n  items: Array<Product>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductSortParameter>;\n  filter?: Maybe<ProductFilterParameter>;\n};\n\nexport type ProductOption = Node & {\n  __typename?: 'ProductOption';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  groupId: Scalars['ID'];\n  translations: Array<ProductOptionTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionGroup = Node & {\n  __typename?: 'ProductOptionGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  translations: Array<ProductOptionGroupTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionGroupTranslation = {\n  __typename?: 'ProductOptionGroupTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductOptionGroupTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionTranslation = {\n  __typename?: 'ProductOptionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductOptionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductRecommendation = {\n  __typename?: 'ProductRecommendation';\n  product: Product;\n  recommendation: Product;\n  type: RecommendationType;\n};\n\nexport type ProductReview = Node & {\n  __typename?: 'ProductReview';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  product: Product;\n  productVariant?: Maybe<ProductVariant>;\n  summary: Scalars['String'];\n  body?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Customer>;\n  authorName: Scalars['String'];\n  authorLocation?: Maybe<Scalars['String']>;\n  upvotes: Scalars['Int'];\n  downvotes: Scalars['Int'];\n  state: Scalars['String'];\n  response?: Maybe<Scalars['String']>;\n  responseCreatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ProductReviewFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  summary?: Maybe<StringOperators>;\n  body?: Maybe<StringOperators>;\n  rating?: Maybe<NumberOperators>;\n  authorName?: Maybe<StringOperators>;\n  authorLocation?: Maybe<StringOperators>;\n  upvotes?: Maybe<NumberOperators>;\n  downvotes?: Maybe<NumberOperators>;\n  state?: Maybe<StringOperators>;\n  response?: Maybe<StringOperators>;\n  responseCreatedAt?: Maybe<DateOperators>;\n};\n\nexport type ProductReviewHistogramItem = {\n  __typename?: 'ProductReviewHistogramItem';\n  bin: Scalars['Int'];\n  frequency: Scalars['Int'];\n};\n\nexport type ProductReviewList = PaginatedList & {\n  __typename?: 'ProductReviewList';\n  items: Array<ProductReview>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductReviewListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductReviewSortParameter>;\n  filter?: Maybe<ProductReviewFilterParameter>;\n};\n\nexport type ProductReviewSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  summary?: Maybe<SortOrder>;\n  body?: Maybe<SortOrder>;\n  rating?: Maybe<SortOrder>;\n  authorName?: Maybe<SortOrder>;\n  authorLocation?: Maybe<SortOrder>;\n  upvotes?: Maybe<SortOrder>;\n  downvotes?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  response?: Maybe<SortOrder>;\n  responseCreatedAt?: Maybe<SortOrder>;\n};\n\nexport type ProductSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n  productRecommendationsEnabled?: Maybe<SortOrder>;\n  reviewRating?: Maybe<SortOrder>;\n  reviewCount?: Maybe<SortOrder>;\n};\n\nexport type ProductTranslation = {\n  __typename?: 'ProductTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ProductTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductVariant = Node & {\n  __typename?: 'ProductVariant';\n  enabled: Scalars['Boolean'];\n  stockOnHand: Scalars['Int'];\n  trackInventory: Scalars['Boolean'];\n  stockMovements: StockMovementList;\n  id: Scalars['ID'];\n  productId: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  sku: Scalars['String'];\n  name: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  price: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  priceIncludesTax: Scalars['Boolean'];\n  priceWithTax: Scalars['Int'];\n  taxRateApplied: TaxRate;\n  taxCategory: TaxCategory;\n  options: Array<ProductOption>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductVariantTranslation>;\n  bulkDiscounts: Array<BulkDiscount>;\n  customFields?: Maybe<ProductVariantCustomFields>;\n};\n\n\nexport type ProductVariantStockMovementsArgs = {\n  options?: Maybe<StockMovementListOptions>;\n};\n\nexport type ProductVariantCustomFields = {\n  __typename?: 'ProductVariantCustomFields';\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\n  Unit?: Maybe<Scalars['String']>;\n  Sales?: Maybe<Scalars['Int']>;\n};\n\nexport type ProductVariantFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  stockOnHand?: Maybe<NumberOperators>;\n  trackInventory?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  sku?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  price?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  priceIncludesTax?: Maybe<BooleanOperators>;\n  priceWithTax?: Maybe<NumberOperators>;\n  bulkDiscountEnabled?: Maybe<BooleanOperators>;\n  Unit?: Maybe<StringOperators>;\n  Sales?: Maybe<NumberOperators>;\n};\n\nexport type ProductVariantList = PaginatedList & {\n  __typename?: 'ProductVariantList';\n  items: Array<ProductVariant>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductVariantSortParameter>;\n  filter?: Maybe<ProductVariantFilterParameter>;\n};\n\nexport type ProductVariantSortParameter = {\n  stockOnHand?: Maybe<SortOrder>;\n  id?: Maybe<SortOrder>;\n  productId?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  sku?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n  priceWithTax?: Maybe<SortOrder>;\n  bulkDiscountEnabled?: Maybe<SortOrder>;\n  Unit?: Maybe<SortOrder>;\n  Sales?: Maybe<SortOrder>;\n};\n\nexport type ProductVariantTranslation = {\n  __typename?: 'ProductVariantTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductVariantTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Promotion = Node & {\n  __typename?: 'Promotion';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  conditions: Array<ConfigurableOperation>;\n  actions: Array<ConfigurableOperation>;\n};\n\nexport type PromotionFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  startsAt?: Maybe<DateOperators>;\n  endsAt?: Maybe<DateOperators>;\n  couponCode?: Maybe<StringOperators>;\n  perCustomerUsageLimit?: Maybe<NumberOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PromotionList = PaginatedList & {\n  __typename?: 'PromotionList';\n  items: Array<Promotion>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PromotionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PromotionSortParameter>;\n  filter?: Maybe<PromotionFilterParameter>;\n};\n\nexport type PromotionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  startsAt?: Maybe<SortOrder>;\n  endsAt?: Maybe<SortOrder>;\n  couponCode?: Maybe<SortOrder>;\n  perCustomerUsageLimit?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  administrators: AdministratorList;\n  administrator?: Maybe<Administrator>;\n  /** Get a list of Assets */\n  assets: AssetList;\n  /** Get a single Asset by id */\n  asset?: Maybe<Asset>;\n  me?: Maybe<CurrentUser>;\n  channels: Array<Channel>;\n  channel?: Maybe<Channel>;\n  activeChannel: Channel;\n  collections: CollectionList;\n  /** Get a Collection either by id or slug. If neither id nor slug is speicified, an error will result. */\n  collection?: Maybe<Collection>;\n  collectionFilters: Array<ConfigurableOperationDefinition>;\n  countries: CountryList;\n  country?: Maybe<Country>;\n  customerGroups: CustomerGroupList;\n  customerGroup?: Maybe<CustomerGroup>;\n  customers: CustomerList;\n  customer?: Maybe<Customer>;\n  facets: FacetList;\n  facet?: Maybe<Facet>;\n  globalSettings: GlobalSettings;\n  job?: Maybe<Job>;\n  jobs: JobList;\n  jobsById: Array<Job>;\n  jobQueues: Array<JobQueue>;\n  order?: Maybe<Order>;\n  orders: OrderList;\n  paymentMethods: PaymentMethodList;\n  paymentMethod?: Maybe<PaymentMethod>;\n  productOptionGroups: Array<ProductOptionGroup>;\n  productOptionGroup?: Maybe<ProductOptionGroup>;\n  search: SearchResponse;\n  products: ProductList;\n  /** Get a Product either by id or slug. If neither id nor slug is speicified, an error will result. */\n  product?: Maybe<Product>;\n  promotion?: Maybe<Promotion>;\n  promotions: PromotionList;\n  promotionConditions: Array<ConfigurableOperationDefinition>;\n  promotionActions: Array<ConfigurableOperationDefinition>;\n  roles: RoleList;\n  role?: Maybe<Role>;\n  shippingMethods: ShippingMethodList;\n  shippingMethod?: Maybe<ShippingMethod>;\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>;\n  shippingCalculators: Array<ConfigurableOperationDefinition>;\n  testShippingMethod: TestShippingMethodResult;\n  testEligibleShippingMethods: Array<ShippingMethodQuote>;\n  taxCategories: Array<TaxCategory>;\n  taxCategory?: Maybe<TaxCategory>;\n  taxRates: TaxRateList;\n  taxRate?: Maybe<TaxRate>;\n  zones: Array<Zone>;\n  zone?: Maybe<Zone>;\n  productRecommendations: Array<ProductRecommendation>;\n  productBulkDiscounts: Array<BulkDiscount>;\n  productReviews: ProductReviewList;\n  productReview?: Maybe<ProductReview>;\n  Feedbacks: FeedbackList;\n  Feedback?: Maybe<Feedback>;\n  SubscriptionEmails: EmailList;\n  SubscriptionEmail?: Maybe<Email>;\n  SubscriptionPhones: PhoneList;\n  SubscriptionPhone?: Maybe<Phone>;\n};\n\n\nexport type QueryAdministratorsArgs = {\n  options?: Maybe<AdministratorListOptions>;\n};\n\n\nexport type QueryAdministratorArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryAssetsArgs = {\n  options?: Maybe<AssetListOptions>;\n};\n\n\nexport type QueryAssetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCollectionsArgs = {\n  options?: Maybe<CollectionListOptions>;\n};\n\n\nexport type QueryCollectionArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCountriesArgs = {\n  options?: Maybe<CountryListOptions>;\n};\n\n\nexport type QueryCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomerGroupsArgs = {\n  options?: Maybe<CustomerGroupListOptions>;\n};\n\n\nexport type QueryCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\n\nexport type QueryCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFacetsArgs = {\n  options?: Maybe<FacetListOptions>;\n};\n\n\nexport type QueryFacetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryJobArgs = {\n  jobId: Scalars['ID'];\n};\n\n\nexport type QueryJobsArgs = {\n  options?: Maybe<JobListOptions>;\n};\n\n\nexport type QueryJobsByIdArgs = {\n  jobIds: Array<Scalars['ID']>;\n};\n\n\nexport type QueryOrderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\n\nexport type QueryPaymentMethodsArgs = {\n  options?: Maybe<PaymentMethodListOptions>;\n};\n\n\nexport type QueryPaymentMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductOptionGroupsArgs = {\n  filterTerm?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductOptionGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySearchArgs = {\n  input: SearchInput;\n};\n\n\nexport type QueryProductsArgs = {\n  options?: Maybe<ProductListOptions>;\n};\n\n\nexport type QueryProductArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPromotionsArgs = {\n  options?: Maybe<PromotionListOptions>;\n};\n\n\nexport type QueryRolesArgs = {\n  options?: Maybe<RoleListOptions>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryShippingMethodsArgs = {\n  options?: Maybe<ShippingMethodListOptions>;\n};\n\n\nexport type QueryShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTestShippingMethodArgs = {\n  input: TestShippingMethodInput;\n};\n\n\nexport type QueryTestEligibleShippingMethodsArgs = {\n  input: TestEligibleShippingMethodsInput;\n};\n\n\nexport type QueryTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTaxRatesArgs = {\n  options?: Maybe<TaxRateListOptions>;\n};\n\n\nexport type QueryTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductRecommendationsArgs = {\n  productId: Scalars['ID'];\n};\n\n\nexport type QueryProductBulkDiscountsArgs = {\n  productId: Scalars['ID'];\n};\n\n\nexport type QueryProductReviewsArgs = {\n  options?: Maybe<ProductReviewListOptions>;\n};\n\n\nexport type QueryProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFeedbacksArgs = {\n  options?: Maybe<FeedbackListOptions>;\n};\n\n\nexport type QueryFeedbackArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySubscriptionEmailsArgs = {\n  options?: Maybe<EmailListOptions>;\n};\n\n\nexport type QuerySubscriptionEmailArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySubscriptionPhonesArgs = {\n  options?: Maybe<PhoneListOptions>;\n};\n\n\nexport type QuerySubscriptionPhoneArgs = {\n  id: Scalars['ID'];\n};\n\nexport enum RecommendationType {\n  Crosssell = 'CROSSSELL',\n  Upsell = 'UPSELL'\n}\n\nexport type Refund = Node & {\n  __typename?: 'Refund';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  items: Scalars['Int'];\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  total: Scalars['Int'];\n  method?: Maybe<Scalars['String']>;\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  reason?: Maybe<Scalars['String']>;\n  orderItems: Array<OrderItem>;\n  paymentId: Scalars['ID'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type RefundOrderInput = {\n  lines: Array<OrderLineInput>;\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type RemoveProductsFromChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type Return = Node & StockMovement & {\n  __typename?: 'Return';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type Role = Node & {\n  __typename?: 'Role';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channels: Array<Channel>;\n};\n\nexport type RoleFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type RoleList = PaginatedList & {\n  __typename?: 'RoleList';\n  items: Array<Role>;\n  totalItems: Scalars['Int'];\n};\n\nexport type RoleListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<RoleSortParameter>;\n  filter?: Maybe<RoleFilterParameter>;\n};\n\nexport type RoleSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type Sale = Node & StockMovement & {\n  __typename?: 'Sale';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type SearchInput = {\n  term?: Maybe<Scalars['String']>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueOperator?: Maybe<LogicalOperator>;\n  collectionId?: Maybe<Scalars['ID']>;\n  groupByProduct?: Maybe<Scalars['Boolean']>;\n  take?: Maybe<Scalars['Int']>;\n  skip?: Maybe<Scalars['Int']>;\n  sort?: Maybe<SearchResultSortParameter>;\n};\n\nexport type SearchReindexResponse = {\n  __typename?: 'SearchReindexResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type SearchResponse = {\n  __typename?: 'SearchResponse';\n  items: Array<SearchResult>;\n  totalItems: Scalars['Int'];\n  facetValues: Array<FacetValueResult>;\n};\n\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  enabled: Scalars['Boolean'];\n  /** An array of ids of the Collections in which this result appears */\n  channelIds: Array<Scalars['ID']>;\n  sku: Scalars['String'];\n  slug: Scalars['String'];\n  productId: Scalars['ID'];\n  productName: Scalars['String'];\n  /** @deprecated Use `productAsset.preview` instead */\n  productPreview: Scalars['String'];\n  productAsset?: Maybe<SearchResultAsset>;\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  /** @deprecated Use `productVariantAsset.preview` instead */\n  productVariantPreview: Scalars['String'];\n  productVariantAsset?: Maybe<SearchResultAsset>;\n  price: SearchResultPrice;\n  priceWithTax: SearchResultPrice;\n  currencyCode: CurrencyCode;\n  description: Scalars['String'];\n  facetIds: Array<Scalars['ID']>;\n  facetValueIds: Array<Scalars['ID']>;\n  /** An array of ids of the Collections in which this result appears */\n  collectionIds: Array<Scalars['ID']>;\n  /** A relevence score for the result. Differs between database implementations */\n  score: Scalars['Float'];\n};\n\nexport type SearchResultAsset = {\n  __typename?: 'SearchResultAsset';\n  id: Scalars['ID'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\n/** The price of a search result product, either as a range or as a single price */\nexport type SearchResultPrice = PriceRange | SinglePrice;\n\nexport type SearchResultSortParameter = {\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n};\n\nexport type ServerConfig = {\n  __typename?: 'ServerConfig';\n  customFieldConfig: CustomFields;\n};\n\nexport type SettleRefundInput = {\n  id: Scalars['ID'];\n  transactionId: Scalars['String'];\n};\n\nexport type ShippingMethod = Node & {\n  __typename?: 'ShippingMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  checker: ConfigurableOperation;\n  calculator: ConfigurableOperation;\n};\n\nexport type ShippingMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type ShippingMethodList = PaginatedList & {\n  __typename?: 'ShippingMethodList';\n  items: Array<ShippingMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ShippingMethodSortParameter>;\n  filter?: Maybe<ShippingMethodFilterParameter>;\n};\n\nexport type ShippingMethodQuote = {\n  __typename?: 'ShippingMethodQuote';\n  id: Scalars['ID'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  description: Scalars['String'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type ShippingMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\n/** The price value where the result has a single price */\nexport type SinglePrice = {\n  __typename?: 'SinglePrice';\n  value: Scalars['Int'];\n};\n\nexport enum SortOrder {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport type StockAdjustment = Node & StockMovement & {\n  __typename?: 'StockAdjustment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type StockMovement = {\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type StockMovementItem = StockAdjustment | Sale | Cancellation | Return;\n\nexport type StockMovementList = {\n  __typename?: 'StockMovementList';\n  items: Array<StockMovementItem>;\n  totalItems: Scalars['Int'];\n};\n\nexport type StockMovementListOptions = {\n  type?: Maybe<StockMovementType>;\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n};\n\nexport enum StockMovementType {\n  Adjustment = 'ADJUSTMENT',\n  Sale = 'SALE',\n  Cancellation = 'CANCELLATION',\n  Return = 'RETURN'\n}\n\nexport type StringCustomFieldConfig = CustomField & {\n  __typename?: 'StringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  length?: Maybe<Scalars['Int']>;\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n  options?: Maybe<Array<StringFieldOption>>;\n};\n\nexport type StringFieldOption = {\n  __typename?: 'StringFieldOption';\n  value: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n};\n\nexport type StringOperators = {\n  eq?: Maybe<Scalars['String']>;\n  contains?: Maybe<Scalars['String']>;\n};\n\nexport type TaxCategory = Node & {\n  __typename?: 'TaxCategory';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n};\n\nexport type TaxRate = Node & {\n  __typename?: 'TaxRate';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  category: TaxCategory;\n  zone: Zone;\n  customerGroup?: Maybe<CustomerGroup>;\n};\n\nexport type TaxRateFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n  value?: Maybe<NumberOperators>;\n};\n\nexport type TaxRateList = PaginatedList & {\n  __typename?: 'TaxRateList';\n  items: Array<TaxRate>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TaxRateListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<TaxRateSortParameter>;\n  filter?: Maybe<TaxRateFilterParameter>;\n};\n\nexport type TaxRateSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  value?: Maybe<SortOrder>;\n};\n\nexport type TestEligibleShippingMethodsInput = {\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestShippingMethodInput = {\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestShippingMethodOrderLineInput = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type TestShippingMethodQuote = {\n  __typename?: 'TestShippingMethodQuote';\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  description: Scalars['String'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type TestShippingMethodResult = {\n  __typename?: 'TestShippingMethodResult';\n  eligible: Scalars['Boolean'];\n  quote?: Maybe<TestShippingMethodQuote>;\n};\n\nexport type UpdateAddressInput = {\n  id: Scalars['ID'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateAdministratorInput = {\n  id: Scalars['ID'];\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  roleIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateAssetInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  focalPoint?: Maybe<CoordinateInput>;\n};\n\nexport type UpdateChannelInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  token?: Maybe<Scalars['String']>;\n  defaultLanguageCode?: Maybe<LanguageCode>;\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>;\n  currencyCode?: Maybe<CurrencyCode>;\n  defaultTaxZoneId?: Maybe<Scalars['ID']>;\n  defaultShippingZoneId?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateCollectionInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  parentId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  filters?: Maybe<Array<ConfigurableOperationInput>>;\n  translations?: Maybe<Array<UpdateCollectionTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCollectionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCountryInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<CountryTranslationInput>>;\n  enabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdateCustomerGroupInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerInput = {\n  id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCustomerNoteInput = {\n  noteId: Scalars['ID'];\n  note: Scalars['String'];\n};\n\nexport type UpdateFacetInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateFacetValueInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetValueTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateGlobalSettingsInput = {\n  availableLanguages?: Maybe<Array<LanguageCode>>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateOrderNoteInput = {\n  noteId: Scalars['ID'];\n  note?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdatePaymentMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  configArgs?: Maybe<Array<ConfigArgInput>>;\n};\n\nexport type UpdateProductCustomFieldsInput = {\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type UpdateProductInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations?: Maybe<Array<ProductTranslationInput>>;\n  customFields?: Maybe<UpdateProductCustomFieldsInput>;\n};\n\nexport type UpdateProductOptionGroupInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductOptionInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductReviewInput = {\n  id: Scalars['ID'];\n  summary?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  response?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateProductVariantCustomFieldsInput = {\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\n  Unit?: Maybe<Scalars['String']>;\n  Sales?: Maybe<Scalars['Int']>;\n};\n\nexport type UpdateProductVariantInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  translations?: Maybe<Array<ProductVariantTranslationInput>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku?: Maybe<Scalars['String']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  price?: Maybe<Scalars['Int']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<UpdateProductVariantCustomFieldsInput>;\n};\n\nexport type UpdatePromotionInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions?: Maybe<Array<ConfigurableOperationInput>>;\n  actions?: Maybe<Array<ConfigurableOperationInput>>;\n};\n\nexport type UpdateRoleInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Permission>>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateShippingMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  checker?: Maybe<ConfigurableOperationInput>;\n  calculator?: Maybe<ConfigurableOperationInput>;\n};\n\nexport type UpdateTaxCategoryInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateTaxRateInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['Float']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  categoryId?: Maybe<Scalars['ID']>;\n  zoneId?: Maybe<Scalars['ID']>;\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateZoneInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\n\nexport type User = Node & {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  identifier: Scalars['String'];\n  verified: Scalars['Boolean'];\n  roles: Array<Role>;\n  lastLogin?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Zone = Node & {\n  __typename?: 'Zone';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  members: Array<Country>;\n};\n\nexport namespace Feedbacks {\n  export type Fragment = FeedbacksFragment;\n}\n\nexport namespace GetAllFeedbacks {\n  export type Variables = GetAllFeedbacksQueryVariables;\n  export type Query = GetAllFeedbacksQuery;\n  export type Feedbacks = GetAllFeedbacksQuery['Feedbacks'];\n  export type Items = (NonNullable<GetAllFeedbacksQuery['Feedbacks']['items'][0]>);\n}\n\nexport namespace DeleteFeedback {\n  export type Variables = DeleteFeedbackMutationVariables;\n  export type Mutation = DeleteFeedbackMutation;\n  export type DeleteFeedback = DeleteFeedbackMutation['deleteFeedback'];\n}\n\nexport namespace UpdateFeedback {\n  export type Variables = UpdateFeedbackMutationVariables;\n  export type Mutation = UpdateFeedbackMutation;\n  export type UpdateFeedback = UpdateFeedbackMutation['updateFeedback'];\n}\n\nexport namespace CreateFeedback {\n  export type Variables = CreateFeedbackMutationVariables;\n  export type Mutation = CreateFeedbackMutation;\n  export type AddFeedback = CreateFeedbackMutation['addFeedback'];\n}\n\nexport namespace GetFeedback {\n  export type Variables = GetFeedbackQueryVariables;\n  export type Query = GetFeedbackQuery;\n  export type Feedback = (NonNullable<GetFeedbackQuery['Feedback']>);\n}\n\nexport type FeedbacksFragment = (\n  { __typename?: 'Feedback' }\n  & Pick<Feedback, 'id' | 'name' | 'email' | 'phone' | 'feedback' | 'createdAt' | 'updatedAt'>\n);\n\nexport type GetAllFeedbacksQueryVariables = Exact<{\n  options?: Maybe<FeedbackListOptions>;\n}>;\n\n\nexport type GetAllFeedbacksQuery = (\n  { __typename?: 'Query' }\n  & { Feedbacks: (\n    { __typename?: 'FeedbackList' }\n    & Pick<FeedbackList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Feedback' }\n      & FeedbacksFragment\n    )> }\n  ) }\n);\n\nexport type DeleteFeedbackMutationVariables = Exact<{\n  input: Scalars['ID'];\n}>;\n\n\nexport type DeleteFeedbackMutation = (\n  { __typename?: 'Mutation' }\n  & { deleteFeedback: (\n    { __typename?: 'Feedback' }\n    & FeedbacksFragment\n  ) }\n);\n\nexport type UpdateFeedbackMutationVariables = Exact<{\n  input: FeedbackUpdateInput;\n}>;\n\n\nexport type UpdateFeedbackMutation = (\n  { __typename?: 'Mutation' }\n  & { updateFeedback: (\n    { __typename?: 'Feedback' }\n    & FeedbacksFragment\n  ) }\n);\n\nexport type CreateFeedbackMutationVariables = Exact<{\n  input: FeedbackAddInput;\n}>;\n\n\nexport type CreateFeedbackMutation = (\n  { __typename?: 'Mutation' }\n  & { addFeedback: (\n    { __typename?: 'Feedback' }\n    & FeedbacksFragment\n  ) }\n);\n\nexport type GetFeedbackQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetFeedbackQuery = (\n  { __typename?: 'Query' }\n  & { Feedback?: Maybe<(\n    { __typename?: 'Feedback' }\n    & FeedbacksFragment\n  )> }\n);\n","import gql from 'graphql-tag';\r\n\r\nexport const FEEDBACK_FRAGMENT = gql`\r\n    fragment Feedbacks on Feedback {\r\n        id\r\n\t\tname\r\n\t    email\r\n        phone\r\n\t    feedback\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nimport { FEEDBACK_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const GET_ALL_FEEDBACKS = gql`\r\n    query GetAllFeedbacks($options: FeedbackListOptions){\r\n\t\tFeedbacks(options: $options){\r\n\t\t\titems{\r\n\t\t\t...Feedbacks\r\n\t\t\t}\r\n\t\t\ttotalItems\r\n       }\r\n    }\r\n\t${FEEDBACK_FRAGMENT}\r\n`;\r\n\r\n\r\nexport const DELETE_FEEDBACK = gql`\r\n   mutation DeleteFeedback($input:ID!){\r\n      deleteFeedback(id:$input){\r\n\t     ...Feedbacks \r\n\t  }\r\n   }\r\n   ${FEEDBACK_FRAGMENT}\r\n`;","<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <input\r\n            type=\"text\"\r\n            name=\"searchTerm\"\r\n\t\t\t[formControl]=\"searchTerm\"\r\n            [placeholder]=\"'vdr-feedback-plugin.search-feedback' | translate\"\r\n            class=\"clr-input search-input\"\r\n        />\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId=\"email-list\"></vdr-action-bar-items>\r\n        <a href=\"javascript:void(0)\" class=\"btn btn-primary\" id=\"downloadbtn\" (click)=\"downloadcsv()\" *vdrIfPermissions=\"'CreateSettings'\">\r\n            <clr-icon shape=\"download-cloud\"></clr-icon>\r\n\t\t\t{{ 'vdr-feedback-plugin.download-csv' | translate }}\r\n        </a>\r\n\t\t<a class=\"btn btn-primary\" id=\"createbtn\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"'CreateSettings'\">\r\n            <clr-icon shape=\"plus\"></clr-icon>\r\n\t\t\t{{ 'vdr-feedback-plugin.create-new-feedback' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    id=\"datatable\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.name' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.email' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.phone' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.feedback' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n\t<vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-feedback=\"item\">\r\n\t\t<td class=\"left align-middle\">{{ feedback.name }}</td>\r\n\t\t<td class=\"left align-middle\">{{ feedback.email }}</td>\r\n\t\t<td class=\"left align-middle\">{{ feedback.phone }}</td>\r\n\t\t<td class=\"left align-middle\">{{ feedback.feedback }}</td>\r\n\t\t<td class=\"right align-middle\" *vdrIfPermissions=\"'UpdateSettings'\">\r\n            <vdr-table-row-action\r\n                iconShape=\"edit\"\r\n                [label]=\"'common.edit' | translate\"\r\n                [linkTo]=\"['/extensions', 'feedbacks', feedback.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n\t\t\r\n\t\t<td class=\"right align-middle\" *vdrIfPermissions=\"'DeleteSettings'\">\r\n            <vdr-dropdown>\r\n                <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\r\n                    {{ 'common.actions' | translate }}\r\n                    <clr-icon shape=\"caret down\"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"delete-button\"\r\n                        (click)=\"deleteFeedback(feedback.id)\"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                        {{ 'common.delete' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n\t\t\r\n    </ng-template>\r\n</vdr-data-table>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseListComponent, DataService, NotificationService, ModalService  } from '@vendure/admin-ui/core';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { Apollo } from 'apollo-angular';\r\n\r\nimport { SortOrder } from '../../generated-types';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { debounceTime, takeUntil, switchMap } from 'rxjs/operators';\r\nimport { CsvDataService } from '../../common/export-as-csv';\r\n\r\nimport { \r\n  GetAllFeedbacksQuery,\r\n  Feedbacks,\r\n  GetAllFeedbacksQueryVariables,\r\n  DeleteFeedback\r\n} from '../../generated-types';\r\n\r\nimport { GET_ALL_FEEDBACKS, DELETE_FEEDBACK } from './all-feedbacks-list.graphql';\r\n\r\n@Component({\r\n    selector: 'vdr-all-feedbacks-list',\r\n    templateUrl: './all-feedbacks-list.component.html',\r\n    styleUrls: ['./all-feedbacks-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class AllFeedbacksListComponent extends BaseListComponent<\r\n    GetAllFeedbacksQuery,\r\n\tFeedbacks.Fragment,\r\n    GetAllFeedbacksQueryVariables\r\n> implements OnInit {\r\n    searchTerm = new FormControl('');\r\n\tFeedbacks: any;\r\n\tprivate querySubscription: Subscription;\r\n\r\n    constructor(\r\n\t   private dataService: DataService,\r\n       private modalService: ModalService,\r\n       private notificationService: NotificationService,\r\n       private apollo: Apollo,\t   \r\n\t   router: Router, \r\n\t   route: ActivatedRoute,\r\n\t) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.query(GET_ALL_FEEDBACKS,args),\r\n            (data) => data.Feedbacks,\r\n\t\t\t(skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n\t\t\t\t\tsort: {\r\n                        updatedAt: SortOrder.Desc,\r\n                    },\r\n                },\r\n            }),\r\n        );\r\n    }\r\n\t\r\n\tngOnInit() {\r\n        super.ngOnInit();\r\n        this.searchTerm.valueChanges\r\n            .pipe(\r\n                debounceTime(250),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(() => {\r\n\t\t\t\tthis.filtertable();\r\n\t\t\t\t//this.refresh();\r\n\t\t\t});\r\n    }\r\n\t\r\n\t\r\n  filtertable() {\r\n\t  let input = this.searchTerm.value;\r\n\t  let filter = input.toUpperCase();\r\n\t  let table = <HTMLElement> document.querySelector(\"#datatable >.table > tbody\");\r\n\t  console.log(table);\r\n\t  let tr = table.getElementsByTagName(\"tr\");\r\n\t  console.log(tr);\r\n\t  for (let i = 0; i < tr.length; i++) {\r\n\t\t \r\n\t\tfor(let j=0;j<4;j++){\r\n\t\t  \r\n\t\t  let td = tr[i].getElementsByTagName(\"td\")[j];\r\n          console.log(td);\r\n\t\t  if (td) {\r\n\t\t\t console.log(\"a\");\r\n\t\t\t let txtValue = td.innerHTML;\r\n\t\t\t console.log(txtValue);\r\n\t\t\t if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n\t\t\t\t  tr[i].style.display = \"\";\r\n\t\t\t\t  break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttr[i].style.display = \"none\";\r\n                }\r\n             }\r\n\t\t  }\r\n       \r\n\t   }\r\n}\r\n\t\r\n\t\r\n\tdownloadcsv(){\r\n\t  let args: any[] = [];\r\n\t  this.apollo.watchQuery<any>({\r\n         query: GET_ALL_FEEDBACKS,\r\n\t\t variables: args\r\n      }).valueChanges.subscribe((data) => {\r\n\t\t  CsvDataService.exportToCsv('danfe-feedbacks.csv', data.data.Feedbacks.items);\r\n      });\r\n\t  \r\n\t   \r\n\t}\r\n\t\r\n\tdeleteFeedback(id: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('vdr-feedback-plugin.confirm-delete-feedback'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.mutate<DeleteFeedback.Mutation,DeleteFeedback.Variables>(DELETE_FEEDBACK,{\"input\":id}) : EMPTY)),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Feedback',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","export class CsvDataService {\r\n  static exportToCsv(filename: string, rows: object[]) {\r\n    if (!rows || !rows.length) {\r\n      return;\r\n    }\r\n    const separator = ',';\r\n    const keys = Object.keys(rows[0]);\r\n    const csvContent =\r\n      keys.join(separator) +\r\n      '\\n' +\r\n      rows.map(row => {\r\n        return keys.map(k => {\r\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\r\n          cell = cell instanceof Date\r\n            ? cell.toLocaleString()\r\n            : cell.toString().replace(/\"/g, '\"\"');\r\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n            cell = `\"${cell}\"`;\r\n          }\r\n          return cell;\r\n        }).join(separator);\r\n      }).join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n      const link = document.createElement('a');\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', filename);\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n}","import gql from 'graphql-tag';\r\n\r\nimport { FEEDBACK_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const UPDATE_FEEDBACK = gql`\r\n    mutation UpdateFeedback($input: FeedbackUpdateInput!) {\r\n        updateFeedback(input: $input) {\r\n            ...Feedbacks\r\n        }\r\n    }\r\n    ${FEEDBACK_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_FEEDBACK = gql`\r\n    mutation CreateFeedback($input: FeedbackAddInput!) {\r\n        addFeedback(input: $input) {\r\n            ...Feedbacks\r\n        }\r\n    }\r\n    ${FEEDBACK_FRAGMENT}\r\n`;","<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <button\r\n            class=\"btn btn-primary\"\r\n\t\t\tid=\"custbtn\"\r\n            *ngIf=\"which; else updateButton\"\r\n            (click)=\"create()\"\r\n            [disabled]=\"!(detailForm.valid && detailForm.dirty)\"\r\n        >\r\n            {{ 'common.create' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n\t\t\t\tid=\"editbtn\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"!(detailForm.valid && detailForm.dirty)\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-form-field [label]=\"'vdr-feedback-plugin.name-label' | translate\" for=\"email\">\r\n        <input id=\"name\" type=\"text\" formControlName=\"name\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n\t<vdr-form-field [label]=\"'vdr-feedback-plugin.email-label' | translate\" for=\"email\">\r\n        <input id=\"email\" type=\"email\" formControlName=\"email\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n\t    <vdr-form-field [label]=\"'vdr-feedback-plugin.phone-label' | translate\" for=\"email\">\r\n        <input id=\"phone\" type=\"number\" formControlName=\"phone\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n\t    <vdr-form-field [label]=\"'vdr-feedback-plugin.feedback-label' | translate\" for=\"email\">\r\n        <!--input id=\"feedback\" type=\"text\" formControlName=\"feedback\" [readonly]=\"!'UpdateSettings'\" /-->\r\n\t\t<textarea id=\"feedback\" formControlName=\"feedback\" [readonly]=\"!'UpdateSettings'\">\r\n\t\t</textarea>\r\n    </vdr-form-field>\r\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    BaseDetailComponent,\r\n    DataService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, mapTo, switchMap } from 'rxjs/operators';\r\n\r\nimport { \r\n   CreateFeedback,\r\n   FeedbacksFragment,\r\n   UpdateFeedback,\r\n   FeedbackAddInput,\r\n   FeedbackUpdateInput\r\n} from '../../generated-types';\r\n\r\nimport { CREATE_FEEDBACK,UPDATE_FEEDBACK } from './feedback-detail.graphql';\r\n\r\n@Component({\r\n    selector: 'vdr-feedback-detail',\r\n    templateUrl: './feedback-detail.component.html',\r\n    styleUrls: ['./feedback-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\n\r\nexport class FeedbackDetailComponent extends BaseDetailComponent<FeedbacksFragment>\r\n    implements OnInit, OnDestroy {\r\n    detailForm: FormGroup;\r\n\twhich = false;\r\n\t\r\n\tconstructor(\r\n        route: ActivatedRoute,\r\n        router: Router,\r\n        serverConfigService: ServerConfigService,\r\n        private formBuilder: FormBuilder,\r\n        protected dataService: DataService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        \r\n\t\tthis.detailForm = this.formBuilder.group({\r\n            name: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\tfeedback: ['',Validators.required]\r\n        });\r\n\t\t\r\n    }\r\n\t\r\n\tngOnInit() {\r\n\t\tif(this.router.url!='/extensions/feedbacks/create'){\r\n\t\t  this.which=false;\r\n\t\t  this.init();\r\n\t\t}else{\r\n\t\t   this.which=true;\r\n\t\t}\r\n    }\r\n\t\r\n\tngOnDestroy() {\r\n      this.destroy();\r\n    }\r\n\t\r\n\tcreate(){\r\n\t   this.addNew()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-create-success', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-create-error', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n            );\r\n\t}\r\n\t\r\n\tsave() {\r\n        this.saveChanges()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-update-success', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-update-error', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\t\r\n\tprivate addNew(): Observable<boolean>{\r\n\t   if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n            const input: FeedbackAddInput = {\r\n\t\t\t\tname: formValue.name || \"Anonymous\",\r\n                email: formValue.email || \"Anonymous\",\r\n\t\t\t\tphone: formValue.phone.toString() || \"Anonymous\",\r\n\t\t\t\tfeedback: formValue.feedback\r\n            };\r\n            return this.dataService\r\n                .mutate<CreateFeedback.Mutation,CreateFeedback.Variables>(CREATE_FEEDBACK, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n\t}\r\n\t\r\n\tprivate saveChanges(): Observable<boolean> {\r\n        if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n            const input: FeedbackUpdateInput = {\r\n                id: this.id,\r\n                name: formValue.name || \"Anonymous\",\r\n                email: formValue.email || \"Anonymous\",\r\n\t\t\t\tphone: formValue.phone.toString() || \"Anonymous\",\r\n\t\t\t\tfeedback: formValue.feedback\r\n            };\r\n            return this.dataService\r\n                .mutate<UpdateFeedback.Mutation,UpdateFeedback.Variables>(UPDATE_FEEDBACK, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n    }\r\n\t\r\n\tprotected setFormValues(entity: FeedbacksFragment) {\r\n\t\t  let datas = <any>{};\r\n\t\t  \r\n\t\t  if(entity.name==\"Anonymous\"){\r\n\t\t      datas.name=\"\"\r\n\t\t  }\r\n\t\t  \r\n\t\t  if(entity.email==\"Anonymous\"){\r\n\t\t      datas.email=\"\"\r\n\t\t  }\r\n\t\t  \r\n\t\t  if(entity.phone==\"Anonymous\"){\r\n\t\t      datas.phone=\"\"\r\n\t\t  }else{\r\n\t\t       datas.phone=parseInt(datas.phone)\r\n\t\t  }\r\n\t\t  \r\n\t\t  datas.feedback=entity.feedback;\r\n\t\t  this.detailForm.patchValue(datas);\r\n\t}\r\n    \r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { FEEDBACK_FRAGMENT } from '../../../common/fragments.graphql';\r\n\r\nexport const GET_FEEDBACK = gql`\r\n  query GetFeedback($id: ID!) {\r\n    Feedback(id: $id) {\r\n      ...Feedbacks\r\n    }\r\n  }\r\n  ${FEEDBACK_FRAGMENT}\r\n`;","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService, BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { GET_FEEDBACK } from './feedback-detail-resolver.graphql';\r\n\r\nimport { \r\n  GetFeedbackQuery,\r\n  FeedbacksFragment,\r\n  GetFeedbackQueryVariables\r\n} from '../../../generated-types';\r\n\r\n@Injectable()\r\nexport default class FeedbackDetailResolver extends BaseEntityResolver<\r\n  FeedbacksFragment\r\n> {\r\n  constructor(router: Router, dataService: DataService) {\r\n    super(\r\n      router,\r\n      {\r\n        __typename: 'Feedback',\r\n        id: '',\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\tfeedback: '',\r\n\t\tcreatedAt: '',\r\n\t\tupdatedAt: '',\r\n      },\r\n      (id) =>\r\n        dataService.query<GetFeedbackQuery, GetFeedbackQueryVariables>(GET_FEEDBACK, {\r\n            id: id\r\n        })\r\n        .mapStream((data) => data.Feedback)\r\n    );\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule, createResolveData } from '@vendure/admin-ui/core';\r\nimport { AllFeedbacksListComponent } from './components/all-feedbacks-list/all-feedbacks-list.component';\r\nimport { FeedbackDetailComponent } from './components/feedback-detail/feedback-detail.component';\r\n\r\nimport FeedbackDetailResolver from './providers/routing/feedback-detail/feedback-detail-resolver';\r\nimport { FeedbacksFragment } from './generated-types';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n\t{\r\n      path: '',\r\n      pathMatch: 'full',\r\n      component: AllFeedbacksListComponent ,\r\n      data: { breadcrumb: 'Feedbacks' },\r\n    },\r\n\t{\r\n\t  path: 'create',\r\n      component: FeedbackDetailComponent,\r\n      data: {breadcrumb: [\r\n             {\r\n                label: 'Feedbacks',\r\n                link: ['/extensions', 'feedbacks'],\r\n             },\r\n             {\r\n                label: 'Create Feedback',\r\n                link: [],\r\n             }\r\n\t       ]\r\n\t     } \r\n\t},\r\n    {\r\n       path: ':id',\r\n       component: FeedbackDetailComponent,\r\n       resolve: createResolveData(FeedbackDetailResolver),\r\n       data: { breadcrumb: feedbackDetailBreadcrumb },\r\n    }\r\n\t]),\r\n  ],\r\n  declarations: [\r\n    AllFeedbacksListComponent,\r\n\tFeedbackDetailComponent\r\n  ],\r\n  providers:[FeedbackDetailResolver],\r\n})\r\nexport class FeedbackUIModule {}\r\n\r\nexport function feedbackDetailBreadcrumb(resolved: { entity: Observable<FeedbacksFragment> }) {\r\n\treturn resolved.entity.pipe(\r\n        map(entity => [\r\n            {\r\n                label: 'Feedbacks',\r\n                link: ['/extensions', 'feedbacks'],\r\n            },\r\n            {\r\n                label: 'Update Feedback',\r\n                link: [],\r\n            },\r\n        ]),\r\n    );\r\n}\r\n"]}