{"version":3,"sources":["webpack:///src/extensions/6238c1d037144377bad80515f98dd7ee464176b0c1a8dcd56038bea394ef450b/generated-types.ts","webpack:///C:/Users/bipla/OneDrive/Documents/SanitizeBack/danfe/node_modules/@vendure/common/lib/generated-shop-types.js","webpack:///C:/Users/bipla/OneDrive/Documents/SanitizeBack/danfe/node_modules/rxjs/_esm2015/internal/operators/delay.js","webpack:///C:/Users/bipla/OneDrive/Documents/SanitizeBack/danfe/node_modules/rxjs/_esm2015/internal/util/isDate.js","webpack:///src/extensions/6238c1d037144377bad80515f98dd7ee464176b0c1a8dcd56038bea394ef450b/common/export-as-csv.ts","webpack:///C:/Users/bipla/OneDrive/Documents/SanitizeBack/danfe/node_modules/@vendure/common/lib/normalize-string.js","webpack:///src/extensions/6238c1d037144377bad80515f98dd7ee464176b0c1a8dcd56038bea394ef450b/common/fragments.graphql.ts","webpack:///C:/Users/bipla/OneDrive/Documents/SanitizeBack/danfe/node_modules/@vendure/common/lib/unique.js"],"names":["AdjustmentType","AssetType","CurrencyCode","DeletionResult","HistoryEntryType","JobState","LanguageCode","LogicalOperator","Permission","RecommendationType","SortOrder","StockMovementType","Tax","Promotion","Shipping","Refund","TaxRefund","PromotionRefund","ShippingRefund","Image","Video","Binary","Aed","Afn","All","Amd","Ang","Aoa","Ars","Aud","Awg","Azn","Bam","Bbd","Bdt","Bgn","Bhd","Bif","Bmd","Bnd","Bob","Brl","Bsd","Btn","Bwp","Byn","Bzd","Cad","Cdf","Chf","Clp","Cny","Cop","Crc","Cuc","Cup","Cve","Czk","Djf","Dkk","Dop","Dzd","Egp","Ern","Etb","Eur","Fjd","Fkp","Gbp","Gel","Ghs","Gip","Gmd","Gnf","Gtq","Gyd","Hkd","Hnl","Hrk","Htg","Huf","Idr","Ils","Inr","Iqd","Irr","Isk","Jmd","Jod","Jpy","Kes","Kgs","Khr","Kmf","Kpw","Krw","Kwd","Kyd","Kzt","Lak","Lbp","Lkr","Lrd","Lsl","Lyd","Mad","Mdl","Mga","Mkd","Mmk","Mnt","Mop","Mru","Mur","Mvr","Mwk","Mxn","Myr","Mzn","Nad","Ngn","Nio","Nok","Npr","Nzd","Omr","Pab","Pen","Pgk","Php","Pkr","Pln","Pyg","Qar","Ron","Rsd","Rub","Rwf","Sar","Sbd","Scr","Sdg","Sek","Sgd","Shp","Sll","Sos","Srd","Ssp","Stn","Svc","Syp","Szl","Thb","Tjs","Tmt","Tnd","Top","Try","Ttd","Twd","Tzs","Uah","Ugx","Usd","Uyu","Uzs","Ves","Vnd","Vuv","Wst","Xaf","Xcd","Xof","Xpf","Yer","Zar","Zmw","Zwl","Deleted","NotDeleted","CustomerRegistered","CustomerVerified","CustomerDetailUpdated","CustomerAddedToGroup","CustomerRemovedFromGroup","CustomerAddressCreated","CustomerAddressUpdated","CustomerAddressDeleted","CustomerPasswordUpdated","CustomerPasswordResetRequested","CustomerPasswordResetVerified","CustomerEmailUpdateRequested","CustomerEmailUpdateVerified","CustomerNote","OrderStateTransition","OrderPaymentTransition","OrderFullfillment","OrderCancellation","OrderRefundTransition","OrderNote","OrderCouponApplied","OrderCouponRemoved","Pending","Running","Completed","Retrying","Failed","Af","Ak","Sq","Am","Ar","Hy","As","Az","Bm","Bn","Eu","Be","Bs","Br","Bg","My","Ca","Ce","Zh","ZhHans","ZhHant","Cu","Kw","Co","Hr","Cs","Da","Nl","NlBe","Dz","En","EnAu","EnCa","EnGb","EnUs","Eo","Et","Ee","Fo","Fi","Fr","FrCa","FrCh","Ff","Gl","Lg","Ka","De","DeAt","DeCh","El","Gu","Ht","Ha","He","Hi","Hu","Is","Ig","Id","Ia","Ga","It","Ja","Jv","Kl","Kn","Ks","Kk","Km","Ki","Rw","Ko","Ku","Ky","Lo","La","Lv","Ln","Lt","Lu","Lb","Mk","Mg","Ms","Ml","Mt","Gv","Mi","Mr","Mn","Ne","Nd","Se","Nb","Nn","Ny","Or","Om","Os","Ps","Fa","FaAf","Pl","Pt","PtBr","PtPt","Pa","Qu","Ro","RoMd","Rm","Rn","Ru","Sm","Sg","Sa","Gd","Sr","Sn","Ii","Sd","Si","Sk","Sl","So","St","Es","EsEs","EsMx","Su","Sw","SwCd","Sv","Tg","Ta","Tt","Te","Th","Bo","Ti","To","Tr","Tk","Uk","Ur","Ug","Uz","Vi","Vo","Cy","Fy","Wo","Xh","Yi","Yo","Zu","And","Authenticated","SuperAdmin","Owner","Public","CreateCatalog","ReadCatalog","UpdateCatalog","DeleteCatalog","CreateCustomer","ReadCustomer","UpdateCustomer","DeleteCustomer","CreateAdministrator","ReadAdministrator","UpdateAdministrator","DeleteAdministrator","CreateOrder","ReadOrder","UpdateOrder","DeleteOrder","CreatePromotion","ReadPromotion","UpdatePromotion","DeletePromotion","CreateSettings","ReadSettings","UpdateSettings","DeleteSettings","Crosssell","Upsell","Asc","Desc","Adjustment","Sale","Cancellation","Return","Object","defineProperty","exports","value","ErrorCode","GlobalFlag","delay","scheduler","a","delayFor","Date","isNaN","now","Math","abs","source","lift","DelayOperator","this","subscriber","subscribe","Subscriber","destination","super","queue","active","errored","state","length","time","shift","notification","observe","max","schedule","unsubscribe","add","dispatch","message","DelayMessage","push","_schedule","scheduleNotification","Notification","createNext","err","error","createComplete","CsvDataService","filename","rows","keys","csvContent","join","map","row","k","cell","undefined","toLocaleString","toString","replace","search","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","normalizeString","input","spaceReplacer","normalize","toLowerCase","MAIL_SUBSCRIPTION_FRAGMENT","PHONE_SUBSCRIPTION_FRAGMENT","unique","arr","byKey","filter","item","index","self","findIndex","i"],"mappings":"6FA0DA,IAAYA,EA0GAC,EA8cAC,EAkfAC,EAkOAC,EA2GAC,EAkBAC,EA8UAC,EAm4BAC,EAkwBAC,EAoOAC,EAsCAC,EAtmHZ,2CAAYX,GACV,EAAAY,IAAA,MACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SACA,EAAAC,UAAA,aACA,EAAAC,gBAAA,mBACA,EAAAC,eAAA,kBAPF,CAAYlB,MAAc,KA0G1B,SAAYC,GACV,EAAAkB,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,OAAA,SAHF,CAAYpB,MAAS,KA8crB,SAAYC,GAEV,EAAAohL,MAAY,KAkfxB,SAAYC,GAEV,EAAAgL,QAAA,UAEA,EAAAC,WAAA,cAJF,CAAYjL,MAAc,KAkO1B,SAAYC,GACV,EAAAiL,mBAAA,sBACA,EAAAC,iBAAA,oBACA,EAAAC,sBAAA,0BACA,EAAAC,qBAAA,0BACA,EAAAC,yBAAA,8BACA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,wBAAA,4BACA,EAAAC,+BAAA,oCACA,EAAAC,8BAAA,mCACA,EAAAC,6BAAA,kCACA,EAAAC,4BAAA,iCACA,EAAAC,aAAA,gBACA,EAAAC,qBAAA,yBACA,EAAAC,uBAAA,2BACA,EAAAC,kBAAA,qBACA,EAAAC,kBAAA,qBACA,EAAAC,sBAAA,0BACA,EAAAC,UAAA,aACA,EAAAC,mBAAA,uBACA,EAAAC,mBAAA,uBAtBF,CAAYtM,MAAgB,KA2G5B,SAAYC,GACV,EAAAsM,QAAA,UACA,EAAAC,QAAA,UACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SALF,CAAY1M,MAAQ,KAkBpB,SAAYC,GAEV,EAAA0M,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,OAAA,UAEA,EAAAC,OAAA,UAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KA1TF,CAAYtW,MAAY,KA8UxB,SAAYC,GACV,EAAAsW,IAAA,MACA,EAAA5D,GAAA,KAFF,CAAY1S,MAAe,KAm4B3B,SAAYC,GAEV,EAAAsW,cAAA,gBAEA,EAAAC,WAAA,aAEA,EAAAC,MAAA,QAEA,EAAAC,OAAA,SACA,EAAAC,cAAA,gBACA,EAAAC,YAAA,cACA,EAAAC,cAAA,gBACA,EAAAC,cAAA,gBACA,EAAAC,eAAA,iBACA,EAAAC,aAAA,eACA,EAAAC,eAAA,iBACA,EAAAC,eAAA,iBACA,EAAAC,oBAAA,sBACA,EAAAC,kBAAA,oBACA,EAAAC,oBAAA,sBACA,EAAAC,oBAAA,sBACA,EAAAC,YAAA,cACA,EAAAC,UAAA,YACA,EAAAC,YAAA,cACA,EAAAC,YAAA,cACA,EAAAC,gBAAA,kBACA,EAAAC,cAAA,gBACA,EAAAC,gBAAA,kBACA,EAAAC,gBAAA,kBACA,EAAAC,eAAA,iBACA,EAAAC,aAAA,eACA,EAAAC,eAAA,iBACA,EAAAC,eAAA,iBAhCF,CAAYjY,MAAU,KAkwBtB,SAAYC,GACV,EAAAiY,UAAA,YACA,EAAAC,OAAA,SAFF,CAAYlY,MAAkB,KAoO9B,SAAYC,GACV,EAAAkY,IAAA,MACA,EAAAC,KAAA,OAFF,CAAYnY,MAAS,KAsCrB,SAAYC,GACV,EAAAmY,WAAA,aACA,EAAAC,KAAA,OACA,EAAAC,aAAA,eACA,EAAAC,OAAA,SAJF,CAAYtY,MAAiB,M,oCC/pH7BuY,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ9Y,aAAe8Y,EAAQhZ,iBAAmBgZ,EAAQlZ,aAAekZ,EAAQ7Y,gBAAkB6Y,EAAQE,UAAYF,EAAQ1Y,UAAY0Y,EAAQ5Y,WAAa4Y,EAAQjZ,eAAiBiZ,EAAQpZ,eAAiBoZ,EAAQG,WAAaH,EAAQnZ,eAAY,EAE3P,SAAWA,GACPA,EAAiB,MAAI,QACrBA,EAAiB,MAAI,QACrBA,EAAkB,OAAI,SAH1B,CAIemZ,EAAQnZ,YAAcmZ,EAAQnZ,UAAY,KAEzD,SAAWsZ,GACPA,EAAiB,KAAI,OACrBA,EAAkB,MAAI,QACtBA,EAAoB,QAAI,UAH5B,CAIgBH,EAAQG,aAAeH,EAAQG,WAAa,KAE5D,SAAWvZ,GACPA,EAA0B,UAAI,YAC9BA,EAA4C,4BAAI,8BAFpD,CAGoBoZ,EAAQpZ,iBAAmBoZ,EAAQpZ,eAAiB,KAExE,SAAWG,GAEPA,EAAwB,QAAI,UAE5BA,EAA4B,YAAI,cAJpC,CAKoBiZ,EAAQjZ,iBAAmBiZ,EAAQjZ,eAAiB,KASxE,SAAWK,GAEPA,EAA0B,cAAI,gBAE9BA,EAAuB,WAAI,aAE3BA,EAAkB,MAAI,QAEtBA,EAAmB,OAAI,SAEvBA,EAA0B,cAAI,gBAE9BA,EAAwB,YAAI,cAE5BA,EAA0B,cAAI,gBAE9BA,EAA0B,cAAI,gBAE9BA,EAA2B,eAAI,iBAE/BA,EAAyB,aAAI,eAE7BA,EAA2B,eAAI,iBAE/BA,EAA2B,eAAI,iBAE/BA,EAAgC,oBAAI,sBAEpCA,EAA8B,kBAAI,oBAElCA,EAAgC,oBAAI,sBAEpCA,EAAgC,oBAAI,sBAEpCA,EAAwB,YAAI,cAE5BA,EAAsB,UAAI,YAE1BA,EAAwB,YAAI,cAE5BA,EAAwB,YAAI,cAE5BA,EAA4B,gBAAI,kBAEhCA,EAA0B,cAAI,gBAE9BA,EAA4B,gBAAI,kBAEhCA,EAA4B,gBAAI,kBAEhCA,EAA2B,eAAI,iBAE/BA,EAAyB,aAAI,eAE7BA,EAA2B,eAAI,iBAE/BA,EAA2B,eAAI,iBAxDnC,CAyDgB4Y,EAAQ5Y,aAAe4Y,EAAQ5Y,WAAa,KAE5D,SAAWE,GACPA,EAAe,IAAI,MACnBA,EAAgB,KAAI,OAFxB,CAGe0Y,EAAQ1Y,YAAc0Y,EAAQ1Y,UAAY,KAEzD,SAAW4Y,GACPA,EAAyB,cAAI,gBAC7BA,EAAsC,2BAAI,6BAC1CA,EAAqC,0BAAI,4BACzCA,EAAwC,6BAAI,+BAC5CA,EAAwC,6BAAI,+BAC5CA,EAA6B,kBAAI,oBACjCA,EAAmC,wBAAI,0BACvCA,EAAoC,yBAAI,2BACxCA,EAAoC,yBAAI,2BACxCA,EAA4C,iCAAI,mCAChDA,EAAqC,0BAAI,4BACzCA,EAAgC,qBAAI,uBACpCA,EAAkC,uBAAI,yBACtCA,EAAqC,0BAAI,4BACzCA,EAAqC,0BAAI,4BACzCA,EAAmC,wBAAI,0BACvCA,EAAmC,wBAAI,0BACvCA,EAAkC,uBAAI,yBACtCA,EAAsC,2BAAI,6BAC1CA,EAA4C,iCAAI,mCAChDA,EAA4C,iCAAI,mCAChDA,EAAiD,sCAAI,wCACrDA,EAAiD,sCAAI,wCACrDA,EAA8C,mCAAI,qCAClDA,EAA8C,mCAAI,qCAClDA,EAA8B,mBAAI,qBAClCA,EAAiC,sBAAI,wBA3BzC,CA4BeF,EAAQE,YAAcF,EAAQE,UAAY,KAEzD,SAAW/Y,GACPA,EAAqB,IAAI,MACzBA,EAAoB,GAAI,KAF5B,CAGqB6Y,EAAQ7Y,kBAAoB6Y,EAAQ7Y,gBAAkB,KAQ3E,SAAWL,GAEPA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,MAEtBA,EAAkB,IAAI,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GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAoB,MAAI,QAExBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAoB,MAAI,QAExBA,EAAoB,MAAI,QAExBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAoB,MAAI,QAExBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAiB,GAAI,KAErBA,EAAoB,MAAI,QAExBA,EAAoB,MAAI,QAExBA,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","file":"x","sourcesContent":["// tslint:disable\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\n\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type AddNoteToCustomerInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type AddNoteToOrderInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type Address = Node & {\n  __typename?: 'Address';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country: Country;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Adjustment = {\n  __typename?: 'Adjustment';\n  adjustmentSource: Scalars['String'];\n  type: AdjustmentType;\n  description: Scalars['String'];\n  amount: Scalars['Int'];\n};\n\nexport enum AdjustmentType {\n  Tax = 'TAX',\n  Promotion = 'PROMOTION',\n  Shipping = 'SHIPPING',\n  Refund = 'REFUND',\n  TaxRefund = 'TAX_REFUND',\n  PromotionRefund = 'PROMOTION_REFUND',\n  ShippingRefund = 'SHIPPING_REFUND'\n}\n\nexport type Administrator = Node & {\n  __typename?: 'Administrator';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  user: User;\n};\n\nexport type AdministratorFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type AdministratorList = PaginatedList & {\n  __typename?: 'AdministratorList';\n  items: Array<Administrator>;\n  totalItems: Scalars['Int'];\n};\n\nexport type AdministratorListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AdministratorSortParameter>;\n  filter?: Maybe<AdministratorFilterParameter>;\n};\n\nexport type AdministratorSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  type: AssetType;\n  fileSize: Scalars['Int'];\n  mimeType: Scalars['String'];\n  width: Scalars['Int'];\n  height: Scalars['Int'];\n  source: Scalars['String'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\nexport type AssetFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  type?: Maybe<StringOperators>;\n  fileSize?: Maybe<NumberOperators>;\n  mimeType?: Maybe<StringOperators>;\n  width?: Maybe<NumberOperators>;\n  height?: Maybe<NumberOperators>;\n  source?: Maybe<StringOperators>;\n  preview?: Maybe<StringOperators>;\n};\n\nexport type AssetList = PaginatedList & {\n  __typename?: 'AssetList';\n  items: Array<Asset>;\n  totalItems: Scalars['Int'];\n};\n\nexport type AssetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AssetSortParameter>;\n  filter?: Maybe<AssetFilterParameter>;\n};\n\nexport type AssetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  fileSize?: Maybe<SortOrder>;\n  mimeType?: Maybe<SortOrder>;\n  width?: Maybe<SortOrder>;\n  height?: Maybe<SortOrder>;\n  source?: Maybe<SortOrder>;\n  preview?: Maybe<SortOrder>;\n};\n\nexport enum AssetType {\n  Image = 'IMAGE',\n  Video = 'VIDEO',\n  Binary = 'BINARY'\n}\n\nexport type AssignProductsToChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n  priceFactor?: Maybe<Scalars['Float']>;\n};\n\nexport type BooleanCustomFieldConfig = CustomField & {\n  __typename?: 'BooleanCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type BooleanOperators = {\n  eq?: Maybe<Scalars['Boolean']>;\n};\n\nexport type BulkDiscount = {\n  __typename?: 'BulkDiscount';\n  productVariant: ProductVariant;\n  quantity: Scalars['Int'];\n  price: Scalars['Int'];\n};\n\nexport type BulkDiscountInput = {\n  quantity: Scalars['Int'];\n  price: Scalars['Int'];\n};\n\nexport type Cancellation = Node & StockMovement & {\n  __typename?: 'Cancellation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type CancelOrderInput = {\n  /** The id of the order to be cancelled */\n  orderId: Scalars['ID'];\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\n  lines?: Maybe<Array<OrderLineInput>>;\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type Channel = Node & {\n  __typename?: 'Channel';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultTaxZone?: Maybe<Zone>;\n  defaultShippingZone?: Maybe<Zone>;\n  defaultLanguageCode: LanguageCode;\n  currencyCode: CurrencyCode;\n  pricesIncludeTax: Scalars['Boolean'];\n};\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode?: Maybe<LanguageCode>;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  breadcrumbs: Array<CollectionBreadcrumb>;\n  position: Scalars['Int'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  parent?: Maybe<Collection>;\n  children?: Maybe<Array<Collection>>;\n  filters: Array<ConfigurableOperation>;\n  translations: Array<CollectionTranslation>;\n  productVariants: ProductVariantList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CollectionProductVariantsArgs = {\n  options?: Maybe<ProductVariantListOptions>;\n};\n\nexport type CollectionBreadcrumb = {\n  __typename?: 'CollectionBreadcrumb';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type CollectionFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  position?: Maybe<NumberOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type CollectionList = PaginatedList & {\n  __typename?: 'CollectionList';\n  items: Array<Collection>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CollectionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CollectionSortParameter>;\n  filter?: Maybe<CollectionFilterParameter>;\n};\n\nexport type CollectionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  position?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type CollectionTranslation = {\n  __typename?: 'CollectionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ConfigArg = {\n  __typename?: 'ConfigArg';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigArgDefinition = {\n  __typename?: 'ConfigArgDefinition';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  config?: Maybe<Scalars['JSON']>;\n};\n\nexport type ConfigArgInput = {\n  name: Scalars['String'];\n  type: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigurableOperation = {\n  __typename?: 'ConfigurableOperation';\n  code: Scalars['String'];\n  args: Array<ConfigArg>;\n};\n\nexport type ConfigurableOperationDefinition = {\n  __typename?: 'ConfigurableOperationDefinition';\n  code: Scalars['String'];\n  args: Array<ConfigArgDefinition>;\n  description: Scalars['String'];\n};\n\nexport type ConfigurableOperationInput = {\n  code: Scalars['String'];\n  arguments: Array<ConfigArgInput>;\n};\n\nexport type Coordinate = {\n  __typename?: 'Coordinate';\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type CoordinateInput = {\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type Country = Node & {\n  __typename?: 'Country';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  translations: Array<CountryTranslation>;\n};\n\nexport type CountryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type CountryList = PaginatedList & {\n  __typename?: 'CountryList';\n  items: Array<Country>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CountryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CountrySortParameter>;\n  filter?: Maybe<CountryFilterParameter>;\n};\n\nexport type CountrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CountryTranslation = {\n  __typename?: 'CountryTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type CountryTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type CreateAddressInput = {\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateAdministratorInput = {\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  password: Scalars['String'];\n  roleIds: Array<Scalars['ID']>;\n};\n\nexport type CreateAssetInput = {\n  file: Scalars['Upload'];\n};\n\nexport type CreateChannelInput = {\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultLanguageCode: LanguageCode;\n  pricesIncludeTax: Scalars['Boolean'];\n  currencyCode: CurrencyCode;\n  defaultTaxZoneId: Scalars['ID'];\n  defaultShippingZoneId: Scalars['ID'];\n};\n\nexport type CreateCollectionInput = {\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  parentId?: Maybe<Scalars['ID']>;\n  filters: Array<ConfigurableOperationInput>;\n  translations: Array<CreateCollectionTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateCollectionTranslationInput = {\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateCountryInput = {\n  code: Scalars['String'];\n  translations: Array<CountryTranslationInput>;\n  enabled: Scalars['Boolean'];\n};\n\nexport type CreateCustomerGroupInput = {\n  name: Scalars['String'];\n  customerIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type CreateCustomerInput = {\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetInput = {\n  code: Scalars['String'];\n  isPrivate: Scalars['Boolean'];\n  translations: Array<FacetTranslationInput>;\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetValueInput = {\n  facetId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetValueWithFacetInput = {\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n};\n\nexport type CreateGroupOptionInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n};\n\nexport type CreateProductCustomFieldsInput = {\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type CreateProductInput = {\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations: Array<ProductTranslationInput>;\n  customFields?: Maybe<CreateProductCustomFieldsInput>;\n};\n\nexport type CreateProductOptionGroupInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  options: Array<CreateGroupOptionInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductOptionInput = {\n  productOptionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductVariantCustomFieldsInput = {\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\n  Unit?: Maybe<Scalars['String']>;\n  Sales?: Maybe<Scalars['Int']>;\n};\n\nexport type CreateProductVariantInput = {\n  productId: Scalars['ID'];\n  translations: Array<ProductVariantTranslationInput>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku: Scalars['String'];\n  price?: Maybe<Scalars['Int']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  optionIds?: Maybe<Array<Scalars['ID']>>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<CreateProductVariantCustomFieldsInput>;\n};\n\nexport type CreateProductVariantOptionInput = {\n  optionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionTranslationInput>;\n};\n\nexport type CreatePromotionInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions: Array<ConfigurableOperationInput>;\n  actions: Array<ConfigurableOperationInput>;\n};\n\nexport type CreateRoleInput = {\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type CreateShippingMethodInput = {\n  code: Scalars['String'];\n  description: Scalars['String'];\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n};\n\nexport type CreateTaxCategoryInput = {\n  name: Scalars['String'];\n};\n\nexport type CreateTaxRateInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  categoryId: Scalars['ID'];\n  zoneId: Scalars['ID'];\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateZoneInput = {\n  name: Scalars['String'];\n  memberIds?: Maybe<Array<Scalars['ID']>>;\n};\n\n/**\n * @description\n * ISO 4217 currency code\n * \n * @docsCategory common\n */\nexport enum CurrencyCode {\n  /** United Arab Emirates dirham */\n  Aed = 'AED',\n  /** Afghan afghani */\n  Afn = 'AFN',\n  /** Albanian lek */\n  All = 'ALL',\n  /** Armenian dram */\n  Amd = 'AMD',\n  /** Netherlands Antillean guilder */\n  Ang = 'ANG',\n  /** Angolan kwanza */\n  Aoa = 'AOA',\n  /** Argentine peso */\n  Ars = 'ARS',\n  /** Australian dollar */\n  Aud = 'AUD',\n  /** Aruban florin */\n  Awg = 'AWG',\n  /** Azerbaijani manat */\n  Azn = 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  Bam = 'BAM',\n  /** Barbados dollar */\n  Bbd = 'BBD',\n  /** Bangladeshi taka */\n  Bdt = 'BDT',\n  /** Bulgarian lev */\n  Bgn = 'BGN',\n  /** Bahraini dinar */\n  Bhd = 'BHD',\n  /** Burundian franc */\n  Bif = 'BIF',\n  /** Bermudian dollar */\n  Bmd = 'BMD',\n  /** Brunei dollar */\n  Bnd = 'BND',\n  /** Boliviano */\n  Bob = 'BOB',\n  /** Brazilian real */\n  Brl = 'BRL',\n  /** Bahamian dollar */\n  Bsd = 'BSD',\n  /** Bhutanese ngultrum */\n  Btn = 'BTN',\n  /** Botswana pula */\n  Bwp = 'BWP',\n  /** Belarusian ruble */\n  Byn = 'BYN',\n  /** Belize dollar */\n  Bzd = 'BZD',\n  /** Canadian dollar */\n  Cad = 'CAD',\n  /** Congolese franc */\n  Cdf = 'CDF',\n  /** Swiss franc */\n  Chf = 'CHF',\n  /** Chilean peso */\n  Clp = 'CLP',\n  /** Renminbi (Chinese) yuan */\n  Cny = 'CNY',\n  /** Colombian peso */\n  Cop = 'COP',\n  /** Costa Rican colon */\n  Crc = 'CRC',\n  /** Cuban convertible peso */\n  Cuc = 'CUC',\n  /** Cuban peso */\n  Cup = 'CUP',\n  /** Cape Verde escudo */\n  Cve = 'CVE',\n  /** Czech koruna */\n  Czk = 'CZK',\n  /** Djiboutian franc */\n  Djf = 'DJF',\n  /** Danish krone */\n  Dkk = 'DKK',\n  /** Dominican peso */\n  Dop = 'DOP',\n  /** Algerian dinar */\n  Dzd = 'DZD',\n  /** Egyptian pound */\n  Egp = 'EGP',\n  /** Eritrean nakfa */\n  Ern = 'ERN',\n  /** Ethiopian birr */\n  Etb = 'ETB',\n  /** Euro */\n  Eur = 'EUR',\n  /** Fiji dollar */\n  Fjd = 'FJD',\n  /** Falkland Islands pound */\n  Fkp = 'FKP',\n  /** Pound sterling */\n  Gbp = 'GBP',\n  /** Georgian lari */\n  Gel = 'GEL',\n  /** Ghanaian cedi */\n  Ghs = 'GHS',\n  /** Gibraltar pound */\n  Gip = 'GIP',\n  /** Gambian dalasi */\n  Gmd = 'GMD',\n  /** Guinean franc */\n  Gnf = 'GNF',\n  /** Guatemalan quetzal */\n  Gtq = 'GTQ',\n  /** Guyanese dollar */\n  Gyd = 'GYD',\n  /** Hong Kong dollar */\n  Hkd = 'HKD',\n  /** Honduran lempira */\n  Hnl = 'HNL',\n  /** Croatian kuna */\n  Hrk = 'HRK',\n  /** Haitian gourde */\n  Htg = 'HTG',\n  /** Hungarian forint */\n  Huf = 'HUF',\n  /** Indonesian rupiah */\n  Idr = 'IDR',\n  /** Israeli new shekel */\n  Ils = 'ILS',\n  /** Indian rupee */\n  Inr = 'INR',\n  /** Iraqi dinar */\n  Iqd = 'IQD',\n  /** Iranian rial */\n  Irr = 'IRR',\n  /** Icelandic króna */\n  Isk = 'ISK',\n  /** Jamaican dollar */\n  Jmd = 'JMD',\n  /** Jordanian dinar */\n  Jod = 'JOD',\n  /** Japanese yen */\n  Jpy = 'JPY',\n  /** Kenyan shilling */\n  Kes = 'KES',\n  /** Kyrgyzstani som */\n  Kgs = 'KGS',\n  /** Cambodian riel */\n  Khr = 'KHR',\n  /** Comoro franc */\n  Kmf = 'KMF',\n  /** North Korean won */\n  Kpw = 'KPW',\n  /** South Korean won */\n  Krw = 'KRW',\n  /** Kuwaiti dinar */\n  Kwd = 'KWD',\n  /** Cayman Islands dollar */\n  Kyd = 'KYD',\n  /** Kazakhstani tenge */\n  Kzt = 'KZT',\n  /** Lao kip */\n  Lak = 'LAK',\n  /** Lebanese pound */\n  Lbp = 'LBP',\n  /** Sri Lankan rupee */\n  Lkr = 'LKR',\n  /** Liberian dollar */\n  Lrd = 'LRD',\n  /** Lesotho loti */\n  Lsl = 'LSL',\n  /** Libyan dinar */\n  Lyd = 'LYD',\n  /** Moroccan dirham */\n  Mad = 'MAD',\n  /** Moldovan leu */\n  Mdl = 'MDL',\n  /** Malagasy ariary */\n  Mga = 'MGA',\n  /** Macedonian denar */\n  Mkd = 'MKD',\n  /** Myanmar kyat */\n  Mmk = 'MMK',\n  /** Mongolian tögrög */\n  Mnt = 'MNT',\n  /** Macanese pataca */\n  Mop = 'MOP',\n  /** Mauritanian ouguiya */\n  Mru = 'MRU',\n  /** Mauritian rupee */\n  Mur = 'MUR',\n  /** Maldivian rufiyaa */\n  Mvr = 'MVR',\n  /** Malawian kwacha */\n  Mwk = 'MWK',\n  /** Mexican peso */\n  Mxn = 'MXN',\n  /** Malaysian ringgit */\n  Myr = 'MYR',\n  /** Mozambican metical */\n  Mzn = 'MZN',\n  /** Namibian dollar */\n  Nad = 'NAD',\n  /** Nigerian naira */\n  Ngn = 'NGN',\n  /** Nicaraguan córdoba */\n  Nio = 'NIO',\n  /** Norwegian krone */\n  Nok = 'NOK',\n  /** Nepalese rupee */\n  Npr = 'NPR',\n  /** New Zealand dollar */\n  Nzd = 'NZD',\n  /** Omani rial */\n  Omr = 'OMR',\n  /** Panamanian balboa */\n  Pab = 'PAB',\n  /** Peruvian sol */\n  Pen = 'PEN',\n  /** Papua New Guinean kina */\n  Pgk = 'PGK',\n  /** Philippine peso */\n  Php = 'PHP',\n  /** Pakistani rupee */\n  Pkr = 'PKR',\n  /** Polish złoty */\n  Pln = 'PLN',\n  /** Paraguayan guaraní */\n  Pyg = 'PYG',\n  /** Qatari riyal */\n  Qar = 'QAR',\n  /** Romanian leu */\n  Ron = 'RON',\n  /** Serbian dinar */\n  Rsd = 'RSD',\n  /** Russian ruble */\n  Rub = 'RUB',\n  /** Rwandan franc */\n  Rwf = 'RWF',\n  /** Saudi riyal */\n  Sar = 'SAR',\n  /** Solomon Islands dollar */\n  Sbd = 'SBD',\n  /** Seychelles rupee */\n  Scr = 'SCR',\n  /** Sudanese pound */\n  Sdg = 'SDG',\n  /** Swedish krona/kronor */\n  Sek = 'SEK',\n  /** Singapore dollar */\n  Sgd = 'SGD',\n  /** Saint Helena pound */\n  Shp = 'SHP',\n  /** Sierra Leonean leone */\n  Sll = 'SLL',\n  /** Somali shilling */\n  Sos = 'SOS',\n  /** Surinamese dollar */\n  Srd = 'SRD',\n  /** South Sudanese pound */\n  Ssp = 'SSP',\n  /** São Tomé and Príncipe dobra */\n  Stn = 'STN',\n  /** Salvadoran colón */\n  Svc = 'SVC',\n  /** Syrian pound */\n  Syp = 'SYP',\n  /** Swazi lilangeni */\n  Szl = 'SZL',\n  /** Thai baht */\n  Thb = 'THB',\n  /** Tajikistani somoni */\n  Tjs = 'TJS',\n  /** Turkmenistan manat */\n  Tmt = 'TMT',\n  /** Tunisian dinar */\n  Tnd = 'TND',\n  /** Tongan paʻanga */\n  Top = 'TOP',\n  /** Turkish lira */\n  Try = 'TRY',\n  /** Trinidad and Tobago dollar */\n  Ttd = 'TTD',\n  /** New Taiwan dollar */\n  Twd = 'TWD',\n  /** Tanzanian shilling */\n  Tzs = 'TZS',\n  /** Ukrainian hryvnia */\n  Uah = 'UAH',\n  /** Ugandan shilling */\n  Ugx = 'UGX',\n  /** United States dollar */\n  Usd = 'USD',\n  /** Uruguayan peso */\n  Uyu = 'UYU',\n  /** Uzbekistan som */\n  Uzs = 'UZS',\n  /** Venezuelan bolívar soberano */\n  Ves = 'VES',\n  /** Vietnamese đồng */\n  Vnd = 'VND',\n  /** Vanuatu vatu */\n  Vuv = 'VUV',\n  /** Samoan tala */\n  Wst = 'WST',\n  /** CFA franc BEAC */\n  Xaf = 'XAF',\n  /** East Caribbean dollar */\n  Xcd = 'XCD',\n  /** CFA franc BCEAO */\n  Xof = 'XOF',\n  /** CFP franc (franc Pacifique) */\n  Xpf = 'XPF',\n  /** Yemeni rial */\n  Yer = 'YER',\n  /** South African rand */\n  Zar = 'ZAR',\n  /** Zambian kwacha */\n  Zmw = 'ZMW',\n  /** Zimbabwean dollar */\n  Zwl = 'ZWL'\n}\n\nexport type CurrentUser = {\n  __typename?: 'CurrentUser';\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n  channels: Array<CurrentUserChannel>;\n};\n\nexport type CurrentUserChannel = {\n  __typename?: 'CurrentUserChannel';\n  id: Scalars['ID'];\n  token: Scalars['String'];\n  code: Scalars['String'];\n  permissions: Array<Permission>;\n};\n\nexport type Customer = Node & {\n  __typename?: 'Customer';\n  groups: Array<CustomerGroup>;\n  history: HistoryEntryList;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  addresses?: Maybe<Array<Address>>;\n  orders: OrderList;\n  user?: Maybe<User>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CustomerHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\n\nexport type CustomerOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\nexport type CustomerFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  title?: Maybe<StringOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  phoneNumber?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type CustomerGroup = Node & {\n  __typename?: 'CustomerGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  customers: CustomerList;\n};\n\n\nexport type CustomerGroupCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\nexport type CustomerGroupFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n};\n\nexport type CustomerGroupList = PaginatedList & {\n  __typename?: 'CustomerGroupList';\n  items: Array<CustomerGroup>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerGroupListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerGroupSortParameter>;\n  filter?: Maybe<CustomerGroupFilterParameter>;\n};\n\nexport type CustomerGroupSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CustomerList = PaginatedList & {\n  __typename?: 'CustomerList';\n  items: Array<Customer>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerSortParameter>;\n  filter?: Maybe<CustomerFilterParameter>;\n};\n\nexport type CustomerSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  title?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  phoneNumber?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type CustomField = {\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig;\n\nexport type CustomFields = {\n  __typename?: 'CustomFields';\n  Address: Array<CustomFieldConfig>;\n  Collection: Array<CustomFieldConfig>;\n  Customer: Array<CustomFieldConfig>;\n  Facet: Array<CustomFieldConfig>;\n  FacetValue: Array<CustomFieldConfig>;\n  GlobalSettings: Array<CustomFieldConfig>;\n  Order: Array<CustomFieldConfig>;\n  OrderLine: Array<CustomFieldConfig>;\n  Product: Array<CustomFieldConfig>;\n  ProductOption: Array<CustomFieldConfig>;\n  ProductOptionGroup: Array<CustomFieldConfig>;\n  ProductVariant: Array<CustomFieldConfig>;\n  User: Array<CustomFieldConfig>;\n};\n\nexport type DateOperators = {\n  eq?: Maybe<Scalars['DateTime']>;\n  before?: Maybe<Scalars['DateTime']>;\n  after?: Maybe<Scalars['DateTime']>;\n  between?: Maybe<DateRange>;\n};\n\nexport type DateRange = {\n  start: Scalars['DateTime'];\n  end: Scalars['DateTime'];\n};\n\n\n/**\n * Expects the same validation formats as the <input type=\"datetime-local\"> HTML element.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\n */\nexport type DateTimeCustomFieldConfig = CustomField & {\n  __typename?: 'DateTimeCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['String']>;\n  max?: Maybe<Scalars['String']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type DeletionResponse = {\n  __typename?: 'DeletionResponse';\n  result: DeletionResult;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport enum DeletionResult {\n  /** The entity was successfully deleted */\n  Deleted = 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NotDeleted = 'NOT_DELETED'\n}\n\nexport type Email = Node & {\n  __typename?: 'Email';\n  id: Scalars['ID'];\n  email: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type EmailAddInput = {\n  email: Scalars['String'];\n};\n\nexport type EmailFilterParameter = {\n  email?: Maybe<StringOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n};\n\nexport type EmailList = PaginatedList & {\n  __typename?: 'EmailList';\n  items: Array<Email>;\n  totalItems: Scalars['Int'];\n};\n\nexport type EmailListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<EmailSortParameter>;\n  filter?: Maybe<EmailFilterParameter>;\n};\n\nexport type EmailSortParameter = {\n  id?: Maybe<SortOrder>;\n  email?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type EmailUpdateInput = {\n  id: Scalars['ID'];\n  email: Scalars['String'];\n};\n\nexport type Facet = Node & {\n  __typename?: 'Facet';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  values: Array<FacetValue>;\n  translations: Array<FacetTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n};\n\nexport type FacetList = PaginatedList & {\n  __typename?: 'FacetList';\n  items: Array<Facet>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<FacetSortParameter>;\n  filter?: Maybe<FacetFilterParameter>;\n};\n\nexport type FacetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\nexport type FacetTranslation = {\n  __typename?: 'FacetTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetValue = Node & {\n  __typename?: 'FacetValue';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  facet: Facet;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/**\n * Which FacetValues are present in the products returned\n * by the search, and in what quantity.\n */\nexport type FacetValueResult = {\n  __typename?: 'FacetValueResult';\n  facetValue: FacetValue;\n  count: Scalars['Int'];\n};\n\nexport type FacetValueTranslation = {\n  __typename?: 'FacetValueTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetValueTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FloatCustomFieldConfig = CustomField & {\n  __typename?: 'FloatCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Float']>;\n  max?: Maybe<Scalars['Float']>;\n  step?: Maybe<Scalars['Float']>;\n};\n\nexport type Fulfillment = Node & {\n  __typename?: 'Fulfillment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  orderItems: Array<OrderItem>;\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n};\n\nexport type FulfillOrderInput = {\n  lines: Array<OrderLineInput>;\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n};\n\nexport type GlobalSettings = {\n  __typename?: 'GlobalSettings';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  availableLanguages: Array<LanguageCode>;\n  trackInventory: Scalars['Boolean'];\n  serverConfig: ServerConfig;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type HistoryEntry = Node & {\n  __typename?: 'HistoryEntry';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isPublic: Scalars['Boolean'];\n  type: HistoryEntryType;\n  administrator?: Maybe<Administrator>;\n  data: Scalars['JSON'];\n};\n\nexport type HistoryEntryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  isPublic?: Maybe<BooleanOperators>;\n  type?: Maybe<StringOperators>;\n};\n\nexport type HistoryEntryList = PaginatedList & {\n  __typename?: 'HistoryEntryList';\n  items: Array<HistoryEntry>;\n  totalItems: Scalars['Int'];\n};\n\nexport type HistoryEntryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<HistoryEntrySortParameter>;\n  filter?: Maybe<HistoryEntryFilterParameter>;\n};\n\nexport type HistoryEntrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport enum HistoryEntryType {\n  CustomerRegistered = 'CUSTOMER_REGISTERED',\n  CustomerVerified = 'CUSTOMER_VERIFIED',\n  CustomerDetailUpdated = 'CUSTOMER_DETAIL_UPDATED',\n  CustomerAddedToGroup = 'CUSTOMER_ADDED_TO_GROUP',\n  CustomerRemovedFromGroup = 'CUSTOMER_REMOVED_FROM_GROUP',\n  CustomerAddressCreated = 'CUSTOMER_ADDRESS_CREATED',\n  CustomerAddressUpdated = 'CUSTOMER_ADDRESS_UPDATED',\n  CustomerAddressDeleted = 'CUSTOMER_ADDRESS_DELETED',\n  CustomerPasswordUpdated = 'CUSTOMER_PASSWORD_UPDATED',\n  CustomerPasswordResetRequested = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CustomerPasswordResetVerified = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CustomerEmailUpdateRequested = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CustomerEmailUpdateVerified = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CustomerNote = 'CUSTOMER_NOTE',\n  OrderStateTransition = 'ORDER_STATE_TRANSITION',\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\n  OrderFullfillment = 'ORDER_FULLFILLMENT',\n  OrderCancellation = 'ORDER_CANCELLATION',\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\n  OrderNote = 'ORDER_NOTE',\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED'\n}\n\nexport type ImportInfo = {\n  __typename?: 'ImportInfo';\n  errors?: Maybe<Array<Scalars['String']>>;\n  processed: Scalars['Int'];\n  imported: Scalars['Int'];\n};\n\nexport type IntCustomFieldConfig = CustomField & {\n  __typename?: 'IntCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Int']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type Job = Node & {\n  __typename?: 'Job';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  startedAt?: Maybe<Scalars['DateTime']>;\n  settledAt?: Maybe<Scalars['DateTime']>;\n  queueName: Scalars['String'];\n  state: JobState;\n  progress: Scalars['Float'];\n  data?: Maybe<Scalars['JSON']>;\n  result?: Maybe<Scalars['JSON']>;\n  error?: Maybe<Scalars['JSON']>;\n  isSettled: Scalars['Boolean'];\n  duration: Scalars['Int'];\n};\n\nexport type JobFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  startedAt?: Maybe<DateOperators>;\n  settledAt?: Maybe<DateOperators>;\n  queueName?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  progress?: Maybe<NumberOperators>;\n  isSettled?: Maybe<BooleanOperators>;\n  duration?: Maybe<NumberOperators>;\n};\n\nexport type JobList = PaginatedList & {\n  __typename?: 'JobList';\n  items: Array<Job>;\n  totalItems: Scalars['Int'];\n};\n\nexport type JobListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<JobSortParameter>;\n  filter?: Maybe<JobFilterParameter>;\n};\n\nexport type JobQueue = {\n  __typename?: 'JobQueue';\n  name: Scalars['String'];\n  running: Scalars['Boolean'];\n};\n\nexport type JobSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  startedAt?: Maybe<SortOrder>;\n  settledAt?: Maybe<SortOrder>;\n  queueName?: Maybe<SortOrder>;\n  progress?: Maybe<SortOrder>;\n  duration?: Maybe<SortOrder>;\n};\n\n/**\n * @description\n * The state of a Job in the JobQueue\n * \n * @docsCategory common\n */\nexport enum JobState {\n  Pending = 'PENDING',\n  Running = 'RUNNING',\n  Completed = 'COMPLETED',\n  Retrying = 'RETRYING',\n  Failed = 'FAILED'\n}\n\n\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n * \n * @docsCategory common\n */\nexport enum LanguageCode {\n  /** Afrikaans */\n  Af = 'af',\n  /** Akan */\n  Ak = 'ak',\n  /** Albanian */\n  Sq = 'sq',\n  /** Amharic */\n  Am = 'am',\n  /** Arabic */\n  Ar = 'ar',\n  /** Armenian */\n  Hy = 'hy',\n  /** Assamese */\n  As = 'as',\n  /** Azerbaijani */\n  Az = 'az',\n  /** Bambara */\n  Bm = 'bm',\n  /** Bangla */\n  Bn = 'bn',\n  /** Basque */\n  Eu = 'eu',\n  /** Belarusian */\n  Be = 'be',\n  /** Bosnian */\n  Bs = 'bs',\n  /** Breton */\n  Br = 'br',\n  /** Bulgarian */\n  Bg = 'bg',\n  /** Burmese */\n  My = 'my',\n  /** Catalan */\n  Ca = 'ca',\n  /** Chechen */\n  Ce = 'ce',\n  /** Chinese */\n  Zh = 'zh',\n  /** Simplified Chinese */\n  ZhHans = 'zh_Hans',\n  /** Traditional Chinese */\n  ZhHant = 'zh_Hant',\n  /** Church Slavic */\n  Cu = 'cu',\n  /** Cornish */\n  Kw = 'kw',\n  /** Corsican */\n  Co = 'co',\n  /** Croatian */\n  Hr = 'hr',\n  /** Czech */\n  Cs = 'cs',\n  /** Danish */\n  Da = 'da',\n  /** Dutch */\n  Nl = 'nl',\n  /** Flemish */\n  NlBe = 'nl_BE',\n  /** Dzongkha */\n  Dz = 'dz',\n  /** English */\n  En = 'en',\n  /** Australian English */\n  EnAu = 'en_AU',\n  /** Canadian English */\n  EnCa = 'en_CA',\n  /** British English */\n  EnGb = 'en_GB',\n  /** American English */\n  EnUs = 'en_US',\n  /** Esperanto */\n  Eo = 'eo',\n  /** Estonian */\n  Et = 'et',\n  /** Ewe */\n  Ee = 'ee',\n  /** Faroese */\n  Fo = 'fo',\n  /** Finnish */\n  Fi = 'fi',\n  /** French */\n  Fr = 'fr',\n  /** Canadian French */\n  FrCa = 'fr_CA',\n  /** Swiss French */\n  FrCh = 'fr_CH',\n  /** Fulah */\n  Ff = 'ff',\n  /** Galician */\n  Gl = 'gl',\n  /** Ganda */\n  Lg = 'lg',\n  /** Georgian */\n  Ka = 'ka',\n  /** German */\n  De = 'de',\n  /** Austrian German */\n  DeAt = 'de_AT',\n  /** Swiss High German */\n  DeCh = 'de_CH',\n  /** Greek */\n  El = 'el',\n  /** Gujarati */\n  Gu = 'gu',\n  /** Haitian Creole */\n  Ht = 'ht',\n  /** Hausa */\n  Ha = 'ha',\n  /** Hebrew */\n  He = 'he',\n  /** Hindi */\n  Hi = 'hi',\n  /** Hungarian */\n  Hu = 'hu',\n  /** Icelandic */\n  Is = 'is',\n  /** Igbo */\n  Ig = 'ig',\n  /** Indonesian */\n  Id = 'id',\n  /** Interlingua */\n  Ia = 'ia',\n  /** Irish */\n  Ga = 'ga',\n  /** Italian */\n  It = 'it',\n  /** Japanese */\n  Ja = 'ja',\n  /** Javanese */\n  Jv = 'jv',\n  /** Kalaallisut */\n  Kl = 'kl',\n  /** Kannada */\n  Kn = 'kn',\n  /** Kashmiri */\n  Ks = 'ks',\n  /** Kazakh */\n  Kk = 'kk',\n  /** Khmer */\n  Km = 'km',\n  /** Kikuyu */\n  Ki = 'ki',\n  /** Kinyarwanda */\n  Rw = 'rw',\n  /** Korean */\n  Ko = 'ko',\n  /** Kurdish */\n  Ku = 'ku',\n  /** Kyrgyz */\n  Ky = 'ky',\n  /** Lao */\n  Lo = 'lo',\n  /** Latin */\n  La = 'la',\n  /** Latvian */\n  Lv = 'lv',\n  /** Lingala */\n  Ln = 'ln',\n  /** Lithuanian */\n  Lt = 'lt',\n  /** Luba-Katanga */\n  Lu = 'lu',\n  /** Luxembourgish */\n  Lb = 'lb',\n  /** Macedonian */\n  Mk = 'mk',\n  /** Malagasy */\n  Mg = 'mg',\n  /** Malay */\n  Ms = 'ms',\n  /** Malayalam */\n  Ml = 'ml',\n  /** Maltese */\n  Mt = 'mt',\n  /** Manx */\n  Gv = 'gv',\n  /** Maori */\n  Mi = 'mi',\n  /** Marathi */\n  Mr = 'mr',\n  /** Mongolian */\n  Mn = 'mn',\n  /** Nepali */\n  Ne = 'ne',\n  /** North Ndebele */\n  Nd = 'nd',\n  /** Northern Sami */\n  Se = 'se',\n  /** Norwegian Bokmål */\n  Nb = 'nb',\n  /** Norwegian Nynorsk */\n  Nn = 'nn',\n  /** Nyanja */\n  Ny = 'ny',\n  /** Odia */\n  Or = 'or',\n  /** Oromo */\n  Om = 'om',\n  /** Ossetic */\n  Os = 'os',\n  /** Pashto */\n  Ps = 'ps',\n  /** Persian */\n  Fa = 'fa',\n  /** Dari */\n  FaAf = 'fa_AF',\n  /** Polish */\n  Pl = 'pl',\n  /** Portuguese */\n  Pt = 'pt',\n  /** Brazilian Portuguese */\n  PtBr = 'pt_BR',\n  /** European Portuguese */\n  PtPt = 'pt_PT',\n  /** Punjabi */\n  Pa = 'pa',\n  /** Quechua */\n  Qu = 'qu',\n  /** Romanian */\n  Ro = 'ro',\n  /** Moldavian */\n  RoMd = 'ro_MD',\n  /** Romansh */\n  Rm = 'rm',\n  /** Rundi */\n  Rn = 'rn',\n  /** Russian */\n  Ru = 'ru',\n  /** Samoan */\n  Sm = 'sm',\n  /** Sango */\n  Sg = 'sg',\n  /** Sanskrit */\n  Sa = 'sa',\n  /** Scottish Gaelic */\n  Gd = 'gd',\n  /** Serbian */\n  Sr = 'sr',\n  /** Shona */\n  Sn = 'sn',\n  /** Sichuan Yi */\n  Ii = 'ii',\n  /** Sindhi */\n  Sd = 'sd',\n  /** Sinhala */\n  Si = 'si',\n  /** Slovak */\n  Sk = 'sk',\n  /** Slovenian */\n  Sl = 'sl',\n  /** Somali */\n  So = 'so',\n  /** Southern Sotho */\n  St = 'st',\n  /** Spanish */\n  Es = 'es',\n  /** European Spanish */\n  EsEs = 'es_ES',\n  /** Mexican Spanish */\n  EsMx = 'es_MX',\n  /** Sundanese */\n  Su = 'su',\n  /** Swahili */\n  Sw = 'sw',\n  /** Congo Swahili */\n  SwCd = 'sw_CD',\n  /** Swedish */\n  Sv = 'sv',\n  /** Tajik */\n  Tg = 'tg',\n  /** Tamil */\n  Ta = 'ta',\n  /** Tatar */\n  Tt = 'tt',\n  /** Telugu */\n  Te = 'te',\n  /** Thai */\n  Th = 'th',\n  /** Tibetan */\n  Bo = 'bo',\n  /** Tigrinya */\n  Ti = 'ti',\n  /** Tongan */\n  To = 'to',\n  /** Turkish */\n  Tr = 'tr',\n  /** Turkmen */\n  Tk = 'tk',\n  /** Ukrainian */\n  Uk = 'uk',\n  /** Urdu */\n  Ur = 'ur',\n  /** Uyghur */\n  Ug = 'ug',\n  /** Uzbek */\n  Uz = 'uz',\n  /** Vietnamese */\n  Vi = 'vi',\n  /** Volapük */\n  Vo = 'vo',\n  /** Welsh */\n  Cy = 'cy',\n  /** Western Frisian */\n  Fy = 'fy',\n  /** Wolof */\n  Wo = 'wo',\n  /** Xhosa */\n  Xh = 'xh',\n  /** Yiddish */\n  Yi = 'yi',\n  /** Yoruba */\n  Yo = 'yo',\n  /** Zulu */\n  Zu = 'zu'\n}\n\nexport type LocaleStringCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleStringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n};\n\nexport type LocalizedString = {\n  __typename?: 'LocalizedString';\n  languageCode: LanguageCode;\n  value: Scalars['String'];\n};\n\nexport enum LogicalOperator {\n  And = 'AND',\n  Or = 'OR'\n}\n\nexport type LoginResult = {\n  __typename?: 'LoginResult';\n  user: CurrentUser;\n};\n\nexport type MoveCollectionInput = {\n  collectionId: Scalars['ID'];\n  parentId: Scalars['ID'];\n  index: Scalars['Int'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Create a new Administrator */\n  createAdministrator: Administrator;\n  /** Update an existing Administrator */\n  updateAdministrator: Administrator;\n  /** Assign a Role to an Administrator */\n  assignRoleToAdministrator: Administrator;\n  /** Create a new Asset */\n  createAssets: Array<Asset>;\n  /** Update an existing Asset */\n  updateAsset: Asset;\n  /** Delete an Asset */\n  deleteAsset: DeletionResponse;\n  login: LoginResult;\n  logout: Scalars['Boolean'];\n  /** Create a new Channel */\n  createChannel: Channel;\n  /** Update an existing Channel */\n  updateChannel: Channel;\n  /** Delete a Channel */\n  deleteChannel: DeletionResponse;\n  /** Create a new Collection */\n  createCollection: Collection;\n  /** Update an existing Collection */\n  updateCollection: Collection;\n  /** Delete a Collection and all of its descendants */\n  deleteCollection: DeletionResponse;\n  /** Move a Collection to a different parent or index */\n  moveCollection: Collection;\n  /** Create a new Country */\n  createCountry: Country;\n  /** Update an existing Country */\n  updateCountry: Country;\n  /** Delete a Country */\n  deleteCountry: DeletionResponse;\n  /** Create a new CustomerGroup */\n  createCustomerGroup: CustomerGroup;\n  /** Update an existing CustomerGroup */\n  updateCustomerGroup: CustomerGroup;\n  /** Delete a CustomerGroup */\n  deleteCustomerGroup: DeletionResponse;\n  /** Add Customers to a CustomerGroup */\n  addCustomersToGroup: CustomerGroup;\n  /** Remove Customers from a CustomerGroup */\n  removeCustomersFromGroup: CustomerGroup;\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\n  createCustomer: Customer;\n  /** Update an existing Customer */\n  updateCustomer: Customer;\n  /** Delete a Customer */\n  deleteCustomer: DeletionResponse;\n  /** Create a new Address and associate it with the Customer specified by customerId */\n  createCustomerAddress: Address;\n  /** Update an existing Address */\n  updateCustomerAddress: Address;\n  /** Update an existing Address */\n  deleteCustomerAddress: Scalars['Boolean'];\n  addNoteToCustomer: Customer;\n  updateCustomerNote: HistoryEntry;\n  deleteCustomerNote: DeletionResponse;\n  /** Create a new Facet */\n  createFacet: Facet;\n  /** Update an existing Facet */\n  updateFacet: Facet;\n  /** Delete an existing Facet */\n  deleteFacet: DeletionResponse;\n  /** Create one or more FacetValues */\n  createFacetValues: Array<FacetValue>;\n  /** Update one or more FacetValues */\n  updateFacetValues: Array<FacetValue>;\n  /** Delete one or more FacetValues */\n  deleteFacetValues: Array<DeletionResponse>;\n  updateGlobalSettings: GlobalSettings;\n  importProducts?: Maybe<ImportInfo>;\n  /** Remove all settled jobs in the given queues olfer than the given date. Returns the number of jobs deleted. */\n  removeSettledJobs: Scalars['Int'];\n  settlePayment: Payment;\n  fulfillOrder: Fulfillment;\n  cancelOrder: Order;\n  refundOrder: Refund;\n  settleRefund: Refund;\n  addNoteToOrder: Order;\n  updateOrderNote: HistoryEntry;\n  deleteOrderNote: DeletionResponse;\n  /** Update an existing PaymentMethod */\n  updatePaymentMethod: PaymentMethod;\n  /** Create a new ProductOptionGroup */\n  createProductOptionGroup: ProductOptionGroup;\n  /** Update an existing ProductOptionGroup */\n  updateProductOptionGroup: ProductOptionGroup;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  createProductOption: ProductOption;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  updateProductOption: ProductOption;\n  reindex: Job;\n  /** Create a new Product */\n  createProduct: Product;\n  /** Update an existing Product */\n  updateProduct: Product;\n  /** Delete a Product */\n  deleteProduct: DeletionResponse;\n  /** Add an OptionGroup to a Product */\n  addOptionGroupToProduct: Product;\n  /** Remove an OptionGroup from a Product */\n  removeOptionGroupFromProduct: Product;\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\n  createProductVariants: Array<Maybe<ProductVariant>>;\n  /** Update existing ProductVariants */\n  updateProductVariants: Array<Maybe<ProductVariant>>;\n  /** Delete a ProductVariant */\n  deleteProductVariant: DeletionResponse;\n  /** Assigns Products to the specified Channel */\n  assignProductsToChannel: Array<Product>;\n  /** Removes Products from the specified Channel */\n  removeProductsFromChannel: Array<Product>;\n  createPromotion: Promotion;\n  updatePromotion: Promotion;\n  deletePromotion: DeletionResponse;\n  /** Create a new Role */\n  createRole: Role;\n  /** Update an existing Role */\n  updateRole: Role;\n  /** Delete an existing Role */\n  deleteRole: DeletionResponse;\n  /** Create a new ShippingMethod */\n  createShippingMethod: ShippingMethod;\n  /** Update an existing ShippingMethod */\n  updateShippingMethod: ShippingMethod;\n  /** Delete a ShippingMethod */\n  deleteShippingMethod: DeletionResponse;\n  /** Create a new TaxCategory */\n  createTaxCategory: TaxCategory;\n  /** Update an existing TaxCategory */\n  updateTaxCategory: TaxCategory;\n  /** Deletes a TaxCategory */\n  deleteTaxCategory: DeletionResponse;\n  /** Create a new TaxRate */\n  createTaxRate: TaxRate;\n  /** Update an existing TaxRate */\n  updateTaxRate: TaxRate;\n  /** Delete a TaxRate */\n  deleteTaxRate: DeletionResponse;\n  /** Create a new Zone */\n  createZone: Zone;\n  /** Update an existing Zone */\n  updateZone: Zone;\n  /** Delete a Zone */\n  deleteZone: DeletionResponse;\n  /** Add members to a Zone */\n  addMembersToZone: Zone;\n  /** Remove members from a Zone */\n  removeMembersFromZone: Zone;\n  updateCrossSellingProducts: Scalars['Boolean'];\n  updateUpSellingProducts: Scalars['Boolean'];\n  updateProductVariantBulkDiscounts: Scalars['Boolean'];\n  updateProductVariantBulkDiscountsBySku: Scalars['Boolean'];\n  updateProductReview: ProductReview;\n  approveProductReview?: Maybe<ProductReview>;\n  rejectProductReview?: Maybe<ProductReview>;\n  addSubscriptionEmail: Array<Maybe<Email>>;\n  updateSubscriptionEmail: Array<Maybe<Email>>;\n  deleteSubscriptionEmail: Array<Maybe<Email>>;\n  deleteAllSubscriptionEmails: Scalars['Boolean'];\n  addSubscriptionPhone: Array<Maybe<Phone>>;\n  updateSubscriptionPhone: Array<Maybe<Phone>>;\n  deleteSubscriptionPhone: Array<Maybe<Phone>>;\n  deleteAllSubscriptionPhones: Scalars['Boolean'];\n};\n\n\nexport type MutationCreateAdministratorArgs = {\n  input: CreateAdministratorInput;\n};\n\n\nexport type MutationUpdateAdministratorArgs = {\n  input: UpdateAdministratorInput;\n};\n\n\nexport type MutationAssignRoleToAdministratorArgs = {\n  administratorId: Scalars['ID'];\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationCreateAssetsArgs = {\n  input: Array<CreateAssetInput>;\n};\n\n\nexport type MutationUpdateAssetArgs = {\n  input: UpdateAssetInput;\n};\n\n\nexport type MutationDeleteAssetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationLoginArgs = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateChannelArgs = {\n  input: CreateChannelInput;\n};\n\n\nexport type MutationUpdateChannelArgs = {\n  input: UpdateChannelInput;\n};\n\n\nexport type MutationDeleteChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCollectionArgs = {\n  input: CreateCollectionInput;\n};\n\n\nexport type MutationUpdateCollectionArgs = {\n  input: UpdateCollectionInput;\n};\n\n\nexport type MutationDeleteCollectionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationMoveCollectionArgs = {\n  input: MoveCollectionInput;\n};\n\n\nexport type MutationCreateCountryArgs = {\n  input: CreateCountryInput;\n};\n\n\nexport type MutationUpdateCountryArgs = {\n  input: UpdateCountryInput;\n};\n\n\nexport type MutationDeleteCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCustomerGroupArgs = {\n  input: CreateCustomerGroupInput;\n};\n\n\nexport type MutationUpdateCustomerGroupArgs = {\n  input: UpdateCustomerGroupInput;\n};\n\n\nexport type MutationDeleteCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddCustomersToGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveCustomersFromGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationCreateCustomerArgs = {\n  input: CreateCustomerInput;\n  password?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input: UpdateCustomerInput;\n};\n\n\nexport type MutationDeleteCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCustomerAddressArgs = {\n  customerId: Scalars['ID'];\n  input: CreateAddressInput;\n};\n\n\nexport type MutationUpdateCustomerAddressArgs = {\n  input: UpdateAddressInput;\n};\n\n\nexport type MutationDeleteCustomerAddressArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddNoteToCustomerArgs = {\n  input: AddNoteToCustomerInput;\n};\n\n\nexport type MutationUpdateCustomerNoteArgs = {\n  input: UpdateCustomerNoteInput;\n};\n\n\nexport type MutationDeleteCustomerNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateFacetArgs = {\n  input: CreateFacetInput;\n};\n\n\nexport type MutationUpdateFacetArgs = {\n  input: UpdateFacetInput;\n};\n\n\nexport type MutationDeleteFacetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCreateFacetValuesArgs = {\n  input: Array<CreateFacetValueInput>;\n};\n\n\nexport type MutationUpdateFacetValuesArgs = {\n  input: Array<UpdateFacetValueInput>;\n};\n\n\nexport type MutationDeleteFacetValuesArgs = {\n  ids: Array<Scalars['ID']>;\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationUpdateGlobalSettingsArgs = {\n  input: UpdateGlobalSettingsInput;\n};\n\n\nexport type MutationImportProductsArgs = {\n  csvFile: Scalars['Upload'];\n};\n\n\nexport type MutationRemoveSettledJobsArgs = {\n  queueNames?: Maybe<Array<Scalars['String']>>;\n  olderThan?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type MutationSettlePaymentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationFulfillOrderArgs = {\n  input: FulfillOrderInput;\n};\n\n\nexport type MutationCancelOrderArgs = {\n  input: CancelOrderInput;\n};\n\n\nexport type MutationRefundOrderArgs = {\n  input: RefundOrderInput;\n};\n\n\nexport type MutationSettleRefundArgs = {\n  input: SettleRefundInput;\n};\n\n\nexport type MutationAddNoteToOrderArgs = {\n  input: AddNoteToOrderInput;\n};\n\n\nexport type MutationUpdateOrderNoteArgs = {\n  input: UpdateOrderNoteInput;\n};\n\n\nexport type MutationDeleteOrderNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdatePaymentMethodArgs = {\n  input: UpdatePaymentMethodInput;\n};\n\n\nexport type MutationCreateProductOptionGroupArgs = {\n  input: CreateProductOptionGroupInput;\n};\n\n\nexport type MutationUpdateProductOptionGroupArgs = {\n  input: UpdateProductOptionGroupInput;\n};\n\n\nexport type MutationCreateProductOptionArgs = {\n  input: CreateProductOptionInput;\n};\n\n\nexport type MutationUpdateProductOptionArgs = {\n  input: UpdateProductOptionInput;\n};\n\n\nexport type MutationCreateProductArgs = {\n  input: CreateProductInput;\n};\n\n\nexport type MutationUpdateProductArgs = {\n  input: UpdateProductInput;\n};\n\n\nexport type MutationDeleteProductArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddOptionGroupToProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveOptionGroupFromProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationCreateProductVariantsArgs = {\n  input: Array<CreateProductVariantInput>;\n};\n\n\nexport type MutationUpdateProductVariantsArgs = {\n  input: Array<UpdateProductVariantInput>;\n};\n\n\nexport type MutationDeleteProductVariantArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAssignProductsToChannelArgs = {\n  input: AssignProductsToChannelInput;\n};\n\n\nexport type MutationRemoveProductsFromChannelArgs = {\n  input: RemoveProductsFromChannelInput;\n};\n\n\nexport type MutationCreatePromotionArgs = {\n  input: CreatePromotionInput;\n};\n\n\nexport type MutationUpdatePromotionArgs = {\n  input: UpdatePromotionInput;\n};\n\n\nexport type MutationDeletePromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input: CreateRoleInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateShippingMethodArgs = {\n  input: CreateShippingMethodInput;\n};\n\n\nexport type MutationUpdateShippingMethodArgs = {\n  input: UpdateShippingMethodInput;\n};\n\n\nexport type MutationDeleteShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateTaxCategoryArgs = {\n  input: CreateTaxCategoryInput;\n};\n\n\nexport type MutationUpdateTaxCategoryArgs = {\n  input: UpdateTaxCategoryInput;\n};\n\n\nexport type MutationDeleteTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateTaxRateArgs = {\n  input: CreateTaxRateInput;\n};\n\n\nexport type MutationUpdateTaxRateArgs = {\n  input: UpdateTaxRateInput;\n};\n\n\nexport type MutationDeleteTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateZoneArgs = {\n  input: CreateZoneInput;\n};\n\n\nexport type MutationUpdateZoneArgs = {\n  input: UpdateZoneInput;\n};\n\n\nexport type MutationDeleteZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddMembersToZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveMembersFromZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateCrossSellingProductsArgs = {\n  productId: Scalars['ID'];\n  productIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateUpSellingProductsArgs = {\n  productId: Scalars['ID'];\n  productIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUpdateProductVariantBulkDiscountsArgs = {\n  productVariantId: Scalars['ID'];\n  discounts: Array<BulkDiscountInput>;\n};\n\n\nexport type MutationUpdateProductVariantBulkDiscountsBySkuArgs = {\n  productVariantSku: Scalars['String'];\n  discounts: Array<BulkDiscountInput>;\n};\n\n\nexport type MutationUpdateProductReviewArgs = {\n  input: UpdateProductReviewInput;\n};\n\n\nexport type MutationApproveProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationRejectProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationAddSubscriptionEmailArgs = {\n  input: Array<EmailAddInput>;\n};\n\n\nexport type MutationUpdateSubscriptionEmailArgs = {\n  input: Array<EmailUpdateInput>;\n};\n\n\nexport type MutationDeleteSubscriptionEmailArgs = {\n  id: Array<Scalars['ID']>;\n};\n\n\nexport type MutationAddSubscriptionPhoneArgs = {\n  input: Array<PhoneAddInput>;\n};\n\n\nexport type MutationUpdateSubscriptionPhoneArgs = {\n  input: Array<PhoneUpdateInput>;\n};\n\n\nexport type MutationDeleteSubscriptionPhoneArgs = {\n  id: Array<Scalars['ID']>;\n};\n\nexport type Node = {\n  id: Scalars['ID'];\n};\n\nexport type NumberOperators = {\n  eq?: Maybe<Scalars['Float']>;\n  lt?: Maybe<Scalars['Float']>;\n  lte?: Maybe<Scalars['Float']>;\n  gt?: Maybe<Scalars['Float']>;\n  gte?: Maybe<Scalars['Float']>;\n  between?: Maybe<NumberRange>;\n};\n\nexport type NumberRange = {\n  start: Scalars['Float'];\n  end: Scalars['Float'];\n};\n\nexport type Order = Node & {\n  __typename?: 'Order';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  /** A unique code for the Order */\n  code: Scalars['String'];\n  state: Scalars['String'];\n  /** An order is active as long as the payment process has not been completed */\n  active: Scalars['Boolean'];\n  customer?: Maybe<Customer>;\n  shippingAddress?: Maybe<OrderAddress>;\n  billingAddress?: Maybe<OrderAddress>;\n  lines: Array<OrderLine>;\n  /** Order-level adjustments to the order total, such as discounts from promotions */\n  adjustments: Array<Adjustment>;\n  couponCodes: Array<Scalars['String']>;\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\n  promotions: Array<Promotion>;\n  payments?: Maybe<Array<Payment>>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  subTotalBeforeTax: Scalars['Int'];\n  /** The subTotal is the total of the OrderLines, before order-level promotions and shipping has been applied. */\n  subTotal: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  shipping: Scalars['Int'];\n  shippingWithTax: Scalars['Int'];\n  shippingMethod?: Maybe<ShippingMethod>;\n  totalBeforeTax: Scalars['Int'];\n  total: Scalars['Int'];\n  history: HistoryEntryList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type OrderHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\nexport type OrderAddress = {\n  __typename?: 'OrderAddress';\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n};\n\nexport type OrderFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  active?: Maybe<BooleanOperators>;\n  subTotalBeforeTax?: Maybe<NumberOperators>;\n  subTotal?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  shipping?: Maybe<NumberOperators>;\n  shippingWithTax?: Maybe<NumberOperators>;\n  totalBeforeTax?: Maybe<NumberOperators>;\n  total?: Maybe<NumberOperators>;\n};\n\nexport type OrderItem = Node & {\n  __typename?: 'OrderItem';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  cancelled: Scalars['Boolean'];\n  unitPrice: Scalars['Int'];\n  unitPriceWithTax: Scalars['Int'];\n  unitPriceIncludesTax: Scalars['Boolean'];\n  taxRate: Scalars['Float'];\n  adjustments: Array<Adjustment>;\n  fulfillment?: Maybe<Fulfillment>;\n  refundId?: Maybe<Scalars['ID']>;\n};\n\nexport type OrderLine = Node & {\n  __typename?: 'OrderLine';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  featuredAsset?: Maybe<Asset>;\n  unitPrice: Scalars['Int'];\n  unitPriceWithTax: Scalars['Int'];\n  quantity: Scalars['Int'];\n  items: Array<OrderItem>;\n  totalPrice: Scalars['Int'];\n  adjustments: Array<Adjustment>;\n  order: Order;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderLineInput = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type OrderList = PaginatedList & {\n  __typename?: 'OrderList';\n  items: Array<Order>;\n  totalItems: Scalars['Int'];\n};\n\nexport type OrderListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<OrderSortParameter>;\n  filter?: Maybe<OrderFilterParameter>;\n};\n\nexport type OrderSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  subTotalBeforeTax?: Maybe<SortOrder>;\n  subTotal?: Maybe<SortOrder>;\n  shipping?: Maybe<SortOrder>;\n  shippingWithTax?: Maybe<SortOrder>;\n  totalBeforeTax?: Maybe<SortOrder>;\n  total?: Maybe<SortOrder>;\n};\n\nexport type PaginatedList = {\n  items: Array<Node>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Payment = Node & {\n  __typename?: 'Payment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  method: Scalars['String'];\n  amount: Scalars['Int'];\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  errorMessage?: Maybe<Scalars['String']>;\n  refunds: Array<Refund>;\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type PaymentMethod = Node & {\n  __typename?: 'PaymentMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  configArgs: Array<ConfigArg>;\n};\n\nexport type PaymentMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PaymentMethodList = PaginatedList & {\n  __typename?: 'PaymentMethodList';\n  items: Array<PaymentMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PaymentMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PaymentMethodSortParameter>;\n  filter?: Maybe<PaymentMethodFilterParameter>;\n};\n\nexport type PaymentMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\n/**\n * \"\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n * \n * @docsCategory common\n */\nexport enum Permission {\n  /**  The Authenticated role means simply that the user is logged in  */\n  Authenticated = 'Authenticated',\n  /**  SuperAdmin can perform the most sensitive tasks */\n  SuperAdmin = 'SuperAdmin',\n  /**  Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner = 'Owner',\n  /**  Public means any unauthenticated user may perform the operation  */\n  Public = 'Public',\n  CreateCatalog = 'CreateCatalog',\n  ReadCatalog = 'ReadCatalog',\n  UpdateCatalog = 'UpdateCatalog',\n  DeleteCatalog = 'DeleteCatalog',\n  CreateCustomer = 'CreateCustomer',\n  ReadCustomer = 'ReadCustomer',\n  UpdateCustomer = 'UpdateCustomer',\n  DeleteCustomer = 'DeleteCustomer',\n  CreateAdministrator = 'CreateAdministrator',\n  ReadAdministrator = 'ReadAdministrator',\n  UpdateAdministrator = 'UpdateAdministrator',\n  DeleteAdministrator = 'DeleteAdministrator',\n  CreateOrder = 'CreateOrder',\n  ReadOrder = 'ReadOrder',\n  UpdateOrder = 'UpdateOrder',\n  DeleteOrder = 'DeleteOrder',\n  CreatePromotion = 'CreatePromotion',\n  ReadPromotion = 'ReadPromotion',\n  UpdatePromotion = 'UpdatePromotion',\n  DeletePromotion = 'DeletePromotion',\n  CreateSettings = 'CreateSettings',\n  ReadSettings = 'ReadSettings',\n  UpdateSettings = 'UpdateSettings',\n  DeleteSettings = 'DeleteSettings'\n}\n\nexport type Phone = Node & {\n  __typename?: 'Phone';\n  id: Scalars['ID'];\n  phone: Scalars['String'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n};\n\nexport type PhoneAddInput = {\n  phone: Scalars['String'];\n};\n\nexport type PhoneFilterParameter = {\n  phone?: Maybe<StringOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n};\n\nexport type PhoneList = PaginatedList & {\n  __typename?: 'PhoneList';\n  items: Array<Phone>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PhoneListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PhoneSortParameter>;\n  filter?: Maybe<PhoneFilterParameter>;\n};\n\nexport type PhoneSortParameter = {\n  id?: Maybe<SortOrder>;\n  phone?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type PhoneUpdateInput = {\n  id: Scalars['ID'];\n  phone: Scalars['String'];\n};\n\n/** The price range where the result has more than one price */\nexport type PriceRange = {\n  __typename?: 'PriceRange';\n  min: Scalars['Int'];\n  max: Scalars['Int'];\n};\n\nexport type Product = Node & {\n  __typename?: 'Product';\n  enabled: Scalars['Boolean'];\n  channels: Array<Channel>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  variants: Array<ProductVariant>;\n  optionGroups: Array<ProductOptionGroup>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductTranslation>;\n  collections: Array<Collection>;\n  recommendations: Array<ProductRecommendation>;\n  reviews: ProductReviewList;\n  reviewsHistogram: Array<ProductReviewHistogramItem>;\n  customFields?: Maybe<ProductCustomFields>;\n};\n\n\nexport type ProductReviewsArgs = {\n  options?: Maybe<ProductReviewListOptions>;\n};\n\nexport type ProductCustomFields = {\n  __typename?: 'ProductCustomFields';\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type ProductFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n  productRecommendationsEnabled?: Maybe<BooleanOperators>;\n  reviewRating?: Maybe<NumberOperators>;\n  reviewCount?: Maybe<NumberOperators>;\n};\n\nexport type ProductList = PaginatedList & {\n  __typename?: 'ProductList';\n  items: Array<Product>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductSortParameter>;\n  filter?: Maybe<ProductFilterParameter>;\n};\n\nexport type ProductOption = Node & {\n  __typename?: 'ProductOption';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  groupId: Scalars['ID'];\n  translations: Array<ProductOptionTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionGroup = Node & {\n  __typename?: 'ProductOptionGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  translations: Array<ProductOptionGroupTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionGroupTranslation = {\n  __typename?: 'ProductOptionGroupTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductOptionGroupTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionTranslation = {\n  __typename?: 'ProductOptionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductOptionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductRecommendation = {\n  __typename?: 'ProductRecommendation';\n  product: Product;\n  recommendation: Product;\n  type: RecommendationType;\n};\n\nexport type ProductReview = Node & {\n  __typename?: 'ProductReview';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  product: Product;\n  productVariant?: Maybe<ProductVariant>;\n  summary: Scalars['String'];\n  body?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Customer>;\n  authorName: Scalars['String'];\n  authorLocation?: Maybe<Scalars['String']>;\n  upvotes: Scalars['Int'];\n  downvotes: Scalars['Int'];\n  state: Scalars['String'];\n  response?: Maybe<Scalars['String']>;\n  responseCreatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ProductReviewFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  summary?: Maybe<StringOperators>;\n  body?: Maybe<StringOperators>;\n  rating?: Maybe<NumberOperators>;\n  authorName?: Maybe<StringOperators>;\n  authorLocation?: Maybe<StringOperators>;\n  upvotes?: Maybe<NumberOperators>;\n  downvotes?: Maybe<NumberOperators>;\n  state?: Maybe<StringOperators>;\n  response?: Maybe<StringOperators>;\n  responseCreatedAt?: Maybe<DateOperators>;\n};\n\nexport type ProductReviewHistogramItem = {\n  __typename?: 'ProductReviewHistogramItem';\n  bin: Scalars['Int'];\n  frequency: Scalars['Int'];\n};\n\nexport type ProductReviewList = PaginatedList & {\n  __typename?: 'ProductReviewList';\n  items: Array<ProductReview>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductReviewListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductReviewSortParameter>;\n  filter?: Maybe<ProductReviewFilterParameter>;\n};\n\nexport type ProductReviewSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  summary?: Maybe<SortOrder>;\n  body?: Maybe<SortOrder>;\n  rating?: Maybe<SortOrder>;\n  authorName?: Maybe<SortOrder>;\n  authorLocation?: Maybe<SortOrder>;\n  upvotes?: Maybe<SortOrder>;\n  downvotes?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  response?: Maybe<SortOrder>;\n  responseCreatedAt?: Maybe<SortOrder>;\n};\n\nexport type ProductSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n  productRecommendationsEnabled?: Maybe<SortOrder>;\n  reviewRating?: Maybe<SortOrder>;\n  reviewCount?: Maybe<SortOrder>;\n};\n\nexport type ProductTranslation = {\n  __typename?: 'ProductTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ProductTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductVariant = Node & {\n  __typename?: 'ProductVariant';\n  enabled: Scalars['Boolean'];\n  stockOnHand: Scalars['Int'];\n  trackInventory: Scalars['Boolean'];\n  stockMovements: StockMovementList;\n  id: Scalars['ID'];\n  productId: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  sku: Scalars['String'];\n  name: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  price: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  priceIncludesTax: Scalars['Boolean'];\n  priceWithTax: Scalars['Int'];\n  taxRateApplied: TaxRate;\n  taxCategory: TaxCategory;\n  options: Array<ProductOption>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductVariantTranslation>;\n  bulkDiscounts: Array<BulkDiscount>;\n  customFields?: Maybe<ProductVariantCustomFields>;\n};\n\n\nexport type ProductVariantStockMovementsArgs = {\n  options?: Maybe<StockMovementListOptions>;\n};\n\nexport type ProductVariantCustomFields = {\n  __typename?: 'ProductVariantCustomFields';\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\n  Unit?: Maybe<Scalars['String']>;\n  Sales?: Maybe<Scalars['Int']>;\n};\n\nexport type ProductVariantFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  stockOnHand?: Maybe<NumberOperators>;\n  trackInventory?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  sku?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  price?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  priceIncludesTax?: Maybe<BooleanOperators>;\n  priceWithTax?: Maybe<NumberOperators>;\n  bulkDiscountEnabled?: Maybe<BooleanOperators>;\n  Unit?: Maybe<StringOperators>;\n  Sales?: Maybe<NumberOperators>;\n};\n\nexport type ProductVariantList = PaginatedList & {\n  __typename?: 'ProductVariantList';\n  items: Array<ProductVariant>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductVariantSortParameter>;\n  filter?: Maybe<ProductVariantFilterParameter>;\n};\n\nexport type ProductVariantSortParameter = {\n  stockOnHand?: Maybe<SortOrder>;\n  id?: Maybe<SortOrder>;\n  productId?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  sku?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n  priceWithTax?: Maybe<SortOrder>;\n  bulkDiscountEnabled?: Maybe<SortOrder>;\n  Unit?: Maybe<SortOrder>;\n  Sales?: Maybe<SortOrder>;\n};\n\nexport type ProductVariantTranslation = {\n  __typename?: 'ProductVariantTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductVariantTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Promotion = Node & {\n  __typename?: 'Promotion';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  conditions: Array<ConfigurableOperation>;\n  actions: Array<ConfigurableOperation>;\n};\n\nexport type PromotionFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  startsAt?: Maybe<DateOperators>;\n  endsAt?: Maybe<DateOperators>;\n  couponCode?: Maybe<StringOperators>;\n  perCustomerUsageLimit?: Maybe<NumberOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PromotionList = PaginatedList & {\n  __typename?: 'PromotionList';\n  items: Array<Promotion>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PromotionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PromotionSortParameter>;\n  filter?: Maybe<PromotionFilterParameter>;\n};\n\nexport type PromotionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  startsAt?: Maybe<SortOrder>;\n  endsAt?: Maybe<SortOrder>;\n  couponCode?: Maybe<SortOrder>;\n  perCustomerUsageLimit?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  administrators: AdministratorList;\n  administrator?: Maybe<Administrator>;\n  /** Get a list of Assets */\n  assets: AssetList;\n  /** Get a single Asset by id */\n  asset?: Maybe<Asset>;\n  me?: Maybe<CurrentUser>;\n  channels: Array<Channel>;\n  channel?: Maybe<Channel>;\n  activeChannel: Channel;\n  collections: CollectionList;\n  /** Get a Collection either by id or slug. If neither id nor slug is speicified, an error will result. */\n  collection?: Maybe<Collection>;\n  collectionFilters: Array<ConfigurableOperationDefinition>;\n  countries: CountryList;\n  country?: Maybe<Country>;\n  customerGroups: CustomerGroupList;\n  customerGroup?: Maybe<CustomerGroup>;\n  customers: CustomerList;\n  customer?: Maybe<Customer>;\n  facets: FacetList;\n  facet?: Maybe<Facet>;\n  globalSettings: GlobalSettings;\n  job?: Maybe<Job>;\n  jobs: JobList;\n  jobsById: Array<Job>;\n  jobQueues: Array<JobQueue>;\n  order?: Maybe<Order>;\n  orders: OrderList;\n  paymentMethods: PaymentMethodList;\n  paymentMethod?: Maybe<PaymentMethod>;\n  productOptionGroups: Array<ProductOptionGroup>;\n  productOptionGroup?: Maybe<ProductOptionGroup>;\n  search: SearchResponse;\n  products: ProductList;\n  /** Get a Product either by id or slug. If neither id nor slug is speicified, an error will result. */\n  product?: Maybe<Product>;\n  promotion?: Maybe<Promotion>;\n  promotions: PromotionList;\n  promotionConditions: Array<ConfigurableOperationDefinition>;\n  promotionActions: Array<ConfigurableOperationDefinition>;\n  roles: RoleList;\n  role?: Maybe<Role>;\n  shippingMethods: ShippingMethodList;\n  shippingMethod?: Maybe<ShippingMethod>;\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>;\n  shippingCalculators: Array<ConfigurableOperationDefinition>;\n  testShippingMethod: TestShippingMethodResult;\n  testEligibleShippingMethods: Array<ShippingMethodQuote>;\n  taxCategories: Array<TaxCategory>;\n  taxCategory?: Maybe<TaxCategory>;\n  taxRates: TaxRateList;\n  taxRate?: Maybe<TaxRate>;\n  zones: Array<Zone>;\n  zone?: Maybe<Zone>;\n  productRecommendations: Array<ProductRecommendation>;\n  productBulkDiscounts: Array<BulkDiscount>;\n  productReviews: ProductReviewList;\n  productReview?: Maybe<ProductReview>;\n  SubscriptionEmails: EmailList;\n  SubscriptionEmail?: Maybe<Email>;\n  SubscriptionPhones: PhoneList;\n  SubscriptionPhone?: Maybe<Phone>;\n};\n\n\nexport type QueryAdministratorsArgs = {\n  options?: Maybe<AdministratorListOptions>;\n};\n\n\nexport type QueryAdministratorArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryAssetsArgs = {\n  options?: Maybe<AssetListOptions>;\n};\n\n\nexport type QueryAssetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCollectionsArgs = {\n  options?: Maybe<CollectionListOptions>;\n};\n\n\nexport type QueryCollectionArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCountriesArgs = {\n  options?: Maybe<CountryListOptions>;\n};\n\n\nexport type QueryCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomerGroupsArgs = {\n  options?: Maybe<CustomerGroupListOptions>;\n};\n\n\nexport type QueryCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\n\nexport type QueryCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFacetsArgs = {\n  options?: Maybe<FacetListOptions>;\n};\n\n\nexport type QueryFacetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryJobArgs = {\n  jobId: Scalars['ID'];\n};\n\n\nexport type QueryJobsArgs = {\n  options?: Maybe<JobListOptions>;\n};\n\n\nexport type QueryJobsByIdArgs = {\n  jobIds: Array<Scalars['ID']>;\n};\n\n\nexport type QueryOrderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\n\nexport type QueryPaymentMethodsArgs = {\n  options?: Maybe<PaymentMethodListOptions>;\n};\n\n\nexport type QueryPaymentMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductOptionGroupsArgs = {\n  filterTerm?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductOptionGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySearchArgs = {\n  input: SearchInput;\n};\n\n\nexport type QueryProductsArgs = {\n  options?: Maybe<ProductListOptions>;\n};\n\n\nexport type QueryProductArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPromotionsArgs = {\n  options?: Maybe<PromotionListOptions>;\n};\n\n\nexport type QueryRolesArgs = {\n  options?: Maybe<RoleListOptions>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryShippingMethodsArgs = {\n  options?: Maybe<ShippingMethodListOptions>;\n};\n\n\nexport type QueryShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTestShippingMethodArgs = {\n  input: TestShippingMethodInput;\n};\n\n\nexport type QueryTestEligibleShippingMethodsArgs = {\n  input: TestEligibleShippingMethodsInput;\n};\n\n\nexport type QueryTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTaxRatesArgs = {\n  options?: Maybe<TaxRateListOptions>;\n};\n\n\nexport type QueryTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductRecommendationsArgs = {\n  productId: Scalars['ID'];\n};\n\n\nexport type QueryProductBulkDiscountsArgs = {\n  productId: Scalars['ID'];\n};\n\n\nexport type QueryProductReviewsArgs = {\n  options?: Maybe<ProductReviewListOptions>;\n};\n\n\nexport type QueryProductReviewArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySubscriptionEmailsArgs = {\n  options?: Maybe<EmailListOptions>;\n};\n\n\nexport type QuerySubscriptionEmailArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySubscriptionPhonesArgs = {\n  options?: Maybe<PhoneListOptions>;\n};\n\n\nexport type QuerySubscriptionPhoneArgs = {\n  id: Scalars['ID'];\n};\n\nexport enum RecommendationType {\n  Crosssell = 'CROSSSELL',\n  Upsell = 'UPSELL'\n}\n\nexport type Refund = Node & {\n  __typename?: 'Refund';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  items: Scalars['Int'];\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  total: Scalars['Int'];\n  method?: Maybe<Scalars['String']>;\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  reason?: Maybe<Scalars['String']>;\n  orderItems: Array<OrderItem>;\n  paymentId: Scalars['ID'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type RefundOrderInput = {\n  lines: Array<OrderLineInput>;\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type RemoveProductsFromChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type Return = Node & StockMovement & {\n  __typename?: 'Return';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type Role = Node & {\n  __typename?: 'Role';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channels: Array<Channel>;\n};\n\nexport type RoleFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type RoleList = PaginatedList & {\n  __typename?: 'RoleList';\n  items: Array<Role>;\n  totalItems: Scalars['Int'];\n};\n\nexport type RoleListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<RoleSortParameter>;\n  filter?: Maybe<RoleFilterParameter>;\n};\n\nexport type RoleSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type Sale = Node & StockMovement & {\n  __typename?: 'Sale';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type SearchInput = {\n  term?: Maybe<Scalars['String']>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueOperator?: Maybe<LogicalOperator>;\n  collectionId?: Maybe<Scalars['ID']>;\n  groupByProduct?: Maybe<Scalars['Boolean']>;\n  take?: Maybe<Scalars['Int']>;\n  skip?: Maybe<Scalars['Int']>;\n  sort?: Maybe<SearchResultSortParameter>;\n};\n\nexport type SearchReindexResponse = {\n  __typename?: 'SearchReindexResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type SearchResponse = {\n  __typename?: 'SearchResponse';\n  items: Array<SearchResult>;\n  totalItems: Scalars['Int'];\n  facetValues: Array<FacetValueResult>;\n};\n\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  enabled: Scalars['Boolean'];\n  /** An array of ids of the Collections in which this result appears */\n  channelIds: Array<Scalars['ID']>;\n  sku: Scalars['String'];\n  slug: Scalars['String'];\n  productId: Scalars['ID'];\n  productName: Scalars['String'];\n  /** @deprecated Use `productAsset.preview` instead */\n  productPreview: Scalars['String'];\n  productAsset?: Maybe<SearchResultAsset>;\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  /** @deprecated Use `productVariantAsset.preview` instead */\n  productVariantPreview: Scalars['String'];\n  productVariantAsset?: Maybe<SearchResultAsset>;\n  price: SearchResultPrice;\n  priceWithTax: SearchResultPrice;\n  currencyCode: CurrencyCode;\n  description: Scalars['String'];\n  facetIds: Array<Scalars['ID']>;\n  facetValueIds: Array<Scalars['ID']>;\n  /** An array of ids of the Collections in which this result appears */\n  collectionIds: Array<Scalars['ID']>;\n  /** A relevence score for the result. Differs between database implementations */\n  score: Scalars['Float'];\n};\n\nexport type SearchResultAsset = {\n  __typename?: 'SearchResultAsset';\n  id: Scalars['ID'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\n/** The price of a search result product, either as a range or as a single price */\nexport type SearchResultPrice = PriceRange | SinglePrice;\n\nexport type SearchResultSortParameter = {\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n};\n\nexport type ServerConfig = {\n  __typename?: 'ServerConfig';\n  customFieldConfig: CustomFields;\n};\n\nexport type SettleRefundInput = {\n  id: Scalars['ID'];\n  transactionId: Scalars['String'];\n};\n\nexport type ShippingMethod = Node & {\n  __typename?: 'ShippingMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  checker: ConfigurableOperation;\n  calculator: ConfigurableOperation;\n};\n\nexport type ShippingMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type ShippingMethodList = PaginatedList & {\n  __typename?: 'ShippingMethodList';\n  items: Array<ShippingMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ShippingMethodSortParameter>;\n  filter?: Maybe<ShippingMethodFilterParameter>;\n};\n\nexport type ShippingMethodQuote = {\n  __typename?: 'ShippingMethodQuote';\n  id: Scalars['ID'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  description: Scalars['String'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type ShippingMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\n/** The price value where the result has a single price */\nexport type SinglePrice = {\n  __typename?: 'SinglePrice';\n  value: Scalars['Int'];\n};\n\nexport enum SortOrder {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport type StockAdjustment = Node & StockMovement & {\n  __typename?: 'StockAdjustment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type StockMovement = {\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type StockMovementItem = StockAdjustment | Sale | Cancellation | Return;\n\nexport type StockMovementList = {\n  __typename?: 'StockMovementList';\n  items: Array<StockMovementItem>;\n  totalItems: Scalars['Int'];\n};\n\nexport type StockMovementListOptions = {\n  type?: Maybe<StockMovementType>;\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n};\n\nexport enum StockMovementType {\n  Adjustment = 'ADJUSTMENT',\n  Sale = 'SALE',\n  Cancellation = 'CANCELLATION',\n  Return = 'RETURN'\n}\n\nexport type StringCustomFieldConfig = CustomField & {\n  __typename?: 'StringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  length?: Maybe<Scalars['Int']>;\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n  options?: Maybe<Array<StringFieldOption>>;\n};\n\nexport type StringFieldOption = {\n  __typename?: 'StringFieldOption';\n  value: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n};\n\nexport type StringOperators = {\n  eq?: Maybe<Scalars['String']>;\n  contains?: Maybe<Scalars['String']>;\n};\n\nexport type TaxCategory = Node & {\n  __typename?: 'TaxCategory';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n};\n\nexport type TaxRate = Node & {\n  __typename?: 'TaxRate';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  category: TaxCategory;\n  zone: Zone;\n  customerGroup?: Maybe<CustomerGroup>;\n};\n\nexport type TaxRateFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n  value?: Maybe<NumberOperators>;\n};\n\nexport type TaxRateList = PaginatedList & {\n  __typename?: 'TaxRateList';\n  items: Array<TaxRate>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TaxRateListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<TaxRateSortParameter>;\n  filter?: Maybe<TaxRateFilterParameter>;\n};\n\nexport type TaxRateSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  value?: Maybe<SortOrder>;\n};\n\nexport type TestEligibleShippingMethodsInput = {\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestShippingMethodInput = {\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestShippingMethodOrderLineInput = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type TestShippingMethodQuote = {\n  __typename?: 'TestShippingMethodQuote';\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  description: Scalars['String'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type TestShippingMethodResult = {\n  __typename?: 'TestShippingMethodResult';\n  eligible: Scalars['Boolean'];\n  quote?: Maybe<TestShippingMethodQuote>;\n};\n\nexport type UpdateAddressInput = {\n  id: Scalars['ID'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateAdministratorInput = {\n  id: Scalars['ID'];\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  roleIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateAssetInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  focalPoint?: Maybe<CoordinateInput>;\n};\n\nexport type UpdateChannelInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  token?: Maybe<Scalars['String']>;\n  defaultLanguageCode?: Maybe<LanguageCode>;\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>;\n  currencyCode?: Maybe<CurrencyCode>;\n  defaultTaxZoneId?: Maybe<Scalars['ID']>;\n  defaultShippingZoneId?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateCollectionInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  parentId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  filters?: Maybe<Array<ConfigurableOperationInput>>;\n  translations?: Maybe<Array<UpdateCollectionTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCollectionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCountryInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<CountryTranslationInput>>;\n  enabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdateCustomerGroupInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerInput = {\n  id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCustomerNoteInput = {\n  noteId: Scalars['ID'];\n  note: Scalars['String'];\n};\n\nexport type UpdateFacetInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateFacetValueInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetValueTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateGlobalSettingsInput = {\n  availableLanguages?: Maybe<Array<LanguageCode>>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateOrderNoteInput = {\n  noteId: Scalars['ID'];\n  note?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdatePaymentMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  configArgs?: Maybe<Array<ConfigArgInput>>;\n};\n\nexport type UpdateProductCustomFieldsInput = {\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\n  reviewRating?: Maybe<Scalars['Float']>;\n  reviewCount?: Maybe<Scalars['Float']>;\n};\n\nexport type UpdateProductInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations?: Maybe<Array<ProductTranslationInput>>;\n  customFields?: Maybe<UpdateProductCustomFieldsInput>;\n};\n\nexport type UpdateProductOptionGroupInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductOptionInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductReviewInput = {\n  id: Scalars['ID'];\n  summary?: Maybe<Scalars['String']>;\n  body?: Maybe<Scalars['String']>;\n  response?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateProductVariantCustomFieldsInput = {\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\n  Unit?: Maybe<Scalars['String']>;\n  Sales?: Maybe<Scalars['Int']>;\n};\n\nexport type UpdateProductVariantInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  translations?: Maybe<Array<ProductVariantTranslationInput>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku?: Maybe<Scalars['String']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  price?: Maybe<Scalars['Int']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<UpdateProductVariantCustomFieldsInput>;\n};\n\nexport type UpdatePromotionInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions?: Maybe<Array<ConfigurableOperationInput>>;\n  actions?: Maybe<Array<ConfigurableOperationInput>>;\n};\n\nexport type UpdateRoleInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Permission>>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateShippingMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  checker?: Maybe<ConfigurableOperationInput>;\n  calculator?: Maybe<ConfigurableOperationInput>;\n};\n\nexport type UpdateTaxCategoryInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateTaxRateInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['Float']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  categoryId?: Maybe<Scalars['ID']>;\n  zoneId?: Maybe<Scalars['ID']>;\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateZoneInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\n\nexport type User = Node & {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  identifier: Scalars['String'];\n  verified: Scalars['Boolean'];\n  roles: Array<Role>;\n  lastLogin?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Zone = Node & {\n  __typename?: 'Zone';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  members: Array<Country>;\n};\n\nexport namespace SubscribedEmails {\n  export type Fragment = SubscribedEmailsFragment;\n}\n\nexport namespace SubscribedPhones {\n  export type Fragment = SubscribedPhonesFragment;\n}\n\nexport namespace GetAllEmails {\n  export type Variables = GetAllEmailsQueryVariables;\n  export type Query = GetAllEmailsQuery;\n  export type SubscriptionEmails = GetAllEmailsQuery['SubscriptionEmails'];\n  export type Items = (NonNullable<GetAllEmailsQuery['SubscriptionEmails']['items'][0]>);\n}\n\nexport namespace DeleteEmail {\n  export type Variables = DeleteEmailMutationVariables;\n  export type Mutation = DeleteEmailMutation;\n  export type DeleteSubscriptionEmail = (NonNullable<DeleteEmailMutation['deleteSubscriptionEmail'][0]>);\n}\n\nexport namespace GetAllPhones {\n  export type Variables = GetAllPhonesQueryVariables;\n  export type Query = GetAllPhonesQuery;\n  export type SubscriptionPhones = GetAllPhonesQuery['SubscriptionPhones'];\n  export type Items = (NonNullable<GetAllPhonesQuery['SubscriptionPhones']['items'][0]>);\n}\n\nexport namespace DeletePhone {\n  export type Variables = DeletePhoneMutationVariables;\n  export type Mutation = DeletePhoneMutation;\n  export type DeleteSubscriptionPhone = (NonNullable<DeletePhoneMutation['deleteSubscriptionPhone'][0]>);\n}\n\nexport namespace UpdateEmail {\n  export type Variables = UpdateEmailMutationVariables;\n  export type Mutation = UpdateEmailMutation;\n  export type UpdateSubscriptionEmail = (NonNullable<UpdateEmailMutation['updateSubscriptionEmail'][0]>);\n}\n\nexport namespace CreateEmail {\n  export type Variables = CreateEmailMutationVariables;\n  export type Mutation = CreateEmailMutation;\n  export type AddSubscriptionEmail = (NonNullable<CreateEmailMutation['addSubscriptionEmail'][0]>);\n}\n\nexport namespace UpdatePhone {\n  export type Variables = UpdatePhoneMutationVariables;\n  export type Mutation = UpdatePhoneMutation;\n  export type UpdateSubscriptionPhone = (NonNullable<UpdatePhoneMutation['updateSubscriptionPhone'][0]>);\n}\n\nexport namespace CreatePhone {\n  export type Variables = CreatePhoneMutationVariables;\n  export type Mutation = CreatePhoneMutation;\n  export type AddSubscriptionPhone = (NonNullable<CreatePhoneMutation['addSubscriptionPhone'][0]>);\n}\n\nexport namespace GetEmail {\n  export type Variables = GetEmailQueryVariables;\n  export type Query = GetEmailQuery;\n  export type SubscriptionEmail = (NonNullable<GetEmailQuery['SubscriptionEmail']>);\n}\n\nexport namespace GetPhone {\n  export type Variables = GetPhoneQueryVariables;\n  export type Query = GetPhoneQuery;\n  export type SubscriptionPhone = (NonNullable<GetPhoneQuery['SubscriptionPhone']>);\n}\n\nexport type SubscribedEmailsFragment = (\n  { __typename?: 'Email' }\n  & Pick<Email, 'id' | 'email' | 'createdAt' | 'updatedAt'>\n);\n\nexport type SubscribedPhonesFragment = (\n  { __typename?: 'Phone' }\n  & Pick<Phone, 'id' | 'phone' | 'createdAt' | 'updatedAt'>\n);\n\nexport type GetAllEmailsQueryVariables = Exact<{\n  options?: Maybe<EmailListOptions>;\n}>;\n\n\nexport type GetAllEmailsQuery = (\n  { __typename?: 'Query' }\n  & { SubscriptionEmails: (\n    { __typename?: 'EmailList' }\n    & Pick<EmailList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Email' }\n      & SubscribedEmailsFragment\n    )> }\n  ) }\n);\n\nexport type DeleteEmailMutationVariables = Exact<{\n  input: Array<Scalars['ID']>;\n}>;\n\n\nexport type DeleteEmailMutation = (\n  { __typename?: 'Mutation' }\n  & { deleteSubscriptionEmail: Array<Maybe<(\n    { __typename?: 'Email' }\n    & SubscribedEmailsFragment\n  )>> }\n);\n\nexport type GetAllPhonesQueryVariables = Exact<{\n  options?: Maybe<PhoneListOptions>;\n}>;\n\n\nexport type GetAllPhonesQuery = (\n  { __typename?: 'Query' }\n  & { SubscriptionPhones: (\n    { __typename?: 'PhoneList' }\n    & Pick<PhoneList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Phone' }\n      & SubscribedPhonesFragment\n    )> }\n  ) }\n);\n\nexport type DeletePhoneMutationVariables = Exact<{\n  input: Array<Scalars['ID']>;\n}>;\n\n\nexport type DeletePhoneMutation = (\n  { __typename?: 'Mutation' }\n  & { deleteSubscriptionPhone: Array<Maybe<(\n    { __typename?: 'Phone' }\n    & SubscribedPhonesFragment\n  )>> }\n);\n\nexport type UpdateEmailMutationVariables = Exact<{\n  input: Array<EmailUpdateInput>;\n}>;\n\n\nexport type UpdateEmailMutation = (\n  { __typename?: 'Mutation' }\n  & { updateSubscriptionEmail: Array<Maybe<(\n    { __typename?: 'Email' }\n    & SubscribedEmailsFragment\n  )>> }\n);\n\nexport type CreateEmailMutationVariables = Exact<{\n  input: Array<EmailAddInput>;\n}>;\n\n\nexport type CreateEmailMutation = (\n  { __typename?: 'Mutation' }\n  & { addSubscriptionEmail: Array<Maybe<(\n    { __typename?: 'Email' }\n    & SubscribedEmailsFragment\n  )>> }\n);\n\nexport type UpdatePhoneMutationVariables = Exact<{\n  input: Array<PhoneUpdateInput>;\n}>;\n\n\nexport type UpdatePhoneMutation = (\n  { __typename?: 'Mutation' }\n  & { updateSubscriptionPhone: Array<Maybe<(\n    { __typename?: 'Phone' }\n    & SubscribedPhonesFragment\n  )>> }\n);\n\nexport type CreatePhoneMutationVariables = Exact<{\n  input: Array<PhoneAddInput>;\n}>;\n\n\nexport type CreatePhoneMutation = (\n  { __typename?: 'Mutation' }\n  & { addSubscriptionPhone: Array<Maybe<(\n    { __typename?: 'Phone' }\n    & SubscribedPhonesFragment\n  )>> }\n);\n\nexport type GetEmailQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetEmailQuery = (\n  { __typename?: 'Query' }\n  & { SubscriptionEmail?: Maybe<(\n    { __typename?: 'Email' }\n    & SubscribedEmailsFragment\n  )> }\n);\n\nexport type GetPhoneQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetPhoneQuery = (\n  { __typename?: 'Query' }\n  & { SubscriptionPhone?: Maybe<(\n    { __typename?: 'Phone' }\n    & SubscribedPhonesFragment\n  )> }\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageCode = exports.HistoryEntryType = exports.CurrencyCode = exports.LogicalOperator = exports.ErrorCode = exports.SortOrder = exports.Permission = exports.DeletionResult = exports.AdjustmentType = exports.GlobalFlag = exports.AssetType = void 0;\nvar AssetType;\n(function (AssetType) {\n    AssetType[\"IMAGE\"] = \"IMAGE\";\n    AssetType[\"VIDEO\"] = \"VIDEO\";\n    AssetType[\"BINARY\"] = \"BINARY\";\n})(AssetType = exports.AssetType || (exports.AssetType = {}));\nvar GlobalFlag;\n(function (GlobalFlag) {\n    GlobalFlag[\"TRUE\"] = \"TRUE\";\n    GlobalFlag[\"FALSE\"] = \"FALSE\";\n    GlobalFlag[\"INHERIT\"] = \"INHERIT\";\n})(GlobalFlag = exports.GlobalFlag || (exports.GlobalFlag = {}));\nvar AdjustmentType;\n(function (AdjustmentType) {\n    AdjustmentType[\"PROMOTION\"] = \"PROMOTION\";\n    AdjustmentType[\"DISTRIBUTED_ORDER_PROMOTION\"] = \"DISTRIBUTED_ORDER_PROMOTION\";\n})(AdjustmentType = exports.AdjustmentType || (exports.AdjustmentType = {}));\nvar DeletionResult;\n(function (DeletionResult) {\n    /** The entity was successfully deleted */\n    DeletionResult[\"DELETED\"] = \"DELETED\";\n    /** Deletion did not take place, reason given in message */\n    DeletionResult[\"NOT_DELETED\"] = \"NOT_DELETED\";\n})(DeletionResult = exports.DeletionResult || (exports.DeletionResult = {}));\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * @docsCategory common\n */\nvar Permission;\n(function (Permission) {\n    /** Authenticated means simply that the user is logged in */\n    Permission[\"Authenticated\"] = \"Authenticated\";\n    /** SuperAdmin has unrestricted access to all operations */\n    Permission[\"SuperAdmin\"] = \"SuperAdmin\";\n    /** Owner means the user owns this entity, e.g. a Customer's own Order */\n    Permission[\"Owner\"] = \"Owner\";\n    /** Public means any unauthenticated user may perform the operation */\n    Permission[\"Public\"] = \"Public\";\n    /** Grants permission to create Catalog */\n    Permission[\"CreateCatalog\"] = \"CreateCatalog\";\n    /** Grants permission to read Catalog */\n    Permission[\"ReadCatalog\"] = \"ReadCatalog\";\n    /** Grants permission to update Catalog */\n    Permission[\"UpdateCatalog\"] = \"UpdateCatalog\";\n    /** Grants permission to delete Catalog */\n    Permission[\"DeleteCatalog\"] = \"DeleteCatalog\";\n    /** Grants permission to create Customer */\n    Permission[\"CreateCustomer\"] = \"CreateCustomer\";\n    /** Grants permission to read Customer */\n    Permission[\"ReadCustomer\"] = \"ReadCustomer\";\n    /** Grants permission to update Customer */\n    Permission[\"UpdateCustomer\"] = \"UpdateCustomer\";\n    /** Grants permission to delete Customer */\n    Permission[\"DeleteCustomer\"] = \"DeleteCustomer\";\n    /** Grants permission to create Administrator */\n    Permission[\"CreateAdministrator\"] = \"CreateAdministrator\";\n    /** Grants permission to read Administrator */\n    Permission[\"ReadAdministrator\"] = \"ReadAdministrator\";\n    /** Grants permission to update Administrator */\n    Permission[\"UpdateAdministrator\"] = \"UpdateAdministrator\";\n    /** Grants permission to delete Administrator */\n    Permission[\"DeleteAdministrator\"] = \"DeleteAdministrator\";\n    /** Grants permission to create Order */\n    Permission[\"CreateOrder\"] = \"CreateOrder\";\n    /** Grants permission to read Order */\n    Permission[\"ReadOrder\"] = \"ReadOrder\";\n    /** Grants permission to update Order */\n    Permission[\"UpdateOrder\"] = \"UpdateOrder\";\n    /** Grants permission to delete Order */\n    Permission[\"DeleteOrder\"] = \"DeleteOrder\";\n    /** Grants permission to create Promotion */\n    Permission[\"CreatePromotion\"] = \"CreatePromotion\";\n    /** Grants permission to read Promotion */\n    Permission[\"ReadPromotion\"] = \"ReadPromotion\";\n    /** Grants permission to update Promotion */\n    Permission[\"UpdatePromotion\"] = \"UpdatePromotion\";\n    /** Grants permission to delete Promotion */\n    Permission[\"DeletePromotion\"] = \"DeletePromotion\";\n    /** Grants permission to create Settings */\n    Permission[\"CreateSettings\"] = \"CreateSettings\";\n    /** Grants permission to read Settings */\n    Permission[\"ReadSettings\"] = \"ReadSettings\";\n    /** Grants permission to update Settings */\n    Permission[\"UpdateSettings\"] = \"UpdateSettings\";\n    /** Grants permission to delete Settings */\n    Permission[\"DeleteSettings\"] = \"DeleteSettings\";\n})(Permission = exports.Permission || (exports.Permission = {}));\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASC\"] = \"ASC\";\n    SortOrder[\"DESC\"] = \"DESC\";\n})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    ErrorCode[\"NATIVE_AUTH_STRATEGY_ERROR\"] = \"NATIVE_AUTH_STRATEGY_ERROR\";\n    ErrorCode[\"INVALID_CREDENTIALS_ERROR\"] = \"INVALID_CREDENTIALS_ERROR\";\n    ErrorCode[\"ORDER_STATE_TRANSITION_ERROR\"] = \"ORDER_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"EMAIL_ADDRESS_CONFLICT_ERROR\"] = \"EMAIL_ADDRESS_CONFLICT_ERROR\";\n    ErrorCode[\"ORDER_LIMIT_ERROR\"] = \"ORDER_LIMIT_ERROR\";\n    ErrorCode[\"NEGATIVE_QUANTITY_ERROR\"] = \"NEGATIVE_QUANTITY_ERROR\";\n    ErrorCode[\"INSUFFICIENT_STOCK_ERROR\"] = \"INSUFFICIENT_STOCK_ERROR\";\n    ErrorCode[\"ORDER_MODIFICATION_ERROR\"] = \"ORDER_MODIFICATION_ERROR\";\n    ErrorCode[\"INELIGIBLE_SHIPPING_METHOD_ERROR\"] = \"INELIGIBLE_SHIPPING_METHOD_ERROR\";\n    ErrorCode[\"ORDER_PAYMENT_STATE_ERROR\"] = \"ORDER_PAYMENT_STATE_ERROR\";\n    ErrorCode[\"PAYMENT_FAILED_ERROR\"] = \"PAYMENT_FAILED_ERROR\";\n    ErrorCode[\"PAYMENT_DECLINED_ERROR\"] = \"PAYMENT_DECLINED_ERROR\";\n    ErrorCode[\"COUPON_CODE_INVALID_ERROR\"] = \"COUPON_CODE_INVALID_ERROR\";\n    ErrorCode[\"COUPON_CODE_EXPIRED_ERROR\"] = \"COUPON_CODE_EXPIRED_ERROR\";\n    ErrorCode[\"COUPON_CODE_LIMIT_ERROR\"] = \"COUPON_CODE_LIMIT_ERROR\";\n    ErrorCode[\"ALREADY_LOGGED_IN_ERROR\"] = \"ALREADY_LOGGED_IN_ERROR\";\n    ErrorCode[\"MISSING_PASSWORD_ERROR\"] = \"MISSING_PASSWORD_ERROR\";\n    ErrorCode[\"PASSWORD_ALREADY_SET_ERROR\"] = \"PASSWORD_ALREADY_SET_ERROR\";\n    ErrorCode[\"VERIFICATION_TOKEN_INVALID_ERROR\"] = \"VERIFICATION_TOKEN_INVALID_ERROR\";\n    ErrorCode[\"VERIFICATION_TOKEN_EXPIRED_ERROR\"] = \"VERIFICATION_TOKEN_EXPIRED_ERROR\";\n    ErrorCode[\"IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR\"] = \"IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR\";\n    ErrorCode[\"IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR\"] = \"IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR\";\n    ErrorCode[\"PASSWORD_RESET_TOKEN_INVALID_ERROR\"] = \"PASSWORD_RESET_TOKEN_INVALID_ERROR\";\n    ErrorCode[\"PASSWORD_RESET_TOKEN_EXPIRED_ERROR\"] = \"PASSWORD_RESET_TOKEN_EXPIRED_ERROR\";\n    ErrorCode[\"NOT_VERIFIED_ERROR\"] = \"NOT_VERIFIED_ERROR\";\n    ErrorCode[\"NO_ACTIVE_ORDER_ERROR\"] = \"NO_ACTIVE_ORDER_ERROR\";\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\nvar LogicalOperator;\n(function (LogicalOperator) {\n    LogicalOperator[\"AND\"] = \"AND\";\n    LogicalOperator[\"OR\"] = \"OR\";\n})(LogicalOperator = exports.LogicalOperator || (exports.LogicalOperator = {}));\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nvar CurrencyCode;\n(function (CurrencyCode) {\n    /** United Arab Emirates dirham */\n    CurrencyCode[\"AED\"] = \"AED\";\n    /** Afghan afghani */\n    CurrencyCode[\"AFN\"] = \"AFN\";\n    /** Albanian lek */\n    CurrencyCode[\"ALL\"] = \"ALL\";\n    /** Armenian dram */\n    CurrencyCode[\"AMD\"] = \"AMD\";\n    /** Netherlands Antillean guilder */\n    CurrencyCode[\"ANG\"] = \"ANG\";\n    /** Angolan kwanza */\n    CurrencyCode[\"AOA\"] = \"AOA\";\n    /** Argentine peso */\n    CurrencyCode[\"ARS\"] = \"ARS\";\n    /** Australian dollar */\n    CurrencyCode[\"AUD\"] = \"AUD\";\n    /** Aruban florin */\n    CurrencyCode[\"AWG\"] = \"AWG\";\n    /** Azerbaijani manat */\n    CurrencyCode[\"AZN\"] = \"AZN\";\n    /** Bosnia and Herzegovina convertible mark */\n    CurrencyCode[\"BAM\"] = \"BAM\";\n    /** Barbados dollar */\n    CurrencyCode[\"BBD\"] = \"BBD\";\n    /** Bangladeshi taka */\n    CurrencyCode[\"BDT\"] = \"BDT\";\n    /** Bulgarian lev */\n    CurrencyCode[\"BGN\"] = \"BGN\";\n    /** Bahraini dinar */\n    CurrencyCode[\"BHD\"] = \"BHD\";\n    /** Burundian franc */\n    CurrencyCode[\"BIF\"] = \"BIF\";\n    /** Bermudian dollar */\n    CurrencyCode[\"BMD\"] = \"BMD\";\n    /** Brunei dollar */\n    CurrencyCode[\"BND\"] = \"BND\";\n    /** Boliviano */\n    CurrencyCode[\"BOB\"] = \"BOB\";\n    /** Brazilian real */\n    CurrencyCode[\"BRL\"] = \"BRL\";\n    /** Bahamian dollar */\n    CurrencyCode[\"BSD\"] = \"BSD\";\n    /** Bhutanese ngultrum */\n    CurrencyCode[\"BTN\"] = \"BTN\";\n    /** Botswana pula */\n    CurrencyCode[\"BWP\"] = \"BWP\";\n    /** Belarusian ruble */\n    CurrencyCode[\"BYN\"] = \"BYN\";\n    /** Belize dollar */\n    CurrencyCode[\"BZD\"] = \"BZD\";\n    /** Canadian dollar */\n    CurrencyCode[\"CAD\"] = \"CAD\";\n    /** Congolese franc */\n    CurrencyCode[\"CDF\"] = \"CDF\";\n    /** Swiss franc */\n    CurrencyCode[\"CHF\"] = \"CHF\";\n    /** Chilean peso */\n    CurrencyCode[\"CLP\"] = \"CLP\";\n    /** Renminbi (Chinese) yuan */\n    CurrencyCode[\"CNY\"] = \"CNY\";\n    /** Colombian peso */\n    CurrencyCode[\"COP\"] = \"COP\";\n    /** Costa Rican colon */\n    CurrencyCode[\"CRC\"] = \"CRC\";\n    /** Cuban convertible peso */\n    CurrencyCode[\"CUC\"] = \"CUC\";\n    /** Cuban peso */\n    CurrencyCode[\"CUP\"] = \"CUP\";\n    /** Cape Verde escudo */\n    CurrencyCode[\"CVE\"] = \"CVE\";\n    /** Czech koruna */\n    CurrencyCode[\"CZK\"] = \"CZK\";\n    /** Djiboutian franc */\n    CurrencyCode[\"DJF\"] = \"DJF\";\n    /** Danish krone */\n    CurrencyCode[\"DKK\"] = \"DKK\";\n    /** Dominican peso */\n    CurrencyCode[\"DOP\"] = \"DOP\";\n    /** Algerian dinar */\n    CurrencyCode[\"DZD\"] = \"DZD\";\n    /** Egyptian pound */\n    CurrencyCode[\"EGP\"] = \"EGP\";\n    /** Eritrean nakfa */\n    CurrencyCode[\"ERN\"] = \"ERN\";\n    /** Ethiopian birr */\n    CurrencyCode[\"ETB\"] = \"ETB\";\n    /** Euro */\n    CurrencyCode[\"EUR\"] = \"EUR\";\n    /** Fiji dollar */\n    CurrencyCode[\"FJD\"] = \"FJD\";\n    /** Falkland Islands pound */\n    CurrencyCode[\"FKP\"] = \"FKP\";\n    /** Pound sterling */\n    CurrencyCode[\"GBP\"] = \"GBP\";\n    /** Georgian lari */\n    CurrencyCode[\"GEL\"] = \"GEL\";\n    /** Ghanaian cedi */\n    CurrencyCode[\"GHS\"] = \"GHS\";\n    /** Gibraltar pound */\n    CurrencyCode[\"GIP\"] = \"GIP\";\n    /** Gambian dalasi */\n    CurrencyCode[\"GMD\"] = \"GMD\";\n    /** Guinean franc */\n    CurrencyCode[\"GNF\"] = \"GNF\";\n    /** Guatemalan quetzal */\n    CurrencyCode[\"GTQ\"] = \"GTQ\";\n    /** Guyanese dollar */\n    CurrencyCode[\"GYD\"] = \"GYD\";\n    /** Hong Kong dollar */\n    CurrencyCode[\"HKD\"] = \"HKD\";\n    /** Honduran lempira */\n    CurrencyCode[\"HNL\"] = \"HNL\";\n    /** Croatian kuna */\n    CurrencyCode[\"HRK\"] = \"HRK\";\n    /** Haitian gourde */\n    CurrencyCode[\"HTG\"] = \"HTG\";\n    /** Hungarian forint */\n    CurrencyCode[\"HUF\"] = \"HUF\";\n    /** Indonesian rupiah */\n    CurrencyCode[\"IDR\"] = \"IDR\";\n    /** Israeli new shekel */\n    CurrencyCode[\"ILS\"] = \"ILS\";\n    /** Indian rupee */\n    CurrencyCode[\"INR\"] = \"INR\";\n    /** Iraqi dinar */\n    CurrencyCode[\"IQD\"] = \"IQD\";\n    /** Iranian rial */\n    CurrencyCode[\"IRR\"] = \"IRR\";\n    /** Icelandic króna */\n    CurrencyCode[\"ISK\"] = \"ISK\";\n    /** Jamaican dollar */\n    CurrencyCode[\"JMD\"] = \"JMD\";\n    /** Jordanian dinar */\n    CurrencyCode[\"JOD\"] = \"JOD\";\n    /** Japanese yen */\n    CurrencyCode[\"JPY\"] = \"JPY\";\n    /** Kenyan shilling */\n    CurrencyCode[\"KES\"] = \"KES\";\n    /** Kyrgyzstani som */\n    CurrencyCode[\"KGS\"] = \"KGS\";\n    /** Cambodian riel */\n    CurrencyCode[\"KHR\"] = \"KHR\";\n    /** Comoro franc */\n    CurrencyCode[\"KMF\"] = \"KMF\";\n    /** North Korean won */\n    CurrencyCode[\"KPW\"] = \"KPW\";\n    /** South Korean won */\n    CurrencyCode[\"KRW\"] = \"KRW\";\n    /** Kuwaiti dinar */\n    CurrencyCode[\"KWD\"] = \"KWD\";\n    /** Cayman Islands dollar */\n    CurrencyCode[\"KYD\"] = \"KYD\";\n    /** Kazakhstani tenge */\n    CurrencyCode[\"KZT\"] = \"KZT\";\n    /** Lao kip */\n    CurrencyCode[\"LAK\"] = \"LAK\";\n    /** Lebanese pound */\n    CurrencyCode[\"LBP\"] = \"LBP\";\n    /** Sri Lankan rupee */\n    CurrencyCode[\"LKR\"] = \"LKR\";\n    /** Liberian dollar */\n    CurrencyCode[\"LRD\"] = \"LRD\";\n    /** Lesotho loti */\n    CurrencyCode[\"LSL\"] = \"LSL\";\n    /** Libyan dinar */\n    CurrencyCode[\"LYD\"] = \"LYD\";\n    /** Moroccan dirham */\n    CurrencyCode[\"MAD\"] = \"MAD\";\n    /** Moldovan leu */\n    CurrencyCode[\"MDL\"] = \"MDL\";\n    /** Malagasy ariary */\n    CurrencyCode[\"MGA\"] = \"MGA\";\n    /** Macedonian denar */\n    CurrencyCode[\"MKD\"] = \"MKD\";\n    /** Myanmar kyat */\n    CurrencyCode[\"MMK\"] = \"MMK\";\n    /** Mongolian tögrög */\n    CurrencyCode[\"MNT\"] = \"MNT\";\n    /** Macanese pataca */\n    CurrencyCode[\"MOP\"] = \"MOP\";\n    /** Mauritanian ouguiya */\n    CurrencyCode[\"MRU\"] = \"MRU\";\n    /** Mauritian rupee */\n    CurrencyCode[\"MUR\"] = \"MUR\";\n    /** Maldivian rufiyaa */\n    CurrencyCode[\"MVR\"] = \"MVR\";\n    /** Malawian kwacha */\n    CurrencyCode[\"MWK\"] = \"MWK\";\n    /** Mexican peso */\n    CurrencyCode[\"MXN\"] = \"MXN\";\n    /** Malaysian ringgit */\n    CurrencyCode[\"MYR\"] = \"MYR\";\n    /** Mozambican metical */\n    CurrencyCode[\"MZN\"] = \"MZN\";\n    /** Namibian dollar */\n    CurrencyCode[\"NAD\"] = \"NAD\";\n    /** Nigerian naira */\n    CurrencyCode[\"NGN\"] = \"NGN\";\n    /** Nicaraguan córdoba */\n    CurrencyCode[\"NIO\"] = \"NIO\";\n    /** Norwegian krone */\n    CurrencyCode[\"NOK\"] = \"NOK\";\n    /** Nepalese rupee */\n    CurrencyCode[\"NPR\"] = \"NPR\";\n    /** New Zealand dollar */\n    CurrencyCode[\"NZD\"] = \"NZD\";\n    /** Omani rial */\n    CurrencyCode[\"OMR\"] = \"OMR\";\n    /** Panamanian balboa */\n    CurrencyCode[\"PAB\"] = \"PAB\";\n    /** Peruvian sol */\n    CurrencyCode[\"PEN\"] = \"PEN\";\n    /** Papua New Guinean kina */\n    CurrencyCode[\"PGK\"] = \"PGK\";\n    /** Philippine peso */\n    CurrencyCode[\"PHP\"] = \"PHP\";\n    /** Pakistani rupee */\n    CurrencyCode[\"PKR\"] = \"PKR\";\n    /** Polish złoty */\n    CurrencyCode[\"PLN\"] = \"PLN\";\n    /** Paraguayan guaraní */\n    CurrencyCode[\"PYG\"] = \"PYG\";\n    /** Qatari riyal */\n    CurrencyCode[\"QAR\"] = \"QAR\";\n    /** Romanian leu */\n    CurrencyCode[\"RON\"] = \"RON\";\n    /** Serbian dinar */\n    CurrencyCode[\"RSD\"] = \"RSD\";\n    /** Russian ruble */\n    CurrencyCode[\"RUB\"] = \"RUB\";\n    /** Rwandan franc */\n    CurrencyCode[\"RWF\"] = \"RWF\";\n    /** Saudi riyal */\n    CurrencyCode[\"SAR\"] = \"SAR\";\n    /** Solomon Islands dollar */\n    CurrencyCode[\"SBD\"] = \"SBD\";\n    /** Seychelles rupee */\n    CurrencyCode[\"SCR\"] = \"SCR\";\n    /** Sudanese pound */\n    CurrencyCode[\"SDG\"] = \"SDG\";\n    /** Swedish krona/kronor */\n    CurrencyCode[\"SEK\"] = \"SEK\";\n    /** Singapore dollar */\n    CurrencyCode[\"SGD\"] = \"SGD\";\n    /** Saint Helena pound */\n    CurrencyCode[\"SHP\"] = \"SHP\";\n    /** Sierra Leonean leone */\n    CurrencyCode[\"SLL\"] = \"SLL\";\n    /** Somali shilling */\n    CurrencyCode[\"SOS\"] = \"SOS\";\n    /** Surinamese dollar */\n    CurrencyCode[\"SRD\"] = \"SRD\";\n    /** South Sudanese pound */\n    CurrencyCode[\"SSP\"] = \"SSP\";\n    /** São Tomé and Príncipe dobra */\n    CurrencyCode[\"STN\"] = \"STN\";\n    /** Salvadoran colón */\n    CurrencyCode[\"SVC\"] = \"SVC\";\n    /** Syrian pound */\n    CurrencyCode[\"SYP\"] = \"SYP\";\n    /** Swazi lilangeni */\n    CurrencyCode[\"SZL\"] = \"SZL\";\n    /** Thai baht */\n    CurrencyCode[\"THB\"] = \"THB\";\n    /** Tajikistani somoni */\n    CurrencyCode[\"TJS\"] = \"TJS\";\n    /** Turkmenistan manat */\n    CurrencyCode[\"TMT\"] = \"TMT\";\n    /** Tunisian dinar */\n    CurrencyCode[\"TND\"] = \"TND\";\n    /** Tongan paʻanga */\n    CurrencyCode[\"TOP\"] = \"TOP\";\n    /** Turkish lira */\n    CurrencyCode[\"TRY\"] = \"TRY\";\n    /** Trinidad and Tobago dollar */\n    CurrencyCode[\"TTD\"] = \"TTD\";\n    /** New Taiwan dollar */\n    CurrencyCode[\"TWD\"] = \"TWD\";\n    /** Tanzanian shilling */\n    CurrencyCode[\"TZS\"] = \"TZS\";\n    /** Ukrainian hryvnia */\n    CurrencyCode[\"UAH\"] = \"UAH\";\n    /** Ugandan shilling */\n    CurrencyCode[\"UGX\"] = \"UGX\";\n    /** United States dollar */\n    CurrencyCode[\"USD\"] = \"USD\";\n    /** Uruguayan peso */\n    CurrencyCode[\"UYU\"] = \"UYU\";\n    /** Uzbekistan som */\n    CurrencyCode[\"UZS\"] = \"UZS\";\n    /** Venezuelan bolívar soberano */\n    CurrencyCode[\"VES\"] = \"VES\";\n    /** Vietnamese đồng */\n    CurrencyCode[\"VND\"] = \"VND\";\n    /** Vanuatu vatu */\n    CurrencyCode[\"VUV\"] = \"VUV\";\n    /** Samoan tala */\n    CurrencyCode[\"WST\"] = \"WST\";\n    /** CFA franc BEAC */\n    CurrencyCode[\"XAF\"] = \"XAF\";\n    /** East Caribbean dollar */\n    CurrencyCode[\"XCD\"] = \"XCD\";\n    /** CFA franc BCEAO */\n    CurrencyCode[\"XOF\"] = \"XOF\";\n    /** CFP franc (franc Pacifique) */\n    CurrencyCode[\"XPF\"] = \"XPF\";\n    /** Yemeni rial */\n    CurrencyCode[\"YER\"] = \"YER\";\n    /** South African rand */\n    CurrencyCode[\"ZAR\"] = \"ZAR\";\n    /** Zambian kwacha */\n    CurrencyCode[\"ZMW\"] = \"ZMW\";\n    /** Zimbabwean dollar */\n    CurrencyCode[\"ZWL\"] = \"ZWL\";\n})(CurrencyCode = exports.CurrencyCode || (exports.CurrencyCode = {}));\nvar HistoryEntryType;\n(function (HistoryEntryType) {\n    HistoryEntryType[\"CUSTOMER_REGISTERED\"] = \"CUSTOMER_REGISTERED\";\n    HistoryEntryType[\"CUSTOMER_VERIFIED\"] = \"CUSTOMER_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_DETAIL_UPDATED\"] = \"CUSTOMER_DETAIL_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_ADDED_TO_GROUP\"] = \"CUSTOMER_ADDED_TO_GROUP\";\n    HistoryEntryType[\"CUSTOMER_REMOVED_FROM_GROUP\"] = \"CUSTOMER_REMOVED_FROM_GROUP\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_CREATED\"] = \"CUSTOMER_ADDRESS_CREATED\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_UPDATED\"] = \"CUSTOMER_ADDRESS_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_DELETED\"] = \"CUSTOMER_ADDRESS_DELETED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_UPDATED\"] = \"CUSTOMER_PASSWORD_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_RESET_REQUESTED\"] = \"CUSTOMER_PASSWORD_RESET_REQUESTED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_RESET_VERIFIED\"] = \"CUSTOMER_PASSWORD_RESET_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_EMAIL_UPDATE_REQUESTED\"] = \"CUSTOMER_EMAIL_UPDATE_REQUESTED\";\n    HistoryEntryType[\"CUSTOMER_EMAIL_UPDATE_VERIFIED\"] = \"CUSTOMER_EMAIL_UPDATE_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_NOTE\"] = \"CUSTOMER_NOTE\";\n    HistoryEntryType[\"ORDER_STATE_TRANSITION\"] = \"ORDER_STATE_TRANSITION\";\n    HistoryEntryType[\"ORDER_PAYMENT_TRANSITION\"] = \"ORDER_PAYMENT_TRANSITION\";\n    HistoryEntryType[\"ORDER_FULFILLMENT\"] = \"ORDER_FULFILLMENT\";\n    HistoryEntryType[\"ORDER_CANCELLATION\"] = \"ORDER_CANCELLATION\";\n    HistoryEntryType[\"ORDER_REFUND_TRANSITION\"] = \"ORDER_REFUND_TRANSITION\";\n    HistoryEntryType[\"ORDER_FULFILLMENT_TRANSITION\"] = \"ORDER_FULFILLMENT_TRANSITION\";\n    HistoryEntryType[\"ORDER_NOTE\"] = \"ORDER_NOTE\";\n    HistoryEntryType[\"ORDER_COUPON_APPLIED\"] = \"ORDER_COUPON_APPLIED\";\n    HistoryEntryType[\"ORDER_COUPON_REMOVED\"] = \"ORDER_COUPON_REMOVED\";\n    HistoryEntryType[\"ORDER_MODIFIED\"] = \"ORDER_MODIFIED\";\n})(HistoryEntryType = exports.HistoryEntryType || (exports.HistoryEntryType = {}));\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nvar LanguageCode;\n(function (LanguageCode) {\n    /** Afrikaans */\n    LanguageCode[\"af\"] = \"af\";\n    /** Akan */\n    LanguageCode[\"ak\"] = \"ak\";\n    /** Albanian */\n    LanguageCode[\"sq\"] = \"sq\";\n    /** Amharic */\n    LanguageCode[\"am\"] = \"am\";\n    /** Arabic */\n    LanguageCode[\"ar\"] = \"ar\";\n    /** Armenian */\n    LanguageCode[\"hy\"] = \"hy\";\n    /** Assamese */\n    LanguageCode[\"as\"] = \"as\";\n    /** Azerbaijani */\n    LanguageCode[\"az\"] = \"az\";\n    /** Bambara */\n    LanguageCode[\"bm\"] = \"bm\";\n    /** Bangla */\n    LanguageCode[\"bn\"] = \"bn\";\n    /** Basque */\n    LanguageCode[\"eu\"] = \"eu\";\n    /** Belarusian */\n    LanguageCode[\"be\"] = \"be\";\n    /** Bosnian */\n    LanguageCode[\"bs\"] = \"bs\";\n    /** Breton */\n    LanguageCode[\"br\"] = \"br\";\n    /** Bulgarian */\n    LanguageCode[\"bg\"] = \"bg\";\n    /** Burmese */\n    LanguageCode[\"my\"] = \"my\";\n    /** Catalan */\n    LanguageCode[\"ca\"] = \"ca\";\n    /** Chechen */\n    LanguageCode[\"ce\"] = \"ce\";\n    /** Chinese */\n    LanguageCode[\"zh\"] = \"zh\";\n    /** Simplified Chinese */\n    LanguageCode[\"zh_Hans\"] = \"zh_Hans\";\n    /** Traditional Chinese */\n    LanguageCode[\"zh_Hant\"] = \"zh_Hant\";\n    /** Church Slavic */\n    LanguageCode[\"cu\"] = \"cu\";\n    /** Cornish */\n    LanguageCode[\"kw\"] = \"kw\";\n    /** Corsican */\n    LanguageCode[\"co\"] = \"co\";\n    /** Croatian */\n    LanguageCode[\"hr\"] = \"hr\";\n    /** Czech */\n    LanguageCode[\"cs\"] = \"cs\";\n    /** Danish */\n    LanguageCode[\"da\"] = \"da\";\n    /** Dutch */\n    LanguageCode[\"nl\"] = \"nl\";\n    /** Flemish */\n    LanguageCode[\"nl_BE\"] = \"nl_BE\";\n    /** Dzongkha */\n    LanguageCode[\"dz\"] = \"dz\";\n    /** English */\n    LanguageCode[\"en\"] = \"en\";\n    /** Australian English */\n    LanguageCode[\"en_AU\"] = \"en_AU\";\n    /** Canadian English */\n    LanguageCode[\"en_CA\"] = \"en_CA\";\n    /** British English */\n    LanguageCode[\"en_GB\"] = \"en_GB\";\n    /** American English */\n    LanguageCode[\"en_US\"] = \"en_US\";\n    /** Esperanto */\n    LanguageCode[\"eo\"] = \"eo\";\n    /** Estonian */\n    LanguageCode[\"et\"] = \"et\";\n    /** Ewe */\n    LanguageCode[\"ee\"] = \"ee\";\n    /** Faroese */\n    LanguageCode[\"fo\"] = \"fo\";\n    /** Finnish */\n    LanguageCode[\"fi\"] = \"fi\";\n    /** French */\n    LanguageCode[\"fr\"] = \"fr\";\n    /** Canadian French */\n    LanguageCode[\"fr_CA\"] = \"fr_CA\";\n    /** Swiss French */\n    LanguageCode[\"fr_CH\"] = \"fr_CH\";\n    /** Fulah */\n    LanguageCode[\"ff\"] = \"ff\";\n    /** Galician */\n    LanguageCode[\"gl\"] = \"gl\";\n    /** Ganda */\n    LanguageCode[\"lg\"] = \"lg\";\n    /** Georgian */\n    LanguageCode[\"ka\"] = \"ka\";\n    /** German */\n    LanguageCode[\"de\"] = \"de\";\n    /** Austrian German */\n    LanguageCode[\"de_AT\"] = \"de_AT\";\n    /** Swiss High German */\n    LanguageCode[\"de_CH\"] = \"de_CH\";\n    /** Greek */\n    LanguageCode[\"el\"] = \"el\";\n    /** Gujarati */\n    LanguageCode[\"gu\"] = \"gu\";\n    /** Haitian Creole */\n    LanguageCode[\"ht\"] = \"ht\";\n    /** Hausa */\n    LanguageCode[\"ha\"] = \"ha\";\n    /** Hebrew */\n    LanguageCode[\"he\"] = \"he\";\n    /** Hindi */\n    LanguageCode[\"hi\"] = \"hi\";\n    /** Hungarian */\n    LanguageCode[\"hu\"] = \"hu\";\n    /** Icelandic */\n    LanguageCode[\"is\"] = \"is\";\n    /** Igbo */\n    LanguageCode[\"ig\"] = \"ig\";\n    /** Indonesian */\n    LanguageCode[\"id\"] = \"id\";\n    /** Interlingua */\n    LanguageCode[\"ia\"] = \"ia\";\n    /** Irish */\n    LanguageCode[\"ga\"] = \"ga\";\n    /** Italian */\n    LanguageCode[\"it\"] = \"it\";\n    /** Japanese */\n    LanguageCode[\"ja\"] = \"ja\";\n    /** Javanese */\n    LanguageCode[\"jv\"] = \"jv\";\n    /** Kalaallisut */\n    LanguageCode[\"kl\"] = \"kl\";\n    /** Kannada */\n    LanguageCode[\"kn\"] = \"kn\";\n    /** Kashmiri */\n    LanguageCode[\"ks\"] = \"ks\";\n    /** Kazakh */\n    LanguageCode[\"kk\"] = \"kk\";\n    /** Khmer */\n    LanguageCode[\"km\"] = \"km\";\n    /** Kikuyu */\n    LanguageCode[\"ki\"] = \"ki\";\n    /** Kinyarwanda */\n    LanguageCode[\"rw\"] = \"rw\";\n    /** Korean */\n    LanguageCode[\"ko\"] = \"ko\";\n    /** Kurdish */\n    LanguageCode[\"ku\"] = \"ku\";\n    /** Kyrgyz */\n    LanguageCode[\"ky\"] = \"ky\";\n    /** Lao */\n    LanguageCode[\"lo\"] = \"lo\";\n    /** Latin */\n    LanguageCode[\"la\"] = \"la\";\n    /** Latvian */\n    LanguageCode[\"lv\"] = \"lv\";\n    /** Lingala */\n    LanguageCode[\"ln\"] = \"ln\";\n    /** Lithuanian */\n    LanguageCode[\"lt\"] = \"lt\";\n    /** Luba-Katanga */\n    LanguageCode[\"lu\"] = \"lu\";\n    /** Luxembourgish */\n    LanguageCode[\"lb\"] = \"lb\";\n    /** Macedonian */\n    LanguageCode[\"mk\"] = \"mk\";\n    /** Malagasy */\n    LanguageCode[\"mg\"] = \"mg\";\n    /** Malay */\n    LanguageCode[\"ms\"] = \"ms\";\n    /** Malayalam */\n    LanguageCode[\"ml\"] = \"ml\";\n    /** Maltese */\n    LanguageCode[\"mt\"] = \"mt\";\n    /** Manx */\n    LanguageCode[\"gv\"] = \"gv\";\n    /** Maori */\n    LanguageCode[\"mi\"] = \"mi\";\n    /** Marathi */\n    LanguageCode[\"mr\"] = \"mr\";\n    /** Mongolian */\n    LanguageCode[\"mn\"] = \"mn\";\n    /** Nepali */\n    LanguageCode[\"ne\"] = \"ne\";\n    /** North Ndebele */\n    LanguageCode[\"nd\"] = \"nd\";\n    /** Northern Sami */\n    LanguageCode[\"se\"] = \"se\";\n    /** Norwegian Bokmål */\n    LanguageCode[\"nb\"] = \"nb\";\n    /** Norwegian Nynorsk */\n    LanguageCode[\"nn\"] = \"nn\";\n    /** Nyanja */\n    LanguageCode[\"ny\"] = \"ny\";\n    /** Odia */\n    LanguageCode[\"or\"] = \"or\";\n    /** Oromo */\n    LanguageCode[\"om\"] = \"om\";\n    /** Ossetic */\n    LanguageCode[\"os\"] = \"os\";\n    /** Pashto */\n    LanguageCode[\"ps\"] = \"ps\";\n    /** Persian */\n    LanguageCode[\"fa\"] = \"fa\";\n    /** Dari */\n    LanguageCode[\"fa_AF\"] = \"fa_AF\";\n    /** Polish */\n    LanguageCode[\"pl\"] = \"pl\";\n    /** Portuguese */\n    LanguageCode[\"pt\"] = \"pt\";\n    /** Brazilian Portuguese */\n    LanguageCode[\"pt_BR\"] = \"pt_BR\";\n    /** European Portuguese */\n    LanguageCode[\"pt_PT\"] = \"pt_PT\";\n    /** Punjabi */\n    LanguageCode[\"pa\"] = \"pa\";\n    /** Quechua */\n    LanguageCode[\"qu\"] = \"qu\";\n    /** Romanian */\n    LanguageCode[\"ro\"] = \"ro\";\n    /** Moldavian */\n    LanguageCode[\"ro_MD\"] = \"ro_MD\";\n    /** Romansh */\n    LanguageCode[\"rm\"] = \"rm\";\n    /** Rundi */\n    LanguageCode[\"rn\"] = \"rn\";\n    /** Russian */\n    LanguageCode[\"ru\"] = \"ru\";\n    /** Samoan */\n    LanguageCode[\"sm\"] = \"sm\";\n    /** Sango */\n    LanguageCode[\"sg\"] = \"sg\";\n    /** Sanskrit */\n    LanguageCode[\"sa\"] = \"sa\";\n    /** Scottish Gaelic */\n    LanguageCode[\"gd\"] = \"gd\";\n    /** Serbian */\n    LanguageCode[\"sr\"] = \"sr\";\n    /** Shona */\n    LanguageCode[\"sn\"] = \"sn\";\n    /** Sichuan Yi */\n    LanguageCode[\"ii\"] = \"ii\";\n    /** Sindhi */\n    LanguageCode[\"sd\"] = \"sd\";\n    /** Sinhala */\n    LanguageCode[\"si\"] = \"si\";\n    /** Slovak */\n    LanguageCode[\"sk\"] = \"sk\";\n    /** Slovenian */\n    LanguageCode[\"sl\"] = \"sl\";\n    /** Somali */\n    LanguageCode[\"so\"] = \"so\";\n    /** Southern Sotho */\n    LanguageCode[\"st\"] = \"st\";\n    /** Spanish */\n    LanguageCode[\"es\"] = \"es\";\n    /** European Spanish */\n    LanguageCode[\"es_ES\"] = \"es_ES\";\n    /** Mexican Spanish */\n    LanguageCode[\"es_MX\"] = \"es_MX\";\n    /** Sundanese */\n    LanguageCode[\"su\"] = \"su\";\n    /** Swahili */\n    LanguageCode[\"sw\"] = \"sw\";\n    /** Congo Swahili */\n    LanguageCode[\"sw_CD\"] = \"sw_CD\";\n    /** Swedish */\n    LanguageCode[\"sv\"] = \"sv\";\n    /** Tajik */\n    LanguageCode[\"tg\"] = \"tg\";\n    /** Tamil */\n    LanguageCode[\"ta\"] = \"ta\";\n    /** Tatar */\n    LanguageCode[\"tt\"] = \"tt\";\n    /** Telugu */\n    LanguageCode[\"te\"] = \"te\";\n    /** Thai */\n    LanguageCode[\"th\"] = \"th\";\n    /** Tibetan */\n    LanguageCode[\"bo\"] = \"bo\";\n    /** Tigrinya */\n    LanguageCode[\"ti\"] = \"ti\";\n    /** Tongan */\n    LanguageCode[\"to\"] = \"to\";\n    /** Turkish */\n    LanguageCode[\"tr\"] = \"tr\";\n    /** Turkmen */\n    LanguageCode[\"tk\"] = \"tk\";\n    /** Ukrainian */\n    LanguageCode[\"uk\"] = \"uk\";\n    /** Urdu */\n    LanguageCode[\"ur\"] = \"ur\";\n    /** Uyghur */\n    LanguageCode[\"ug\"] = \"ug\";\n    /** Uzbek */\n    LanguageCode[\"uz\"] = \"uz\";\n    /** Vietnamese */\n    LanguageCode[\"vi\"] = \"vi\";\n    /** Volapük */\n    LanguageCode[\"vo\"] = \"vo\";\n    /** Welsh */\n    LanguageCode[\"cy\"] = \"cy\";\n    /** Western Frisian */\n    LanguageCode[\"fy\"] = \"fy\";\n    /** Wolof */\n    LanguageCode[\"wo\"] = \"wo\";\n    /** Xhosa */\n    LanguageCode[\"xh\"] = \"xh\";\n    /** Yiddish */\n    LanguageCode[\"yi\"] = \"yi\";\n    /** Yoruba */\n    LanguageCode[\"yo\"] = \"yo\";\n    /** Zulu */\n    LanguageCode[\"zu\"] = \"zu\";\n})(LanguageCode = exports.LanguageCode || (exports.LanguageCode = {}));\n//# sourceMappingURL=generated-shop-types.js.map","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map","export class CsvDataService {\r\n  static exportToCsv(filename: string, rows: object[]) {\r\n    if (!rows || !rows.length) {\r\n      return;\r\n    }\r\n    const separator = ',';\r\n    const keys = Object.keys(rows[0]);\r\n    const csvContent =\r\n      keys.join(separator) +\r\n      '\\n' +\r\n      rows.map(row => {\r\n        return keys.map(k => {\r\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\r\n          cell = cell instanceof Date\r\n            ? cell.toLocaleString()\r\n            : cell.toString().replace(/\"/g, '\"\"');\r\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n            cell = `\"${cell}\"`;\r\n          }\r\n          return cell;\r\n        }).join(separator);\r\n      }).join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n      const link = document.createElement('a');\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', filename);\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeString = void 0;\n/**\n * Normalizes a string to replace non-alphanumeric and diacritical marks with\n * plain equivalents.\n * Based on https://stackoverflow.com/a/37511463/772859\n */\nfunction normalizeString(input, spaceReplacer = ' ') {\n    return (input || '')\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .toLowerCase()\n        .replace(/[!\"£$%^&*()+[\\]{};:@#~?\\\\/,|><`¬'=‘’]/g, '')\n        .replace(/\\s+/g, spaceReplacer);\n}\nexports.normalizeString = normalizeString;\n//# sourceMappingURL=normalize-string.js.map","import gql from 'graphql-tag';\r\n\r\nexport const MAIL_SUBSCRIPTION_FRAGMENT = gql`\r\n    fragment SubscribedEmails on Email {\r\n        id\r\n\t\temail\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n\r\nexport const PHONE_SUBSCRIPTION_FRAGMENT = gql`\r\n    fragment SubscribedPhones on Phone {\r\n        id\r\n\t\tphone\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unique = void 0;\n/**\n * Returns an array with only unique values. Objects are compared by reference,\n * unless the `byKey` argument is supplied, in which case matching properties will\n * be used to check duplicates\n */\nfunction unique(arr, byKey) {\n    return arr.filter((item, index, self) => {\n        return (index ===\n            self.findIndex(i => {\n                if (byKey === undefined) {\n                    return i === item;\n                }\n                else {\n                    return i[byKey] === item[byKey];\n                }\n            }));\n    });\n}\nexports.unique = unique;\n//# sourceMappingURL=unique.js.map"]}