{"version":3,"sources":["webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/generated-types.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/common/fragments.graphql.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/components/all-feedbacks-list/all-feedbacks-list.graphql.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/components/all-feedbacks-list/all-feedbacks-list.component.html","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/components/all-feedbacks-list/all-feedbacks-list.component.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/components/feedback-detail/feedback-detail.graphql.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/components/feedback-detail/feedback-detail.component.html","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/components/feedback-detail/feedback-detail.component.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/providers/routing/feedback-detail/feedback-detail-resolver.graphql.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/providers/routing/feedback-detail/feedback-detail-resolver.ts","webpack:///src/extensions/c2fc3167a7637e3e6047f9aa1c5029be8eb7d391e740b899c390029a2b24b36d/feedback-ui-lazy.module.ts"],"names":["AdjustmentType","AssetType","CurrencyCode","DeletionResult","HistoryEntryType","JobState","LanguageCode","LogicalOperator","Permission","RecommendationType","SortOrder","StockMovementType","Tax","Promotion","Shipping","Refund","TaxRefund","PromotionRefund","ShippingRefund","Image","Video","Binary","Aed","Afn","All","Amd","Ang","Aoa","Ars","Aud","Awg","Azn","Bam","Bbd","Bdt","Bgn","Bhd","Bif","Bmd","Bnd","Bob","Brl","Bsd","Btn","Bwp","Byn","Bzd","Cad","Cdf","Chf","Clp","Cny","Cop","Crc","Cuc","Cup","Cve","Czk","Djf","Dkk","Dop","Dzd","Egp","Ern","Etb","Eur","Fjd","Fkp","Gbp","Gel","Ghs","Gip","Gmd","Gnf","Gtq","Gyd","Hkd","Hnl","Hrk","Htg","Huf","Idr","Ils","Inr","Iqd","Irr","Isk","Jmd","Jod","Jpy","Kes","Kgs","Khr","Kmf","Kpw","Krw","Kwd","Kyd","Kzt","Lak","Lbp","Lkr","Lrd","Lsl","Lyd","Mad","Mdl","Mga","Mkd","Mmk","Mnt","Mop","Mru","Mur","Mvr","Mwk","Mxn","Myr","Mzn","Nad","Ngn","Nio","Nok","Npr","Nzd","Omr","Pab","Pen","Pgk","Php","Pkr","Pln","Pyg","Qar","Ron","Rsd","Rub","Rwf","Sar","Sbd","Scr","Sdg","Sek","Sgd","Shp","Sll","Sos","Srd","Ssp","Stn","Svc","Syp","Szl","Thb","Tjs","Tmt","Tnd","Top","Try","Ttd","Twd","Tzs","Uah","Ugx","Usd","Uyu","Uzs","Ves","Vnd","Vuv","Wst","Xaf","Xcd","Xof","Xpf","Yer","Zar","Zmw","Zwl","Deleted","NotDeleted","CustomerRegistered","CustomerVerified","CustomerDetailUpdated","CustomerAddedToGroup","CustomerRemovedFromGroup","CustomerAddressCreated","CustomerAddressUpdated","CustomerAddressDeleted","CustomerPasswordUpdated","CustomerPasswordResetRequested","CustomerPasswordResetVerified","CustomerEmailUpdateRequested","CustomerEmailUpdateVerified","CustomerNote","OrderStateTransition","OrderPaymentTransition","OrderFullfillment","OrderCancellation","OrderRefundTransition","OrderNote","OrderCouponApplied","OrderCouponRemoved","Pending","Running","Completed","Retrying","Failed","Af","Ak","Sq","Am","Ar","Hy","As","Az","Bm","Bn","Eu","Be","Bs","Br","Bg","My","Ca","Ce","Zh","ZhHans","ZhHant","Cu","Kw","Co","Hr","Cs","Da","Nl","NlBe","Dz","En","EnAu","EnCa","EnGb","EnUs","Eo","Et","Ee","Fo","Fi","Fr","FrCa","FrCh","Ff","Gl","Lg","Ka","De","DeAt","DeCh","El","Gu","Ht","Ha","He","Hi","Hu","Is","Ig","Id","Ia","Ga","It","Ja","Jv","Kl","Kn","Ks","Kk","Km","Ki","Rw","Ko","Ku","Ky","Lo","La","Lv","Ln","Lt","Lu","Lb","Mk","Mg","Ms","Ml","Mt","Gv","Mi","Mr","Mn","Ne","Nd","Se","Nb","Nn","Ny","Or","Om","Os","Ps","Fa","FaAf","Pl","Pt","PtBr","PtPt","Pa","Qu","Ro","RoMd","Rm","Rn","Ru","Sm","Sg","Sa","Gd","Sr","Sn","Ii","Sd","Si","Sk","Sl","So","St","Es","EsEs","EsMx","Su","Sw","SwCd","Sv","Tg","Ta","Tt","Te","Th","Bo","Ti","To","Tr","Tk","Uk","Ur","Ug","Uz","Vi","Vo","Cy","Fy","Wo","Xh","Yi","Yo","Zu","And","Authenticated","SuperAdmin","Owner","Public","CreateCatalog","ReadCatalog","UpdateCatalog","DeleteCatalog","CreateCustomer","ReadCustomer","UpdateCustomer","DeleteCustomer","CreateAdministrator","ReadAdministrator","UpdateAdministrator","DeleteAdministrator","CreateOrder","ReadOrder","UpdateOrder","DeleteOrder","CreatePromotion","ReadPromotion","UpdatePromotion","DeletePromotion","CreateSettings","ReadSettings","UpdateSettings","DeleteSettings","Crosssell","Upsell","Asc","Desc","Adjustment","Sale","Cancellation","Return","FEEDBACK_FRAGMENT","GET_ALL_FEEDBACKS","DELETE_FEEDBACK","dataService","modalService","notificationService","apollo","router","route","super","searchTerm","args","this","query","data","Feedbacks","skip","take","options","sort","updatedAt","valueChanges","pipe","debounceTime","takeUntil","destroy$","subscribe","filtertable","filter","value","toUpperCase","tr","document","querySelector","getElementsByTagName","i","length","j","td","innerHTML","indexOf","style","display","watchQuery","variables","items","id","dialog","title","buttons","type","label","returnValue","switchMap","response","mutate","success","entity","refresh","err","error","setPageNumber","setItemsPerPage","UPDATE_FEEDBACK","CREATE_FEEDBACK","serverConfigService","formBuilder","changeDetector","which","detailForm","group","name","email","phone","feedback","required","url","init","destroy","addNew","result","markAsPristine","markForCheck","saveChanges","dirty","formValue","input","toString","mapTo","of","datas","parseInt","patchValue","GET_FEEDBACK","__typename","createdAt","mapStream","Feedback","FeedbackUIModule","feedbackDetailBreadcrumb","resolved","map","link","requiresPermission","forChild","path","pathMatch","component","breadcrumb","resolve"],"mappings":"ypGA0DYA,EA0GAC,EA8cAC,EAkfAC,EA4RAC,EA2GAC,EAkBAC,EA8UAC,EAs5BAC,EA8wBAC,EAoOAC,EAsCAC,E,iDA/rHZ,SAAYX,GACV,EAAAY,IAAA,MACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SACA,EAAAC,UAAA,aACA,EAAAC,gBAAA,mBACA,EAAAC,eAAA,kBAPF,CAAYlB,MAAc,KA0G1B,SAAYC,GACV,EAAAkB,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,OAAA,SAHF,CAAYpB,MAAS,KA8crB,SAAYC,GAEV,EAAAohL,MAAY,KAkfxB,SAAYC,GAEV,EAAAgL,QAAA,UAEA,EAAAC,WAAA,cAJF,CAAYjL,MAAc,KA4R1B,SAAYC,GACV,EAAAiL,mBAAA,sBACA,EAAAC,iBAAA,oBACA,EAAAC,sBAAA,0BACA,EAAAC,qBAAA,0BACA,EAAAC,yBAAA,8BACA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,wBAAA,4BACA,EAAAC,+BAAA,oCACA,EAAAC,8BAAA,mCACA,EAAAC,6BAAA,kCACA,EAAAC,4BAAA,iCACA,EAAAC,aAAA,gBACA,EAAAC,qBAAA,yBACA,EAAAC,uBAAA,2BACA,EAAAC,kBAAA,qBACA,EAAAC,kBAAA,qBACA,EAAAC,sBAAA,0BACA,EAAAC,UAAA,aACA,EAAAC,mBAAA,uBACA,EAAAC,mBAAA,uBAtBF,CAAYtM,MAAgB,KA2G5B,SAAYC,GACV,EAAAsM,QAAA,UACA,EAAAC,QAAA,UACA,EAAAC,UAAA,YACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SALF,CAAY1M,MAAQ,KAkBpB,SAAYC,GAEV,EAAA0M,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,OAAA,UAEA,EAAAC,OAAA,UAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,KAAA,QAEA,EAAAC,KAAA,QAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,KAEA,EAAAC,GAAA,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","file":"x","sourcesContent":["// tslint:disable\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };\r\n\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\r\n  DateTime: any;\r\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\r\n  JSON: any;\r\n  /** The `Upload` scalar type represents a file upload. */\r\n  Upload: any;\r\n};\r\n\r\nexport type AddNoteToCustomerInput = {\r\n  id: Scalars['ID'];\r\n  note: Scalars['String'];\r\n  isPublic: Scalars['Boolean'];\r\n};\r\n\r\nexport type AddNoteToOrderInput = {\r\n  id: Scalars['ID'];\r\n  note: Scalars['String'];\r\n  isPublic: Scalars['Boolean'];\r\n};\r\n\r\nexport type Address = Node & {\r\n  __typename?: 'Address';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1: Scalars['String'];\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  country: Country;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type Adjustment = {\r\n  __typename?: 'Adjustment';\r\n  adjustmentSource: Scalars['String'];\r\n  type: AdjustmentType;\r\n  description: Scalars['String'];\r\n  amount: Scalars['Int'];\r\n};\r\n\r\nexport enum AdjustmentType {\r\n  Tax = 'TAX',\r\n  Promotion = 'PROMOTION',\r\n  Shipping = 'SHIPPING',\r\n  Refund = 'REFUND',\r\n  TaxRefund = 'TAX_REFUND',\r\n  PromotionRefund = 'PROMOTION_REFUND',\r\n  ShippingRefund = 'SHIPPING_REFUND'\r\n}\r\n\r\nexport type Administrator = Node & {\r\n  __typename?: 'Administrator';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  emailAddress: Scalars['String'];\r\n  user: User;\r\n};\r\n\r\nexport type AdministratorFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  firstName?: Maybe<StringOperators>;\r\n  lastName?: Maybe<StringOperators>;\r\n  emailAddress?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type AdministratorList = PaginatedList & {\r\n  __typename?: 'AdministratorList';\r\n  items: Array<Administrator>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type AdministratorListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<AdministratorSortParameter>;\r\n  filter?: Maybe<AdministratorFilterParameter>;\r\n};\r\n\r\nexport type AdministratorSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  firstName?: Maybe<SortOrder>;\r\n  lastName?: Maybe<SortOrder>;\r\n  emailAddress?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type Asset = Node & {\r\n  __typename?: 'Asset';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  type: AssetType;\r\n  fileSize: Scalars['Int'];\r\n  mimeType: Scalars['String'];\r\n  width: Scalars['Int'];\r\n  height: Scalars['Int'];\r\n  source: Scalars['String'];\r\n  preview: Scalars['String'];\r\n  focalPoint?: Maybe<Coordinate>;\r\n};\r\n\r\nexport type AssetFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  type?: Maybe<StringOperators>;\r\n  fileSize?: Maybe<NumberOperators>;\r\n  mimeType?: Maybe<StringOperators>;\r\n  width?: Maybe<NumberOperators>;\r\n  height?: Maybe<NumberOperators>;\r\n  source?: Maybe<StringOperators>;\r\n  preview?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type AssetList = PaginatedList & {\r\n  __typename?: 'AssetList';\r\n  items: Array<Asset>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type AssetListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<AssetSortParameter>;\r\n  filter?: Maybe<AssetFilterParameter>;\r\n};\r\n\r\nexport type AssetSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  fileSize?: Maybe<SortOrder>;\r\n  mimeType?: Maybe<SortOrder>;\r\n  width?: Maybe<SortOrder>;\r\n  height?: Maybe<SortOrder>;\r\n  source?: Maybe<SortOrder>;\r\n  preview?: Maybe<SortOrder>;\r\n};\r\n\r\nexport enum AssetType {\r\n  Image = 'IMAGE',\r\n  Video = 'VIDEO',\r\n  Binary = 'BINARY'\r\n}\r\n\r\nexport type AssignProductsToChannelInput = {\r\n  productIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n  priceFactor?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type BooleanCustomFieldConfig = CustomField & {\r\n  __typename?: 'BooleanCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type BooleanOperators = {\r\n  eq?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type BulkDiscount = {\r\n  __typename?: 'BulkDiscount';\r\n  productVariant: ProductVariant;\r\n  quantity: Scalars['Int'];\r\n  price: Scalars['Int'];\r\n};\r\n\r\nexport type BulkDiscountInput = {\r\n  quantity: Scalars['Int'];\r\n  price: Scalars['Int'];\r\n};\r\n\r\nexport type Cancellation = Node & StockMovement & {\r\n  __typename?: 'Cancellation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderLine: OrderLine;\r\n};\r\n\r\nexport type CancelOrderInput = {\r\n  /** The id of the order to be cancelled */\r\n  orderId: Scalars['ID'];\r\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\r\n  lines?: Maybe<Array<OrderLineInput>>;\r\n  reason?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Channel = Node & {\r\n  __typename?: 'Channel';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  token: Scalars['String'];\r\n  defaultTaxZone?: Maybe<Zone>;\r\n  defaultShippingZone?: Maybe<Zone>;\r\n  defaultLanguageCode: LanguageCode;\r\n  currencyCode: CurrencyCode;\r\n  pricesIncludeTax: Scalars['Boolean'];\r\n};\r\n\r\nexport type Collection = Node & {\r\n  __typename?: 'Collection';\r\n  isPrivate: Scalars['Boolean'];\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode?: Maybe<LanguageCode>;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  breadcrumbs: Array<CollectionBreadcrumb>;\r\n  position: Scalars['Int'];\r\n  description: Scalars['String'];\r\n  featuredAsset?: Maybe<Asset>;\r\n  assets: Array<Asset>;\r\n  parent?: Maybe<Collection>;\r\n  children?: Maybe<Array<Collection>>;\r\n  filters: Array<ConfigurableOperation>;\r\n  translations: Array<CollectionTranslation>;\r\n  productVariants: ProductVariantList;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type CollectionProductVariantsArgs = {\r\n  options?: Maybe<ProductVariantListOptions>;\r\n};\r\n\r\nexport type CollectionBreadcrumb = {\r\n  __typename?: 'CollectionBreadcrumb';\r\n  id: Scalars['ID'];\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n};\r\n\r\nexport type CollectionFilterParameter = {\r\n  isPrivate?: Maybe<BooleanOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  slug?: Maybe<StringOperators>;\r\n  position?: Maybe<NumberOperators>;\r\n  description?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type CollectionList = PaginatedList & {\r\n  __typename?: 'CollectionList';\r\n  items: Array<Collection>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CollectionListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<CollectionSortParameter>;\r\n  filter?: Maybe<CollectionFilterParameter>;\r\n};\r\n\r\nexport type CollectionSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  slug?: Maybe<SortOrder>;\r\n  position?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CollectionTranslation = {\r\n  __typename?: 'CollectionTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ConfigArg = {\r\n  __typename?: 'ConfigArg';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport type ConfigArgDefinition = {\r\n  __typename?: 'ConfigArgDefinition';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  config?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ConfigArgInput = {\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport type ConfigurableOperation = {\r\n  __typename?: 'ConfigurableOperation';\r\n  code: Scalars['String'];\r\n  args: Array<ConfigArg>;\r\n};\r\n\r\nexport type ConfigurableOperationDefinition = {\r\n  __typename?: 'ConfigurableOperationDefinition';\r\n  code: Scalars['String'];\r\n  args: Array<ConfigArgDefinition>;\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ConfigurableOperationInput = {\r\n  code: Scalars['String'];\r\n  arguments: Array<ConfigArgInput>;\r\n};\r\n\r\nexport type Coordinate = {\r\n  __typename?: 'Coordinate';\r\n  x: Scalars['Float'];\r\n  y: Scalars['Float'];\r\n};\r\n\r\nexport type CoordinateInput = {\r\n  x: Scalars['Float'];\r\n  y: Scalars['Float'];\r\n};\r\n\r\nexport type Country = Node & {\r\n  __typename?: 'Country';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  translations: Array<CountryTranslation>;\r\n};\r\n\r\nexport type CountryFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n};\r\n\r\nexport type CountryList = PaginatedList & {\r\n  __typename?: 'CountryList';\r\n  items: Array<Country>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CountryListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<CountrySortParameter>;\r\n  filter?: Maybe<CountryFilterParameter>;\r\n};\r\n\r\nexport type CountrySortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CountryTranslation = {\r\n  __typename?: 'CountryTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type CountryTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type CreateAddressInput = {\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1: Scalars['String'];\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  countryCode: Scalars['String'];\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateAdministratorInput = {\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  emailAddress: Scalars['String'];\r\n  password: Scalars['String'];\r\n  roleIds: Array<Scalars['ID']>;\r\n};\r\n\r\nexport type CreateAssetInput = {\r\n  file: Scalars['Upload'];\r\n};\r\n\r\nexport type CreateChannelInput = {\r\n  code: Scalars['String'];\r\n  token: Scalars['String'];\r\n  defaultLanguageCode: LanguageCode;\r\n  pricesIncludeTax: Scalars['Boolean'];\r\n  currencyCode: CurrencyCode;\r\n  defaultTaxZoneId: Scalars['ID'];\r\n  defaultShippingZoneId: Scalars['ID'];\r\n};\r\n\r\nexport type CreateCollectionInput = {\r\n  isPrivate?: Maybe<Scalars['Boolean']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  parentId?: Maybe<Scalars['ID']>;\r\n  filters: Array<ConfigurableOperationInput>;\r\n  translations: Array<CreateCollectionTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCollectionTranslationInput = {\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCountryInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<CountryTranslationInput>;\r\n  enabled: Scalars['Boolean'];\r\n};\r\n\r\nexport type CreateCustomerGroupInput = {\r\n  name: Scalars['String'];\r\n  customerIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type CreateCustomerInput = {\r\n  title?: Maybe<Scalars['String']>;\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  emailAddress: Scalars['String'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateFacetInput = {\r\n  code: Scalars['String'];\r\n  isPrivate: Scalars['Boolean'];\r\n  translations: Array<FacetTranslationInput>;\r\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateFacetValueInput = {\r\n  facetId: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  translations: Array<FacetValueTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateFacetValueWithFacetInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<FacetValueTranslationInput>;\r\n};\r\n\r\nexport type CreateGroupOptionInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionGroupTranslationInput>;\r\n};\r\n\r\nexport type CreateProductCustomFieldsInput = {\r\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\r\n  reviewRating?: Maybe<Scalars['Float']>;\r\n  reviewCount?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type CreateProductInput = {\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  translations: Array<ProductTranslationInput>;\r\n  customFields?: Maybe<CreateProductCustomFieldsInput>;\r\n};\r\n\r\nexport type CreateProductOptionGroupInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionGroupTranslationInput>;\r\n  options: Array<CreateGroupOptionInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductOptionInput = {\r\n  productOptionGroupId: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionGroupTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductVariantCustomFieldsInput = {\r\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\r\n  Unit?: Maybe<Scalars['String']>;\r\n  Sales?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type CreateProductVariantInput = {\r\n  productId: Scalars['ID'];\r\n  translations: Array<ProductVariantTranslationInput>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  sku: Scalars['String'];\r\n  price?: Maybe<Scalars['Int']>;\r\n  taxCategoryId?: Maybe<Scalars['ID']>;\r\n  optionIds?: Maybe<Array<Scalars['ID']>>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  stockOnHand?: Maybe<Scalars['Int']>;\r\n  trackInventory?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<CreateProductVariantCustomFieldsInput>;\r\n};\r\n\r\nexport type CreateProductVariantOptionInput = {\r\n  optionGroupId: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionTranslationInput>;\r\n};\r\n\r\nexport type CreatePromotionInput = {\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  startsAt?: Maybe<Scalars['DateTime']>;\r\n  endsAt?: Maybe<Scalars['DateTime']>;\r\n  couponCode?: Maybe<Scalars['String']>;\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\r\n  conditions: Array<ConfigurableOperationInput>;\r\n  actions: Array<ConfigurableOperationInput>;\r\n};\r\n\r\nexport type CreateRoleInput = {\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n  channelIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type CreateShippingMethodInput = {\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  checker: ConfigurableOperationInput;\r\n  calculator: ConfigurableOperationInput;\r\n};\r\n\r\nexport type CreateTaxCategoryInput = {\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type CreateTaxRateInput = {\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  value: Scalars['Float'];\r\n  categoryId: Scalars['ID'];\r\n  zoneId: Scalars['ID'];\r\n  customerGroupId?: Maybe<Scalars['ID']>;\r\n};\r\n\r\nexport type CreateZoneInput = {\r\n  name: Scalars['String'];\r\n  memberIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\n/**\r\n * @description\r\n * ISO 4217 currency code\r\n * \r\n * @docsCategory common\r\n */\r\nexport enum CurrencyCode {\r\n  /** United Arab Emirates dirham */\r\n  Aed = 'AED',\r\n  /** Afghan afghani */\r\n  Afn = 'AFN',\r\n  /** Albanian lek */\r\n  All = 'ALL',\r\n  /** Armenian dram */\r\n  Amd = 'AMD',\r\n  /** Netherlands Antillean guilder */\r\n  Ang = 'ANG',\r\n  /** Angolan kwanza */\r\n  Aoa = 'AOA',\r\n  /** Argentine peso */\r\n  Ars = 'ARS',\r\n  /** Australian dollar */\r\n  Aud = 'AUD',\r\n  /** Aruban florin */\r\n  Awg = 'AWG',\r\n  /** Azerbaijani manat */\r\n  Azn = 'AZN',\r\n  /** Bosnia and Herzegovina convertible mark */\r\n  Bam = 'BAM',\r\n  /** Barbados dollar */\r\n  Bbd = 'BBD',\r\n  /** Bangladeshi taka */\r\n  Bdt = 'BDT',\r\n  /** Bulgarian lev */\r\n  Bgn = 'BGN',\r\n  /** Bahraini dinar */\r\n  Bhd = 'BHD',\r\n  /** Burundian franc */\r\n  Bif = 'BIF',\r\n  /** Bermudian dollar */\r\n  Bmd = 'BMD',\r\n  /** Brunei dollar */\r\n  Bnd = 'BND',\r\n  /** Boliviano */\r\n  Bob = 'BOB',\r\n  /** Brazilian real */\r\n  Brl = 'BRL',\r\n  /** Bahamian dollar */\r\n  Bsd = 'BSD',\r\n  /** Bhutanese ngultrum */\r\n  Btn = 'BTN',\r\n  /** Botswana pula */\r\n  Bwp = 'BWP',\r\n  /** Belarusian ruble */\r\n  Byn = 'BYN',\r\n  /** Belize dollar */\r\n  Bzd = 'BZD',\r\n  /** Canadian dollar */\r\n  Cad = 'CAD',\r\n  /** Congolese franc */\r\n  Cdf = 'CDF',\r\n  /** Swiss franc */\r\n  Chf = 'CHF',\r\n  /** Chilean peso */\r\n  Clp = 'CLP',\r\n  /** Renminbi (Chinese) yuan */\r\n  Cny = 'CNY',\r\n  /** Colombian peso */\r\n  Cop = 'COP',\r\n  /** Costa Rican colon */\r\n  Crc = 'CRC',\r\n  /** Cuban convertible peso */\r\n  Cuc = 'CUC',\r\n  /** Cuban peso */\r\n  Cup = 'CUP',\r\n  /** Cape Verde escudo */\r\n  Cve = 'CVE',\r\n  /** Czech koruna */\r\n  Czk = 'CZK',\r\n  /** Djiboutian franc */\r\n  Djf = 'DJF',\r\n  /** Danish krone */\r\n  Dkk = 'DKK',\r\n  /** Dominican peso */\r\n  Dop = 'DOP',\r\n  /** Algerian dinar */\r\n  Dzd = 'DZD',\r\n  /** Egyptian pound */\r\n  Egp = 'EGP',\r\n  /** Eritrean nakfa */\r\n  Ern = 'ERN',\r\n  /** Ethiopian birr */\r\n  Etb = 'ETB',\r\n  /** Euro */\r\n  Eur = 'EUR',\r\n  /** Fiji dollar */\r\n  Fjd = 'FJD',\r\n  /** Falkland Islands pound */\r\n  Fkp = 'FKP',\r\n  /** Pound sterling */\r\n  Gbp = 'GBP',\r\n  /** Georgian lari */\r\n  Gel = 'GEL',\r\n  /** Ghanaian cedi */\r\n  Ghs = 'GHS',\r\n  /** Gibraltar pound */\r\n  Gip = 'GIP',\r\n  /** Gambian dalasi */\r\n  Gmd = 'GMD',\r\n  /** Guinean franc */\r\n  Gnf = 'GNF',\r\n  /** Guatemalan quetzal */\r\n  Gtq = 'GTQ',\r\n  /** Guyanese dollar */\r\n  Gyd = 'GYD',\r\n  /** Hong Kong dollar */\r\n  Hkd = 'HKD',\r\n  /** Honduran lempira */\r\n  Hnl = 'HNL',\r\n  /** Croatian kuna */\r\n  Hrk = 'HRK',\r\n  /** Haitian gourde */\r\n  Htg = 'HTG',\r\n  /** Hungarian forint */\r\n  Huf = 'HUF',\r\n  /** Indonesian rupiah */\r\n  Idr = 'IDR',\r\n  /** Israeli new shekel */\r\n  Ils = 'ILS',\r\n  /** Indian rupee */\r\n  Inr = 'INR',\r\n  /** Iraqi dinar */\r\n  Iqd = 'IQD',\r\n  /** Iranian rial */\r\n  Irr = 'IRR',\r\n  /** Icelandic króna */\r\n  Isk = 'ISK',\r\n  /** Jamaican dollar */\r\n  Jmd = 'JMD',\r\n  /** Jordanian dinar */\r\n  Jod = 'JOD',\r\n  /** Japanese yen */\r\n  Jpy = 'JPY',\r\n  /** Kenyan shilling */\r\n  Kes = 'KES',\r\n  /** Kyrgyzstani som */\r\n  Kgs = 'KGS',\r\n  /** Cambodian riel */\r\n  Khr = 'KHR',\r\n  /** Comoro franc */\r\n  Kmf = 'KMF',\r\n  /** North Korean won */\r\n  Kpw = 'KPW',\r\n  /** South Korean won */\r\n  Krw = 'KRW',\r\n  /** Kuwaiti dinar */\r\n  Kwd = 'KWD',\r\n  /** Cayman Islands dollar */\r\n  Kyd = 'KYD',\r\n  /** Kazakhstani tenge */\r\n  Kzt = 'KZT',\r\n  /** Lao kip */\r\n  Lak = 'LAK',\r\n  /** Lebanese pound */\r\n  Lbp = 'LBP',\r\n  /** Sri Lankan rupee */\r\n  Lkr = 'LKR',\r\n  /** Liberian dollar */\r\n  Lrd = 'LRD',\r\n  /** Lesotho loti */\r\n  Lsl = 'LSL',\r\n  /** Libyan dinar */\r\n  Lyd = 'LYD',\r\n  /** Moroccan dirham */\r\n  Mad = 'MAD',\r\n  /** Moldovan leu */\r\n  Mdl = 'MDL',\r\n  /** Malagasy ariary */\r\n  Mga = 'MGA',\r\n  /** Macedonian denar */\r\n  Mkd = 'MKD',\r\n  /** Myanmar kyat */\r\n  Mmk = 'MMK',\r\n  /** Mongolian tögrög */\r\n  Mnt = 'MNT',\r\n  /** Macanese pataca */\r\n  Mop = 'MOP',\r\n  /** Mauritanian ouguiya */\r\n  Mru = 'MRU',\r\n  /** Mauritian rupee */\r\n  Mur = 'MUR',\r\n  /** Maldivian rufiyaa */\r\n  Mvr = 'MVR',\r\n  /** Malawian kwacha */\r\n  Mwk = 'MWK',\r\n  /** Mexican peso */\r\n  Mxn = 'MXN',\r\n  /** Malaysian ringgit */\r\n  Myr = 'MYR',\r\n  /** Mozambican metical */\r\n  Mzn = 'MZN',\r\n  /** Namibian dollar */\r\n  Nad = 'NAD',\r\n  /** Nigerian naira */\r\n  Ngn = 'NGN',\r\n  /** Nicaraguan córdoba */\r\n  Nio = 'NIO',\r\n  /** Norwegian krone */\r\n  Nok = 'NOK',\r\n  /** Nepalese rupee */\r\n  Npr = 'NPR',\r\n  /** New Zealand dollar */\r\n  Nzd = 'NZD',\r\n  /** Omani rial */\r\n  Omr = 'OMR',\r\n  /** Panamanian balboa */\r\n  Pab = 'PAB',\r\n  /** Peruvian sol */\r\n  Pen = 'PEN',\r\n  /** Papua New Guinean kina */\r\n  Pgk = 'PGK',\r\n  /** Philippine peso */\r\n  Php = 'PHP',\r\n  /** Pakistani rupee */\r\n  Pkr = 'PKR',\r\n  /** Polish złoty */\r\n  Pln = 'PLN',\r\n  /** Paraguayan guaraní */\r\n  Pyg = 'PYG',\r\n  /** Qatari riyal */\r\n  Qar = 'QAR',\r\n  /** Romanian leu */\r\n  Ron = 'RON',\r\n  /** Serbian dinar */\r\n  Rsd = 'RSD',\r\n  /** Russian ruble */\r\n  Rub = 'RUB',\r\n  /** Rwandan franc */\r\n  Rwf = 'RWF',\r\n  /** Saudi riyal */\r\n  Sar = 'SAR',\r\n  /** Solomon Islands dollar */\r\n  Sbd = 'SBD',\r\n  /** Seychelles rupee */\r\n  Scr = 'SCR',\r\n  /** Sudanese pound */\r\n  Sdg = 'SDG',\r\n  /** Swedish krona/kronor */\r\n  Sek = 'SEK',\r\n  /** Singapore dollar */\r\n  Sgd = 'SGD',\r\n  /** Saint Helena pound */\r\n  Shp = 'SHP',\r\n  /** Sierra Leonean leone */\r\n  Sll = 'SLL',\r\n  /** Somali shilling */\r\n  Sos = 'SOS',\r\n  /** Surinamese dollar */\r\n  Srd = 'SRD',\r\n  /** South Sudanese pound */\r\n  Ssp = 'SSP',\r\n  /** São Tomé and Príncipe dobra */\r\n  Stn = 'STN',\r\n  /** Salvadoran colón */\r\n  Svc = 'SVC',\r\n  /** Syrian pound */\r\n  Syp = 'SYP',\r\n  /** Swazi lilangeni */\r\n  Szl = 'SZL',\r\n  /** Thai baht */\r\n  Thb = 'THB',\r\n  /** Tajikistani somoni */\r\n  Tjs = 'TJS',\r\n  /** Turkmenistan manat */\r\n  Tmt = 'TMT',\r\n  /** Tunisian dinar */\r\n  Tnd = 'TND',\r\n  /** Tongan paʻanga */\r\n  Top = 'TOP',\r\n  /** Turkish lira */\r\n  Try = 'TRY',\r\n  /** Trinidad and Tobago dollar */\r\n  Ttd = 'TTD',\r\n  /** New Taiwan dollar */\r\n  Twd = 'TWD',\r\n  /** Tanzanian shilling */\r\n  Tzs = 'TZS',\r\n  /** Ukrainian hryvnia */\r\n  Uah = 'UAH',\r\n  /** Ugandan shilling */\r\n  Ugx = 'UGX',\r\n  /** United States dollar */\r\n  Usd = 'USD',\r\n  /** Uruguayan peso */\r\n  Uyu = 'UYU',\r\n  /** Uzbekistan som */\r\n  Uzs = 'UZS',\r\n  /** Venezuelan bolívar soberano */\r\n  Ves = 'VES',\r\n  /** Vietnamese đồng */\r\n  Vnd = 'VND',\r\n  /** Vanuatu vatu */\r\n  Vuv = 'VUV',\r\n  /** Samoan tala */\r\n  Wst = 'WST',\r\n  /** CFA franc BEAC */\r\n  Xaf = 'XAF',\r\n  /** East Caribbean dollar */\r\n  Xcd = 'XCD',\r\n  /** CFA franc BCEAO */\r\n  Xof = 'XOF',\r\n  /** CFP franc (franc Pacifique) */\r\n  Xpf = 'XPF',\r\n  /** Yemeni rial */\r\n  Yer = 'YER',\r\n  /** South African rand */\r\n  Zar = 'ZAR',\r\n  /** Zambian kwacha */\r\n  Zmw = 'ZMW',\r\n  /** Zimbabwean dollar */\r\n  Zwl = 'ZWL'\r\n}\r\n\r\nexport type CurrentUser = {\r\n  __typename?: 'CurrentUser';\r\n  id: Scalars['ID'];\r\n  identifier: Scalars['String'];\r\n  channels: Array<CurrentUserChannel>;\r\n};\r\n\r\nexport type CurrentUserChannel = {\r\n  __typename?: 'CurrentUserChannel';\r\n  id: Scalars['ID'];\r\n  token: Scalars['String'];\r\n  code: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n};\r\n\r\nexport type Customer = Node & {\r\n  __typename?: 'Customer';\r\n  groups: Array<CustomerGroup>;\r\n  history: HistoryEntryList;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  title?: Maybe<Scalars['String']>;\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  emailAddress: Scalars['String'];\r\n  addresses?: Maybe<Array<Address>>;\r\n  orders: OrderList;\r\n  user?: Maybe<User>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type CustomerHistoryArgs = {\r\n  options?: Maybe<HistoryEntryListOptions>;\r\n};\r\n\r\n\r\nexport type CustomerOrdersArgs = {\r\n  options?: Maybe<OrderListOptions>;\r\n};\r\n\r\nexport type CustomerFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  title?: Maybe<StringOperators>;\r\n  firstName?: Maybe<StringOperators>;\r\n  lastName?: Maybe<StringOperators>;\r\n  phoneNumber?: Maybe<StringOperators>;\r\n  emailAddress?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type CustomerGroup = Node & {\r\n  __typename?: 'CustomerGroup';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  customers: CustomerList;\r\n};\r\n\r\n\r\nexport type CustomerGroupCustomersArgs = {\r\n  options?: Maybe<CustomerListOptions>;\r\n};\r\n\r\nexport type CustomerGroupFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type CustomerGroupList = PaginatedList & {\r\n  __typename?: 'CustomerGroupList';\r\n  items: Array<CustomerGroup>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CustomerGroupListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<CustomerGroupSortParameter>;\r\n  filter?: Maybe<CustomerGroupFilterParameter>;\r\n};\r\n\r\nexport type CustomerGroupSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CustomerList = PaginatedList & {\r\n  __typename?: 'CustomerList';\r\n  items: Array<Customer>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CustomerListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<CustomerSortParameter>;\r\n  filter?: Maybe<CustomerFilterParameter>;\r\n};\r\n\r\nexport type CustomerSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  title?: Maybe<SortOrder>;\r\n  firstName?: Maybe<SortOrder>;\r\n  lastName?: Maybe<SortOrder>;\r\n  phoneNumber?: Maybe<SortOrder>;\r\n  emailAddress?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CustomField = {\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig;\r\n\r\nexport type CustomFields = {\r\n  __typename?: 'CustomFields';\r\n  Address: Array<CustomFieldConfig>;\r\n  Collection: Array<CustomFieldConfig>;\r\n  Customer: Array<CustomFieldConfig>;\r\n  Facet: Array<CustomFieldConfig>;\r\n  FacetValue: Array<CustomFieldConfig>;\r\n  GlobalSettings: Array<CustomFieldConfig>;\r\n  Order: Array<CustomFieldConfig>;\r\n  OrderLine: Array<CustomFieldConfig>;\r\n  Product: Array<CustomFieldConfig>;\r\n  ProductOption: Array<CustomFieldConfig>;\r\n  ProductOptionGroup: Array<CustomFieldConfig>;\r\n  ProductVariant: Array<CustomFieldConfig>;\r\n  User: Array<CustomFieldConfig>;\r\n};\r\n\r\nexport type DateOperators = {\r\n  eq?: Maybe<Scalars['DateTime']>;\r\n  before?: Maybe<Scalars['DateTime']>;\r\n  after?: Maybe<Scalars['DateTime']>;\r\n  between?: Maybe<DateRange>;\r\n};\r\n\r\nexport type DateRange = {\r\n  start: Scalars['DateTime'];\r\n  end: Scalars['DateTime'];\r\n};\r\n\r\n\r\n/**\r\n * Expects the same validation formats as the <input type=\"datetime-local\"> HTML element.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\r\n */\r\nexport type DateTimeCustomFieldConfig = CustomField & {\r\n  __typename?: 'DateTimeCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  min?: Maybe<Scalars['String']>;\r\n  max?: Maybe<Scalars['String']>;\r\n  step?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type DeletionResponse = {\r\n  __typename?: 'DeletionResponse';\r\n  result: DeletionResult;\r\n  message?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport enum DeletionResult {\r\n  /** The entity was successfully deleted */\r\n  Deleted = 'DELETED',\r\n  /** Deletion did not take place, reason given in message */\r\n  NotDeleted = 'NOT_DELETED'\r\n}\r\n\r\nexport type Email = Node & {\r\n  __typename?: 'Email';\r\n  id: Scalars['ID'];\r\n  email: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n};\r\n\r\nexport type EmailAddInput = {\r\n  email: Scalars['String'];\r\n};\r\n\r\nexport type EmailFilterParameter = {\r\n  email?: Maybe<StringOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n};\r\n\r\nexport type EmailList = PaginatedList & {\r\n  __typename?: 'EmailList';\r\n  items: Array<Email>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type EmailListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<EmailSortParameter>;\r\n  filter?: Maybe<EmailFilterParameter>;\r\n};\r\n\r\nexport type EmailSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  email?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type EmailUpdateInput = {\r\n  id: Scalars['ID'];\r\n  email: Scalars['String'];\r\n};\r\n\r\nexport type Facet = Node & {\r\n  __typename?: 'Facet';\r\n  isPrivate: Scalars['Boolean'];\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  code: Scalars['String'];\r\n  values: Array<FacetValue>;\r\n  translations: Array<FacetTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type FacetFilterParameter = {\r\n  isPrivate?: Maybe<BooleanOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  code?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type FacetList = PaginatedList & {\r\n  __typename?: 'FacetList';\r\n  items: Array<Facet>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type FacetListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<FacetSortParameter>;\r\n  filter?: Maybe<FacetFilterParameter>;\r\n};\r\n\r\nexport type FacetSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type FacetTranslation = {\r\n  __typename?: 'FacetTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type FacetTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type FacetValue = Node & {\r\n  __typename?: 'FacetValue';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  facet: Facet;\r\n  name: Scalars['String'];\r\n  code: Scalars['String'];\r\n  translations: Array<FacetValueTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/**\r\n * Which FacetValues are present in the products returned\r\n * by the search, and in what quantity.\r\n */\r\nexport type FacetValueResult = {\r\n  __typename?: 'FacetValueResult';\r\n  facetValue: FacetValue;\r\n  count: Scalars['Int'];\r\n};\r\n\r\nexport type FacetValueTranslation = {\r\n  __typename?: 'FacetValueTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type FacetValueTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type Feedback = Node & {\r\n  __typename?: 'Feedback';\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  email?: Maybe<Scalars['String']>;\r\n  phone?: Maybe<Scalars['String']>;\r\n  feedback: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n};\r\n\r\nexport type FeedbackAddInput = {\r\n  name?: Maybe<Scalars['String']>;\r\n  email?: Maybe<Scalars['String']>;\r\n  phone?: Maybe<Scalars['String']>;\r\n  feedback: Scalars['String'];\r\n};\r\n\r\nexport type FeedbackFilterParameter = {\r\n  name?: Maybe<StringOperators>;\r\n  email?: Maybe<StringOperators>;\r\n  phone?: Maybe<StringOperators>;\r\n  feedback?: Maybe<StringOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n};\r\n\r\nexport type FeedbackList = PaginatedList & {\r\n  __typename?: 'FeedbackList';\r\n  items: Array<Feedback>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type FeedbackListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<FeedbackSortParameter>;\r\n  filter?: Maybe<FeedbackFilterParameter>;\r\n};\r\n\r\nexport type FeedbackSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  email?: Maybe<SortOrder>;\r\n  phone?: Maybe<SortOrder>;\r\n  feedback?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type FeedbackUpdateInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  email?: Maybe<Scalars['String']>;\r\n  phone?: Maybe<Scalars['String']>;\r\n  feedback: Scalars['String'];\r\n};\r\n\r\nexport type FloatCustomFieldConfig = CustomField & {\r\n  __typename?: 'FloatCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  min?: Maybe<Scalars['Float']>;\r\n  max?: Maybe<Scalars['Float']>;\r\n  step?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type Fulfillment = Node & {\r\n  __typename?: 'Fulfillment';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  orderItems: Array<OrderItem>;\r\n  method: Scalars['String'];\r\n  trackingCode?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type FulfillOrderInput = {\r\n  lines: Array<OrderLineInput>;\r\n  method: Scalars['String'];\r\n  trackingCode?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type GlobalSettings = {\r\n  __typename?: 'GlobalSettings';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  availableLanguages: Array<LanguageCode>;\r\n  trackInventory: Scalars['Boolean'];\r\n  serverConfig: ServerConfig;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type HistoryEntry = Node & {\r\n  __typename?: 'HistoryEntry';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  isPublic: Scalars['Boolean'];\r\n  type: HistoryEntryType;\r\n  administrator?: Maybe<Administrator>;\r\n  data: Scalars['JSON'];\r\n};\r\n\r\nexport type HistoryEntryFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  isPublic?: Maybe<BooleanOperators>;\r\n  type?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type HistoryEntryList = PaginatedList & {\r\n  __typename?: 'HistoryEntryList';\r\n  items: Array<HistoryEntry>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type HistoryEntryListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<HistoryEntrySortParameter>;\r\n  filter?: Maybe<HistoryEntryFilterParameter>;\r\n};\r\n\r\nexport type HistoryEntrySortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n};\r\n\r\nexport enum HistoryEntryType {\r\n  CustomerRegistered = 'CUSTOMER_REGISTERED',\r\n  CustomerVerified = 'CUSTOMER_VERIFIED',\r\n  CustomerDetailUpdated = 'CUSTOMER_DETAIL_UPDATED',\r\n  CustomerAddedToGroup = 'CUSTOMER_ADDED_TO_GROUP',\r\n  CustomerRemovedFromGroup = 'CUSTOMER_REMOVED_FROM_GROUP',\r\n  CustomerAddressCreated = 'CUSTOMER_ADDRESS_CREATED',\r\n  CustomerAddressUpdated = 'CUSTOMER_ADDRESS_UPDATED',\r\n  CustomerAddressDeleted = 'CUSTOMER_ADDRESS_DELETED',\r\n  CustomerPasswordUpdated = 'CUSTOMER_PASSWORD_UPDATED',\r\n  CustomerPasswordResetRequested = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\r\n  CustomerPasswordResetVerified = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\r\n  CustomerEmailUpdateRequested = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\r\n  CustomerEmailUpdateVerified = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\r\n  CustomerNote = 'CUSTOMER_NOTE',\r\n  OrderStateTransition = 'ORDER_STATE_TRANSITION',\r\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\r\n  OrderFullfillment = 'ORDER_FULLFILLMENT',\r\n  OrderCancellation = 'ORDER_CANCELLATION',\r\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\r\n  OrderNote = 'ORDER_NOTE',\r\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\r\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED'\r\n}\r\n\r\nexport type ImportInfo = {\r\n  __typename?: 'ImportInfo';\r\n  errors?: Maybe<Array<Scalars['String']>>;\r\n  processed: Scalars['Int'];\r\n  imported: Scalars['Int'];\r\n};\r\n\r\nexport type IntCustomFieldConfig = CustomField & {\r\n  __typename?: 'IntCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  min?: Maybe<Scalars['Int']>;\r\n  max?: Maybe<Scalars['Int']>;\r\n  step?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Job = Node & {\r\n  __typename?: 'Job';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  startedAt?: Maybe<Scalars['DateTime']>;\r\n  settledAt?: Maybe<Scalars['DateTime']>;\r\n  queueName: Scalars['String'];\r\n  state: JobState;\r\n  progress: Scalars['Float'];\r\n  data?: Maybe<Scalars['JSON']>;\r\n  result?: Maybe<Scalars['JSON']>;\r\n  error?: Maybe<Scalars['JSON']>;\r\n  isSettled: Scalars['Boolean'];\r\n  duration: Scalars['Int'];\r\n};\r\n\r\nexport type JobFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  startedAt?: Maybe<DateOperators>;\r\n  settledAt?: Maybe<DateOperators>;\r\n  queueName?: Maybe<StringOperators>;\r\n  state?: Maybe<StringOperators>;\r\n  progress?: Maybe<NumberOperators>;\r\n  isSettled?: Maybe<BooleanOperators>;\r\n  duration?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type JobList = PaginatedList & {\r\n  __typename?: 'JobList';\r\n  items: Array<Job>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type JobListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<JobSortParameter>;\r\n  filter?: Maybe<JobFilterParameter>;\r\n};\r\n\r\nexport type JobQueue = {\r\n  __typename?: 'JobQueue';\r\n  name: Scalars['String'];\r\n  running: Scalars['Boolean'];\r\n};\r\n\r\nexport type JobSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  startedAt?: Maybe<SortOrder>;\r\n  settledAt?: Maybe<SortOrder>;\r\n  queueName?: Maybe<SortOrder>;\r\n  progress?: Maybe<SortOrder>;\r\n  duration?: Maybe<SortOrder>;\r\n};\r\n\r\n/**\r\n * @description\r\n * The state of a Job in the JobQueue\r\n * \r\n * @docsCategory common\r\n */\r\nexport enum JobState {\r\n  Pending = 'PENDING',\r\n  Running = 'RUNNING',\r\n  Completed = 'COMPLETED',\r\n  Retrying = 'RETRYING',\r\n  Failed = 'FAILED'\r\n}\r\n\r\n\r\n/**\r\n * @description\r\n * Languages in the form of a ISO 639-1 language code with optional\r\n * region or script modifier (e.g. de_AT). The selection available is based\r\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\r\n * and includes the major spoken languages of the world and any widely-used variants.\r\n * \r\n * @docsCategory common\r\n */\r\nexport enum LanguageCode {\r\n  /** Afrikaans */\r\n  Af = 'af',\r\n  /** Akan */\r\n  Ak = 'ak',\r\n  /** Albanian */\r\n  Sq = 'sq',\r\n  /** Amharic */\r\n  Am = 'am',\r\n  /** Arabic */\r\n  Ar = 'ar',\r\n  /** Armenian */\r\n  Hy = 'hy',\r\n  /** Assamese */\r\n  As = 'as',\r\n  /** Azerbaijani */\r\n  Az = 'az',\r\n  /** Bambara */\r\n  Bm = 'bm',\r\n  /** Bangla */\r\n  Bn = 'bn',\r\n  /** Basque */\r\n  Eu = 'eu',\r\n  /** Belarusian */\r\n  Be = 'be',\r\n  /** Bosnian */\r\n  Bs = 'bs',\r\n  /** Breton */\r\n  Br = 'br',\r\n  /** Bulgarian */\r\n  Bg = 'bg',\r\n  /** Burmese */\r\n  My = 'my',\r\n  /** Catalan */\r\n  Ca = 'ca',\r\n  /** Chechen */\r\n  Ce = 'ce',\r\n  /** Chinese */\r\n  Zh = 'zh',\r\n  /** Simplified Chinese */\r\n  ZhHans = 'zh_Hans',\r\n  /** Traditional Chinese */\r\n  ZhHant = 'zh_Hant',\r\n  /** Church Slavic */\r\n  Cu = 'cu',\r\n  /** Cornish */\r\n  Kw = 'kw',\r\n  /** Corsican */\r\n  Co = 'co',\r\n  /** Croatian */\r\n  Hr = 'hr',\r\n  /** Czech */\r\n  Cs = 'cs',\r\n  /** Danish */\r\n  Da = 'da',\r\n  /** Dutch */\r\n  Nl = 'nl',\r\n  /** Flemish */\r\n  NlBe = 'nl_BE',\r\n  /** Dzongkha */\r\n  Dz = 'dz',\r\n  /** English */\r\n  En = 'en',\r\n  /** Australian English */\r\n  EnAu = 'en_AU',\r\n  /** Canadian English */\r\n  EnCa = 'en_CA',\r\n  /** British English */\r\n  EnGb = 'en_GB',\r\n  /** American English */\r\n  EnUs = 'en_US',\r\n  /** Esperanto */\r\n  Eo = 'eo',\r\n  /** Estonian */\r\n  Et = 'et',\r\n  /** Ewe */\r\n  Ee = 'ee',\r\n  /** Faroese */\r\n  Fo = 'fo',\r\n  /** Finnish */\r\n  Fi = 'fi',\r\n  /** French */\r\n  Fr = 'fr',\r\n  /** Canadian French */\r\n  FrCa = 'fr_CA',\r\n  /** Swiss French */\r\n  FrCh = 'fr_CH',\r\n  /** Fulah */\r\n  Ff = 'ff',\r\n  /** Galician */\r\n  Gl = 'gl',\r\n  /** Ganda */\r\n  Lg = 'lg',\r\n  /** Georgian */\r\n  Ka = 'ka',\r\n  /** German */\r\n  De = 'de',\r\n  /** Austrian German */\r\n  DeAt = 'de_AT',\r\n  /** Swiss High German */\r\n  DeCh = 'de_CH',\r\n  /** Greek */\r\n  El = 'el',\r\n  /** Gujarati */\r\n  Gu = 'gu',\r\n  /** Haitian Creole */\r\n  Ht = 'ht',\r\n  /** Hausa */\r\n  Ha = 'ha',\r\n  /** Hebrew */\r\n  He = 'he',\r\n  /** Hindi */\r\n  Hi = 'hi',\r\n  /** Hungarian */\r\n  Hu = 'hu',\r\n  /** Icelandic */\r\n  Is = 'is',\r\n  /** Igbo */\r\n  Ig = 'ig',\r\n  /** Indonesian */\r\n  Id = 'id',\r\n  /** Interlingua */\r\n  Ia = 'ia',\r\n  /** Irish */\r\n  Ga = 'ga',\r\n  /** Italian */\r\n  It = 'it',\r\n  /** Japanese */\r\n  Ja = 'ja',\r\n  /** Javanese */\r\n  Jv = 'jv',\r\n  /** Kalaallisut */\r\n  Kl = 'kl',\r\n  /** Kannada */\r\n  Kn = 'kn',\r\n  /** Kashmiri */\r\n  Ks = 'ks',\r\n  /** Kazakh */\r\n  Kk = 'kk',\r\n  /** Khmer */\r\n  Km = 'km',\r\n  /** Kikuyu */\r\n  Ki = 'ki',\r\n  /** Kinyarwanda */\r\n  Rw = 'rw',\r\n  /** Korean */\r\n  Ko = 'ko',\r\n  /** Kurdish */\r\n  Ku = 'ku',\r\n  /** Kyrgyz */\r\n  Ky = 'ky',\r\n  /** Lao */\r\n  Lo = 'lo',\r\n  /** Latin */\r\n  La = 'la',\r\n  /** Latvian */\r\n  Lv = 'lv',\r\n  /** Lingala */\r\n  Ln = 'ln',\r\n  /** Lithuanian */\r\n  Lt = 'lt',\r\n  /** Luba-Katanga */\r\n  Lu = 'lu',\r\n  /** Luxembourgish */\r\n  Lb = 'lb',\r\n  /** Macedonian */\r\n  Mk = 'mk',\r\n  /** Malagasy */\r\n  Mg = 'mg',\r\n  /** Malay */\r\n  Ms = 'ms',\r\n  /** Malayalam */\r\n  Ml = 'ml',\r\n  /** Maltese */\r\n  Mt = 'mt',\r\n  /** Manx */\r\n  Gv = 'gv',\r\n  /** Maori */\r\n  Mi = 'mi',\r\n  /** Marathi */\r\n  Mr = 'mr',\r\n  /** Mongolian */\r\n  Mn = 'mn',\r\n  /** Nepali */\r\n  Ne = 'ne',\r\n  /** North Ndebele */\r\n  Nd = 'nd',\r\n  /** Northern Sami */\r\n  Se = 'se',\r\n  /** Norwegian Bokmål */\r\n  Nb = 'nb',\r\n  /** Norwegian Nynorsk */\r\n  Nn = 'nn',\r\n  /** Nyanja */\r\n  Ny = 'ny',\r\n  /** Odia */\r\n  Or = 'or',\r\n  /** Oromo */\r\n  Om = 'om',\r\n  /** Ossetic */\r\n  Os = 'os',\r\n  /** Pashto */\r\n  Ps = 'ps',\r\n  /** Persian */\r\n  Fa = 'fa',\r\n  /** Dari */\r\n  FaAf = 'fa_AF',\r\n  /** Polish */\r\n  Pl = 'pl',\r\n  /** Portuguese */\r\n  Pt = 'pt',\r\n  /** Brazilian Portuguese */\r\n  PtBr = 'pt_BR',\r\n  /** European Portuguese */\r\n  PtPt = 'pt_PT',\r\n  /** Punjabi */\r\n  Pa = 'pa',\r\n  /** Quechua */\r\n  Qu = 'qu',\r\n  /** Romanian */\r\n  Ro = 'ro',\r\n  /** Moldavian */\r\n  RoMd = 'ro_MD',\r\n  /** Romansh */\r\n  Rm = 'rm',\r\n  /** Rundi */\r\n  Rn = 'rn',\r\n  /** Russian */\r\n  Ru = 'ru',\r\n  /** Samoan */\r\n  Sm = 'sm',\r\n  /** Sango */\r\n  Sg = 'sg',\r\n  /** Sanskrit */\r\n  Sa = 'sa',\r\n  /** Scottish Gaelic */\r\n  Gd = 'gd',\r\n  /** Serbian */\r\n  Sr = 'sr',\r\n  /** Shona */\r\n  Sn = 'sn',\r\n  /** Sichuan Yi */\r\n  Ii = 'ii',\r\n  /** Sindhi */\r\n  Sd = 'sd',\r\n  /** Sinhala */\r\n  Si = 'si',\r\n  /** Slovak */\r\n  Sk = 'sk',\r\n  /** Slovenian */\r\n  Sl = 'sl',\r\n  /** Somali */\r\n  So = 'so',\r\n  /** Southern Sotho */\r\n  St = 'st',\r\n  /** Spanish */\r\n  Es = 'es',\r\n  /** European Spanish */\r\n  EsEs = 'es_ES',\r\n  /** Mexican Spanish */\r\n  EsMx = 'es_MX',\r\n  /** Sundanese */\r\n  Su = 'su',\r\n  /** Swahili */\r\n  Sw = 'sw',\r\n  /** Congo Swahili */\r\n  SwCd = 'sw_CD',\r\n  /** Swedish */\r\n  Sv = 'sv',\r\n  /** Tajik */\r\n  Tg = 'tg',\r\n  /** Tamil */\r\n  Ta = 'ta',\r\n  /** Tatar */\r\n  Tt = 'tt',\r\n  /** Telugu */\r\n  Te = 'te',\r\n  /** Thai */\r\n  Th = 'th',\r\n  /** Tibetan */\r\n  Bo = 'bo',\r\n  /** Tigrinya */\r\n  Ti = 'ti',\r\n  /** Tongan */\r\n  To = 'to',\r\n  /** Turkish */\r\n  Tr = 'tr',\r\n  /** Turkmen */\r\n  Tk = 'tk',\r\n  /** Ukrainian */\r\n  Uk = 'uk',\r\n  /** Urdu */\r\n  Ur = 'ur',\r\n  /** Uyghur */\r\n  Ug = 'ug',\r\n  /** Uzbek */\r\n  Uz = 'uz',\r\n  /** Vietnamese */\r\n  Vi = 'vi',\r\n  /** Volapük */\r\n  Vo = 'vo',\r\n  /** Welsh */\r\n  Cy = 'cy',\r\n  /** Western Frisian */\r\n  Fy = 'fy',\r\n  /** Wolof */\r\n  Wo = 'wo',\r\n  /** Xhosa */\r\n  Xh = 'xh',\r\n  /** Yiddish */\r\n  Yi = 'yi',\r\n  /** Yoruba */\r\n  Yo = 'yo',\r\n  /** Zulu */\r\n  Zu = 'zu'\r\n}\r\n\r\nexport type LocaleStringCustomFieldConfig = CustomField & {\r\n  __typename?: 'LocaleStringCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  pattern?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type LocalizedString = {\r\n  __typename?: 'LocalizedString';\r\n  languageCode: LanguageCode;\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport enum LogicalOperator {\r\n  And = 'AND',\r\n  Or = 'OR'\r\n}\r\n\r\nexport type LoginResult = {\r\n  __typename?: 'LoginResult';\r\n  user: CurrentUser;\r\n};\r\n\r\nexport type MoveCollectionInput = {\r\n  collectionId: Scalars['ID'];\r\n  parentId: Scalars['ID'];\r\n  index: Scalars['Int'];\r\n};\r\n\r\nexport type Mutation = {\r\n  __typename?: 'Mutation';\r\n  /** Create a new Administrator */\r\n  createAdministrator: Administrator;\r\n  /** Update an existing Administrator */\r\n  updateAdministrator: Administrator;\r\n  /** Assign a Role to an Administrator */\r\n  assignRoleToAdministrator: Administrator;\r\n  /** Create a new Asset */\r\n  createAssets: Array<Asset>;\r\n  /** Update an existing Asset */\r\n  updateAsset: Asset;\r\n  /** Delete an Asset */\r\n  deleteAsset: DeletionResponse;\r\n  login: LoginResult;\r\n  logout: Scalars['Boolean'];\r\n  /** Create a new Channel */\r\n  createChannel: Channel;\r\n  /** Update an existing Channel */\r\n  updateChannel: Channel;\r\n  /** Delete a Channel */\r\n  deleteChannel: DeletionResponse;\r\n  /** Create a new Collection */\r\n  createCollection: Collection;\r\n  /** Update an existing Collection */\r\n  updateCollection: Collection;\r\n  /** Delete a Collection and all of its descendants */\r\n  deleteCollection: DeletionResponse;\r\n  /** Move a Collection to a different parent or index */\r\n  moveCollection: Collection;\r\n  /** Create a new Country */\r\n  createCountry: Country;\r\n  /** Update an existing Country */\r\n  updateCountry: Country;\r\n  /** Delete a Country */\r\n  deleteCountry: DeletionResponse;\r\n  /** Create a new CustomerGroup */\r\n  createCustomerGroup: CustomerGroup;\r\n  /** Update an existing CustomerGroup */\r\n  updateCustomerGroup: CustomerGroup;\r\n  /** Delete a CustomerGroup */\r\n  deleteCustomerGroup: DeletionResponse;\r\n  /** Add Customers to a CustomerGroup */\r\n  addCustomersToGroup: CustomerGroup;\r\n  /** Remove Customers from a CustomerGroup */\r\n  removeCustomersFromGroup: CustomerGroup;\r\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\r\n  createCustomer: Customer;\r\n  /** Update an existing Customer */\r\n  updateCustomer: Customer;\r\n  /** Delete a Customer */\r\n  deleteCustomer: DeletionResponse;\r\n  /** Create a new Address and associate it with the Customer specified by customerId */\r\n  createCustomerAddress: Address;\r\n  /** Update an existing Address */\r\n  updateCustomerAddress: Address;\r\n  /** Update an existing Address */\r\n  deleteCustomerAddress: Scalars['Boolean'];\r\n  addNoteToCustomer: Customer;\r\n  updateCustomerNote: HistoryEntry;\r\n  deleteCustomerNote: DeletionResponse;\r\n  /** Create a new Facet */\r\n  createFacet: Facet;\r\n  /** Update an existing Facet */\r\n  updateFacet: Facet;\r\n  /** Delete an existing Facet */\r\n  deleteFacet: DeletionResponse;\r\n  /** Create one or more FacetValues */\r\n  createFacetValues: Array<FacetValue>;\r\n  /** Update one or more FacetValues */\r\n  updateFacetValues: Array<FacetValue>;\r\n  /** Delete one or more FacetValues */\r\n  deleteFacetValues: Array<DeletionResponse>;\r\n  updateGlobalSettings: GlobalSettings;\r\n  importProducts?: Maybe<ImportInfo>;\r\n  /** Remove all settled jobs in the given queues olfer than the given date. Returns the number of jobs deleted. */\r\n  removeSettledJobs: Scalars['Int'];\r\n  settlePayment: Payment;\r\n  fulfillOrder: Fulfillment;\r\n  cancelOrder: Order;\r\n  refundOrder: Refund;\r\n  settleRefund: Refund;\r\n  addNoteToOrder: Order;\r\n  updateOrderNote: HistoryEntry;\r\n  deleteOrderNote: DeletionResponse;\r\n  /** Update an existing PaymentMethod */\r\n  updatePaymentMethod: PaymentMethod;\r\n  /** Create a new ProductOptionGroup */\r\n  createProductOptionGroup: ProductOptionGroup;\r\n  /** Update an existing ProductOptionGroup */\r\n  updateProductOptionGroup: ProductOptionGroup;\r\n  /** Create a new ProductOption within a ProductOptionGroup */\r\n  createProductOption: ProductOption;\r\n  /** Create a new ProductOption within a ProductOptionGroup */\r\n  updateProductOption: ProductOption;\r\n  reindex: Job;\r\n  /** Create a new Product */\r\n  createProduct: Product;\r\n  /** Update an existing Product */\r\n  updateProduct: Product;\r\n  /** Delete a Product */\r\n  deleteProduct: DeletionResponse;\r\n  /** Add an OptionGroup to a Product */\r\n  addOptionGroupToProduct: Product;\r\n  /** Remove an OptionGroup from a Product */\r\n  removeOptionGroupFromProduct: Product;\r\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\r\n  createProductVariants: Array<Maybe<ProductVariant>>;\r\n  /** Update existing ProductVariants */\r\n  updateProductVariants: Array<Maybe<ProductVariant>>;\r\n  /** Delete a ProductVariant */\r\n  deleteProductVariant: DeletionResponse;\r\n  /** Assigns Products to the specified Channel */\r\n  assignProductsToChannel: Array<Product>;\r\n  /** Removes Products from the specified Channel */\r\n  removeProductsFromChannel: Array<Product>;\r\n  createPromotion: Promotion;\r\n  updatePromotion: Promotion;\r\n  deletePromotion: DeletionResponse;\r\n  /** Create a new Role */\r\n  createRole: Role;\r\n  /** Update an existing Role */\r\n  updateRole: Role;\r\n  /** Delete an existing Role */\r\n  deleteRole: DeletionResponse;\r\n  /** Create a new ShippingMethod */\r\n  createShippingMethod: ShippingMethod;\r\n  /** Update an existing ShippingMethod */\r\n  updateShippingMethod: ShippingMethod;\r\n  /** Delete a ShippingMethod */\r\n  deleteShippingMethod: DeletionResponse;\r\n  /** Create a new TaxCategory */\r\n  createTaxCategory: TaxCategory;\r\n  /** Update an existing TaxCategory */\r\n  updateTaxCategory: TaxCategory;\r\n  /** Deletes a TaxCategory */\r\n  deleteTaxCategory: DeletionResponse;\r\n  /** Create a new TaxRate */\r\n  createTaxRate: TaxRate;\r\n  /** Update an existing TaxRate */\r\n  updateTaxRate: TaxRate;\r\n  /** Delete a TaxRate */\r\n  deleteTaxRate: DeletionResponse;\r\n  /** Create a new Zone */\r\n  createZone: Zone;\r\n  /** Update an existing Zone */\r\n  updateZone: Zone;\r\n  /** Delete a Zone */\r\n  deleteZone: DeletionResponse;\r\n  /** Add members to a Zone */\r\n  addMembersToZone: Zone;\r\n  /** Remove members from a Zone */\r\n  removeMembersFromZone: Zone;\r\n  updateCrossSellingProducts: Scalars['Boolean'];\r\n  updateUpSellingProducts: Scalars['Boolean'];\r\n  updateProductVariantBulkDiscounts: Scalars['Boolean'];\r\n  updateProductVariantBulkDiscountsBySku: Scalars['Boolean'];\r\n  updateProductReview: ProductReview;\r\n  approveProductReview?: Maybe<ProductReview>;\r\n  rejectProductReview?: Maybe<ProductReview>;\r\n  addFeedback: Feedback;\r\n  updateFeedback: Feedback;\r\n  deleteFeedback: Feedback;\r\n  deleteAllFeedbacks: Scalars['Boolean'];\r\n  addSubscriptionEmail: Array<Maybe<Email>>;\r\n  updateSubscriptionEmail: Array<Maybe<Email>>;\r\n  deleteSubscriptionEmail: Array<Maybe<Email>>;\r\n  deleteAllSubscriptionEmails: Scalars['Boolean'];\r\n  addSubscriptionPhone: Array<Maybe<Phone>>;\r\n  updateSubscriptionPhone: Array<Maybe<Phone>>;\r\n  deleteSubscriptionPhone: Array<Maybe<Phone>>;\r\n  deleteAllSubscriptionPhones: Scalars['Boolean'];\r\n};\r\n\r\n\r\nexport type MutationCreateAdministratorArgs = {\r\n  input: CreateAdministratorInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateAdministratorArgs = {\r\n  input: UpdateAdministratorInput;\r\n};\r\n\r\n\r\nexport type MutationAssignRoleToAdministratorArgs = {\r\n  administratorId: Scalars['ID'];\r\n  roleId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateAssetsArgs = {\r\n  input: Array<CreateAssetInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateAssetArgs = {\r\n  input: UpdateAssetInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteAssetArgs = {\r\n  id: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationLoginArgs = {\r\n  username: Scalars['String'];\r\n  password: Scalars['String'];\r\n  rememberMe?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationCreateChannelArgs = {\r\n  input: CreateChannelInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateChannelArgs = {\r\n  input: UpdateChannelInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteChannelArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateCollectionArgs = {\r\n  input: CreateCollectionInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCollectionArgs = {\r\n  input: UpdateCollectionInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteCollectionArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationMoveCollectionArgs = {\r\n  input: MoveCollectionInput;\r\n};\r\n\r\n\r\nexport type MutationCreateCountryArgs = {\r\n  input: CreateCountryInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCountryArgs = {\r\n  input: UpdateCountryInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteCountryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerGroupArgs = {\r\n  input: CreateCustomerGroupInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerGroupArgs = {\r\n  input: UpdateCustomerGroupInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerGroupArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAddCustomersToGroupArgs = {\r\n  customerGroupId: Scalars['ID'];\r\n  customerIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationRemoveCustomersFromGroupArgs = {\r\n  customerGroupId: Scalars['ID'];\r\n  customerIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerArgs = {\r\n  input: CreateCustomerInput;\r\n  password?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerArgs = {\r\n  input: UpdateCustomerInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerAddressArgs = {\r\n  customerId: Scalars['ID'];\r\n  input: CreateAddressInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerAddressArgs = {\r\n  input: UpdateAddressInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerAddressArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAddNoteToCustomerArgs = {\r\n  input: AddNoteToCustomerInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerNoteArgs = {\r\n  input: UpdateCustomerNoteInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerNoteArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateFacetArgs = {\r\n  input: CreateFacetInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateFacetArgs = {\r\n  input: UpdateFacetInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteFacetArgs = {\r\n  id: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationCreateFacetValuesArgs = {\r\n  input: Array<CreateFacetValueInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateFacetValuesArgs = {\r\n  input: Array<UpdateFacetValueInput>;\r\n};\r\n\r\n\r\nexport type MutationDeleteFacetValuesArgs = {\r\n  ids: Array<Scalars['ID']>;\r\n  force?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationUpdateGlobalSettingsArgs = {\r\n  input: UpdateGlobalSettingsInput;\r\n};\r\n\r\n\r\nexport type MutationImportProductsArgs = {\r\n  csvFile: Scalars['Upload'];\r\n};\r\n\r\n\r\nexport type MutationRemoveSettledJobsArgs = {\r\n  queueNames?: Maybe<Array<Scalars['String']>>;\r\n  olderThan?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\n\r\nexport type MutationSettlePaymentArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationFulfillOrderArgs = {\r\n  input: FulfillOrderInput;\r\n};\r\n\r\n\r\nexport type MutationCancelOrderArgs = {\r\n  input: CancelOrderInput;\r\n};\r\n\r\n\r\nexport type MutationRefundOrderArgs = {\r\n  input: RefundOrderInput;\r\n};\r\n\r\n\r\nexport type MutationSettleRefundArgs = {\r\n  input: SettleRefundInput;\r\n};\r\n\r\n\r\nexport type MutationAddNoteToOrderArgs = {\r\n  input: AddNoteToOrderInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateOrderNoteArgs = {\r\n  input: UpdateOrderNoteInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteOrderNoteArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationUpdatePaymentMethodArgs = {\r\n  input: UpdatePaymentMethodInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductOptionGroupArgs = {\r\n  input: CreateProductOptionGroupInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductOptionGroupArgs = {\r\n  input: UpdateProductOptionGroupInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductOptionArgs = {\r\n  input: CreateProductOptionInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductOptionArgs = {\r\n  input: UpdateProductOptionInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductArgs = {\r\n  input: CreateProductInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductArgs = {\r\n  input: UpdateProductInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteProductArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAddOptionGroupToProductArgs = {\r\n  productId: Scalars['ID'];\r\n  optionGroupId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationRemoveOptionGroupFromProductArgs = {\r\n  productId: Scalars['ID'];\r\n  optionGroupId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateProductVariantsArgs = {\r\n  input: Array<CreateProductVariantInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductVariantsArgs = {\r\n  input: Array<UpdateProductVariantInput>;\r\n};\r\n\r\n\r\nexport type MutationDeleteProductVariantArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAssignProductsToChannelArgs = {\r\n  input: AssignProductsToChannelInput;\r\n};\r\n\r\n\r\nexport type MutationRemoveProductsFromChannelArgs = {\r\n  input: RemoveProductsFromChannelInput;\r\n};\r\n\r\n\r\nexport type MutationCreatePromotionArgs = {\r\n  input: CreatePromotionInput;\r\n};\r\n\r\n\r\nexport type MutationUpdatePromotionArgs = {\r\n  input: UpdatePromotionInput;\r\n};\r\n\r\n\r\nexport type MutationDeletePromotionArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateRoleArgs = {\r\n  input: CreateRoleInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateRoleArgs = {\r\n  input: UpdateRoleInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteRoleArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateShippingMethodArgs = {\r\n  input: CreateShippingMethodInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateShippingMethodArgs = {\r\n  input: UpdateShippingMethodInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteShippingMethodArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateTaxCategoryArgs = {\r\n  input: CreateTaxCategoryInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateTaxCategoryArgs = {\r\n  input: UpdateTaxCategoryInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteTaxCategoryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateTaxRateArgs = {\r\n  input: CreateTaxRateInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateTaxRateArgs = {\r\n  input: UpdateTaxRateInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteTaxRateArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCreateZoneArgs = {\r\n  input: CreateZoneInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateZoneArgs = {\r\n  input: UpdateZoneInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteZoneArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAddMembersToZoneArgs = {\r\n  zoneId: Scalars['ID'];\r\n  memberIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationRemoveMembersFromZoneArgs = {\r\n  zoneId: Scalars['ID'];\r\n  memberIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationUpdateCrossSellingProductsArgs = {\r\n  productId: Scalars['ID'];\r\n  productIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationUpdateUpSellingProductsArgs = {\r\n  productId: Scalars['ID'];\r\n  productIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductVariantBulkDiscountsArgs = {\r\n  productVariantId: Scalars['ID'];\r\n  discounts: Array<BulkDiscountInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductVariantBulkDiscountsBySkuArgs = {\r\n  productVariantSku: Scalars['String'];\r\n  discounts: Array<BulkDiscountInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductReviewArgs = {\r\n  input: UpdateProductReviewInput;\r\n};\r\n\r\n\r\nexport type MutationApproveProductReviewArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationRejectProductReviewArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAddFeedbackArgs = {\r\n  input: FeedbackAddInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateFeedbackArgs = {\r\n  input: FeedbackUpdateInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteFeedbackArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAddSubscriptionEmailArgs = {\r\n  input: Array<EmailAddInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateSubscriptionEmailArgs = {\r\n  input: Array<EmailUpdateInput>;\r\n};\r\n\r\n\r\nexport type MutationDeleteSubscriptionEmailArgs = {\r\n  id: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationAddSubscriptionPhoneArgs = {\r\n  input: Array<PhoneAddInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateSubscriptionPhoneArgs = {\r\n  input: Array<PhoneUpdateInput>;\r\n};\r\n\r\n\r\nexport type MutationDeleteSubscriptionPhoneArgs = {\r\n  id: Array<Scalars['ID']>;\r\n};\r\n\r\nexport type Node = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\nexport type NumberOperators = {\r\n  eq?: Maybe<Scalars['Float']>;\r\n  lt?: Maybe<Scalars['Float']>;\r\n  lte?: Maybe<Scalars['Float']>;\r\n  gt?: Maybe<Scalars['Float']>;\r\n  gte?: Maybe<Scalars['Float']>;\r\n  between?: Maybe<NumberRange>;\r\n};\r\n\r\nexport type NumberRange = {\r\n  start: Scalars['Float'];\r\n  end: Scalars['Float'];\r\n};\r\n\r\nexport type Order = Node & {\r\n  __typename?: 'Order';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  /** A unique code for the Order */\r\n  code: Scalars['String'];\r\n  state: Scalars['String'];\r\n  /** An order is active as long as the payment process has not been completed */\r\n  active: Scalars['Boolean'];\r\n  customer?: Maybe<Customer>;\r\n  shippingAddress?: Maybe<OrderAddress>;\r\n  billingAddress?: Maybe<OrderAddress>;\r\n  lines: Array<OrderLine>;\r\n  /** Order-level adjustments to the order total, such as discounts from promotions */\r\n  adjustments: Array<Adjustment>;\r\n  couponCodes: Array<Scalars['String']>;\r\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\r\n  promotions: Array<Promotion>;\r\n  payments?: Maybe<Array<Payment>>;\r\n  fulfillments?: Maybe<Array<Fulfillment>>;\r\n  subTotalBeforeTax: Scalars['Int'];\r\n  /** The subTotal is the total of the OrderLines, before order-level promotions and shipping has been applied. */\r\n  subTotal: Scalars['Int'];\r\n  currencyCode: CurrencyCode;\r\n  shipping: Scalars['Int'];\r\n  shippingWithTax: Scalars['Int'];\r\n  shippingMethod?: Maybe<ShippingMethod>;\r\n  totalBeforeTax: Scalars['Int'];\r\n  total: Scalars['Int'];\r\n  history: HistoryEntryList;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type OrderHistoryArgs = {\r\n  options?: Maybe<HistoryEntryListOptions>;\r\n};\r\n\r\nexport type OrderAddress = {\r\n  __typename?: 'OrderAddress';\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1?: Maybe<Scalars['String']>;\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  country?: Maybe<Scalars['String']>;\r\n  countryCode?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type OrderFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  state?: Maybe<StringOperators>;\r\n  active?: Maybe<BooleanOperators>;\r\n  subTotalBeforeTax?: Maybe<NumberOperators>;\r\n  subTotal?: Maybe<NumberOperators>;\r\n  currencyCode?: Maybe<StringOperators>;\r\n  shipping?: Maybe<NumberOperators>;\r\n  shippingWithTax?: Maybe<NumberOperators>;\r\n  totalBeforeTax?: Maybe<NumberOperators>;\r\n  total?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type OrderItem = Node & {\r\n  __typename?: 'OrderItem';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  cancelled: Scalars['Boolean'];\r\n  unitPrice: Scalars['Int'];\r\n  unitPriceWithTax: Scalars['Int'];\r\n  unitPriceIncludesTax: Scalars['Boolean'];\r\n  taxRate: Scalars['Float'];\r\n  adjustments: Array<Adjustment>;\r\n  fulfillment?: Maybe<Fulfillment>;\r\n  refundId?: Maybe<Scalars['ID']>;\r\n};\r\n\r\nexport type OrderLine = Node & {\r\n  __typename?: 'OrderLine';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  featuredAsset?: Maybe<Asset>;\r\n  unitPrice: Scalars['Int'];\r\n  unitPriceWithTax: Scalars['Int'];\r\n  quantity: Scalars['Int'];\r\n  items: Array<OrderItem>;\r\n  totalPrice: Scalars['Int'];\r\n  adjustments: Array<Adjustment>;\r\n  order: Order;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type OrderLineInput = {\r\n  orderLineId: Scalars['ID'];\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type OrderList = PaginatedList & {\r\n  __typename?: 'OrderList';\r\n  items: Array<Order>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type OrderListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<OrderSortParameter>;\r\n  filter?: Maybe<OrderFilterParameter>;\r\n};\r\n\r\nexport type OrderSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  state?: Maybe<SortOrder>;\r\n  subTotalBeforeTax?: Maybe<SortOrder>;\r\n  subTotal?: Maybe<SortOrder>;\r\n  shipping?: Maybe<SortOrder>;\r\n  shippingWithTax?: Maybe<SortOrder>;\r\n  totalBeforeTax?: Maybe<SortOrder>;\r\n  total?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type PaginatedList = {\r\n  items: Array<Node>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type Payment = Node & {\r\n  __typename?: 'Payment';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  method: Scalars['String'];\r\n  amount: Scalars['Int'];\r\n  state: Scalars['String'];\r\n  transactionId?: Maybe<Scalars['String']>;\r\n  errorMessage?: Maybe<Scalars['String']>;\r\n  refunds: Array<Refund>;\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type PaymentMethod = Node & {\r\n  __typename?: 'PaymentMethod';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  configArgs: Array<ConfigArg>;\r\n};\r\n\r\nexport type PaymentMethodFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n};\r\n\r\nexport type PaymentMethodList = PaginatedList & {\r\n  __typename?: 'PaymentMethodList';\r\n  items: Array<PaymentMethod>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type PaymentMethodListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<PaymentMethodSortParameter>;\r\n  filter?: Maybe<PaymentMethodFilterParameter>;\r\n};\r\n\r\nexport type PaymentMethodSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n};\r\n\r\n/**\r\n * \"\r\n * @description\r\n * Permissions for administrators and customers. Used to control access to\r\n * GraphQL resolvers via the {@link Allow} decorator.\r\n * \r\n * @docsCategory common\r\n */\r\nexport enum Permission {\r\n  /**  The Authenticated role means simply that the user is logged in  */\r\n  Authenticated = 'Authenticated',\r\n  /**  SuperAdmin can perform the most sensitive tasks */\r\n  SuperAdmin = 'SuperAdmin',\r\n  /**  Owner means the user owns this entity, e.g. a Customer's own Order */\r\n  Owner = 'Owner',\r\n  /**  Public means any unauthenticated user may perform the operation  */\r\n  Public = 'Public',\r\n  CreateCatalog = 'CreateCatalog',\r\n  ReadCatalog = 'ReadCatalog',\r\n  UpdateCatalog = 'UpdateCatalog',\r\n  DeleteCatalog = 'DeleteCatalog',\r\n  CreateCustomer = 'CreateCustomer',\r\n  ReadCustomer = 'ReadCustomer',\r\n  UpdateCustomer = 'UpdateCustomer',\r\n  DeleteCustomer = 'DeleteCustomer',\r\n  CreateAdministrator = 'CreateAdministrator',\r\n  ReadAdministrator = 'ReadAdministrator',\r\n  UpdateAdministrator = 'UpdateAdministrator',\r\n  DeleteAdministrator = 'DeleteAdministrator',\r\n  CreateOrder = 'CreateOrder',\r\n  ReadOrder = 'ReadOrder',\r\n  UpdateOrder = 'UpdateOrder',\r\n  DeleteOrder = 'DeleteOrder',\r\n  CreatePromotion = 'CreatePromotion',\r\n  ReadPromotion = 'ReadPromotion',\r\n  UpdatePromotion = 'UpdatePromotion',\r\n  DeletePromotion = 'DeletePromotion',\r\n  CreateSettings = 'CreateSettings',\r\n  ReadSettings = 'ReadSettings',\r\n  UpdateSettings = 'UpdateSettings',\r\n  DeleteSettings = 'DeleteSettings'\r\n}\r\n\r\nexport type Phone = Node & {\r\n  __typename?: 'Phone';\r\n  id: Scalars['ID'];\r\n  phone: Scalars['String'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n};\r\n\r\nexport type PhoneAddInput = {\r\n  phone: Scalars['String'];\r\n};\r\n\r\nexport type PhoneFilterParameter = {\r\n  phone?: Maybe<StringOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n};\r\n\r\nexport type PhoneList = PaginatedList & {\r\n  __typename?: 'PhoneList';\r\n  items: Array<Phone>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type PhoneListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<PhoneSortParameter>;\r\n  filter?: Maybe<PhoneFilterParameter>;\r\n};\r\n\r\nexport type PhoneSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  phone?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type PhoneUpdateInput = {\r\n  id: Scalars['ID'];\r\n  phone: Scalars['String'];\r\n};\r\n\r\n/** The price range where the result has more than one price */\r\nexport type PriceRange = {\r\n  __typename?: 'PriceRange';\r\n  min: Scalars['Int'];\r\n  max: Scalars['Int'];\r\n};\r\n\r\nexport type Product = Node & {\r\n  __typename?: 'Product';\r\n  enabled: Scalars['Boolean'];\r\n  channels: Array<Channel>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n  featuredAsset?: Maybe<Asset>;\r\n  assets: Array<Asset>;\r\n  variants: Array<ProductVariant>;\r\n  optionGroups: Array<ProductOptionGroup>;\r\n  facetValues: Array<FacetValue>;\r\n  translations: Array<ProductTranslation>;\r\n  collections: Array<Collection>;\r\n  recommendations: Array<ProductRecommendation>;\r\n  reviews: ProductReviewList;\r\n  reviewsHistogram: Array<ProductReviewHistogramItem>;\r\n  customFields?: Maybe<ProductCustomFields>;\r\n};\r\n\r\n\r\nexport type ProductReviewsArgs = {\r\n  options?: Maybe<ProductReviewListOptions>;\r\n};\r\n\r\nexport type ProductCustomFields = {\r\n  __typename?: 'ProductCustomFields';\r\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\r\n  reviewRating?: Maybe<Scalars['Float']>;\r\n  reviewCount?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type ProductFilterParameter = {\r\n  enabled?: Maybe<BooleanOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  slug?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n  productRecommendationsEnabled?: Maybe<BooleanOperators>;\r\n  reviewRating?: Maybe<NumberOperators>;\r\n  reviewCount?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type ProductList = PaginatedList & {\r\n  __typename?: 'ProductList';\r\n  items: Array<Product>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ProductListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<ProductSortParameter>;\r\n  filter?: Maybe<ProductFilterParameter>;\r\n};\r\n\r\nexport type ProductOption = Node & {\r\n  __typename?: 'ProductOption';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  groupId: Scalars['ID'];\r\n  translations: Array<ProductOptionTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductOptionGroup = Node & {\r\n  __typename?: 'ProductOptionGroup';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  options: Array<ProductOption>;\r\n  translations: Array<ProductOptionGroupTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductOptionGroupTranslation = {\r\n  __typename?: 'ProductOptionGroupTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type ProductOptionGroupTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductOptionTranslation = {\r\n  __typename?: 'ProductOptionTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type ProductOptionTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductRecommendation = {\r\n  __typename?: 'ProductRecommendation';\r\n  product: Product;\r\n  recommendation: Product;\r\n  type: RecommendationType;\r\n};\r\n\r\nexport type ProductReview = Node & {\r\n  __typename?: 'ProductReview';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  product: Product;\r\n  productVariant?: Maybe<ProductVariant>;\r\n  summary: Scalars['String'];\r\n  body?: Maybe<Scalars['String']>;\r\n  rating: Scalars['Float'];\r\n  author?: Maybe<Customer>;\r\n  authorName: Scalars['String'];\r\n  authorLocation?: Maybe<Scalars['String']>;\r\n  upvotes: Scalars['Int'];\r\n  downvotes: Scalars['Int'];\r\n  state: Scalars['String'];\r\n  response?: Maybe<Scalars['String']>;\r\n  responseCreatedAt?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\nexport type ProductReviewFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  summary?: Maybe<StringOperators>;\r\n  body?: Maybe<StringOperators>;\r\n  rating?: Maybe<NumberOperators>;\r\n  authorName?: Maybe<StringOperators>;\r\n  authorLocation?: Maybe<StringOperators>;\r\n  upvotes?: Maybe<NumberOperators>;\r\n  downvotes?: Maybe<NumberOperators>;\r\n  state?: Maybe<StringOperators>;\r\n  response?: Maybe<StringOperators>;\r\n  responseCreatedAt?: Maybe<DateOperators>;\r\n};\r\n\r\nexport type ProductReviewHistogramItem = {\r\n  __typename?: 'ProductReviewHistogramItem';\r\n  bin: Scalars['Int'];\r\n  frequency: Scalars['Int'];\r\n};\r\n\r\nexport type ProductReviewList = PaginatedList & {\r\n  __typename?: 'ProductReviewList';\r\n  items: Array<ProductReview>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ProductReviewListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<ProductReviewSortParameter>;\r\n  filter?: Maybe<ProductReviewFilterParameter>;\r\n};\r\n\r\nexport type ProductReviewSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  summary?: Maybe<SortOrder>;\r\n  body?: Maybe<SortOrder>;\r\n  rating?: Maybe<SortOrder>;\r\n  authorName?: Maybe<SortOrder>;\r\n  authorLocation?: Maybe<SortOrder>;\r\n  upvotes?: Maybe<SortOrder>;\r\n  downvotes?: Maybe<SortOrder>;\r\n  state?: Maybe<SortOrder>;\r\n  response?: Maybe<SortOrder>;\r\n  responseCreatedAt?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ProductSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  slug?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n  productRecommendationsEnabled?: Maybe<SortOrder>;\r\n  reviewRating?: Maybe<SortOrder>;\r\n  reviewCount?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ProductTranslation = {\r\n  __typename?: 'ProductTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ProductTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductVariant = Node & {\r\n  __typename?: 'ProductVariant';\r\n  enabled: Scalars['Boolean'];\r\n  stockOnHand: Scalars['Int'];\r\n  trackInventory: Scalars['Boolean'];\r\n  stockMovements: StockMovementList;\r\n  id: Scalars['ID'];\r\n  productId: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  sku: Scalars['String'];\r\n  name: Scalars['String'];\r\n  featuredAsset?: Maybe<Asset>;\r\n  assets: Array<Asset>;\r\n  price: Scalars['Int'];\r\n  currencyCode: CurrencyCode;\r\n  priceIncludesTax: Scalars['Boolean'];\r\n  priceWithTax: Scalars['Int'];\r\n  taxRateApplied: TaxRate;\r\n  taxCategory: TaxCategory;\r\n  options: Array<ProductOption>;\r\n  facetValues: Array<FacetValue>;\r\n  translations: Array<ProductVariantTranslation>;\r\n  bulkDiscounts: Array<BulkDiscount>;\r\n  customFields?: Maybe<ProductVariantCustomFields>;\r\n};\r\n\r\n\r\nexport type ProductVariantStockMovementsArgs = {\r\n  options?: Maybe<StockMovementListOptions>;\r\n};\r\n\r\nexport type ProductVariantCustomFields = {\r\n  __typename?: 'ProductVariantCustomFields';\r\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\r\n  Unit?: Maybe<Scalars['String']>;\r\n  Sales?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type ProductVariantFilterParameter = {\r\n  enabled?: Maybe<BooleanOperators>;\r\n  stockOnHand?: Maybe<NumberOperators>;\r\n  trackInventory?: Maybe<BooleanOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  sku?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  price?: Maybe<NumberOperators>;\r\n  currencyCode?: Maybe<StringOperators>;\r\n  priceIncludesTax?: Maybe<BooleanOperators>;\r\n  priceWithTax?: Maybe<NumberOperators>;\r\n  bulkDiscountEnabled?: Maybe<BooleanOperators>;\r\n  Unit?: Maybe<StringOperators>;\r\n  Sales?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type ProductVariantList = PaginatedList & {\r\n  __typename?: 'ProductVariantList';\r\n  items: Array<ProductVariant>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ProductVariantListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<ProductVariantSortParameter>;\r\n  filter?: Maybe<ProductVariantFilterParameter>;\r\n};\r\n\r\nexport type ProductVariantSortParameter = {\r\n  stockOnHand?: Maybe<SortOrder>;\r\n  id?: Maybe<SortOrder>;\r\n  productId?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  sku?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  price?: Maybe<SortOrder>;\r\n  priceWithTax?: Maybe<SortOrder>;\r\n  bulkDiscountEnabled?: Maybe<SortOrder>;\r\n  Unit?: Maybe<SortOrder>;\r\n  Sales?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ProductVariantTranslation = {\r\n  __typename?: 'ProductVariantTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type ProductVariantTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type Promotion = Node & {\r\n  __typename?: 'Promotion';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  startsAt?: Maybe<Scalars['DateTime']>;\r\n  endsAt?: Maybe<Scalars['DateTime']>;\r\n  couponCode?: Maybe<Scalars['String']>;\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  conditions: Array<ConfigurableOperation>;\r\n  actions: Array<ConfigurableOperation>;\r\n};\r\n\r\nexport type PromotionFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  startsAt?: Maybe<DateOperators>;\r\n  endsAt?: Maybe<DateOperators>;\r\n  couponCode?: Maybe<StringOperators>;\r\n  perCustomerUsageLimit?: Maybe<NumberOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n};\r\n\r\nexport type PromotionList = PaginatedList & {\r\n  __typename?: 'PromotionList';\r\n  items: Array<Promotion>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type PromotionListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<PromotionSortParameter>;\r\n  filter?: Maybe<PromotionFilterParameter>;\r\n};\r\n\r\nexport type PromotionSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  startsAt?: Maybe<SortOrder>;\r\n  endsAt?: Maybe<SortOrder>;\r\n  couponCode?: Maybe<SortOrder>;\r\n  perCustomerUsageLimit?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type Query = {\r\n  __typename?: 'Query';\r\n  administrators: AdministratorList;\r\n  administrator?: Maybe<Administrator>;\r\n  /** Get a list of Assets */\r\n  assets: AssetList;\r\n  /** Get a single Asset by id */\r\n  asset?: Maybe<Asset>;\r\n  me?: Maybe<CurrentUser>;\r\n  channels: Array<Channel>;\r\n  channel?: Maybe<Channel>;\r\n  activeChannel: Channel;\r\n  collections: CollectionList;\r\n  /** Get a Collection either by id or slug. If neither id nor slug is speicified, an error will result. */\r\n  collection?: Maybe<Collection>;\r\n  collectionFilters: Array<ConfigurableOperationDefinition>;\r\n  countries: CountryList;\r\n  country?: Maybe<Country>;\r\n  customerGroups: CustomerGroupList;\r\n  customerGroup?: Maybe<CustomerGroup>;\r\n  customers: CustomerList;\r\n  customer?: Maybe<Customer>;\r\n  facets: FacetList;\r\n  facet?: Maybe<Facet>;\r\n  globalSettings: GlobalSettings;\r\n  job?: Maybe<Job>;\r\n  jobs: JobList;\r\n  jobsById: Array<Job>;\r\n  jobQueues: Array<JobQueue>;\r\n  order?: Maybe<Order>;\r\n  orders: OrderList;\r\n  paymentMethods: PaymentMethodList;\r\n  paymentMethod?: Maybe<PaymentMethod>;\r\n  productOptionGroups: Array<ProductOptionGroup>;\r\n  productOptionGroup?: Maybe<ProductOptionGroup>;\r\n  search: SearchResponse;\r\n  products: ProductList;\r\n  /** Get a Product either by id or slug. If neither id nor slug is speicified, an error will result. */\r\n  product?: Maybe<Product>;\r\n  promotion?: Maybe<Promotion>;\r\n  promotions: PromotionList;\r\n  promotionConditions: Array<ConfigurableOperationDefinition>;\r\n  promotionActions: Array<ConfigurableOperationDefinition>;\r\n  roles: RoleList;\r\n  role?: Maybe<Role>;\r\n  shippingMethods: ShippingMethodList;\r\n  shippingMethod?: Maybe<ShippingMethod>;\r\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>;\r\n  shippingCalculators: Array<ConfigurableOperationDefinition>;\r\n  testShippingMethod: TestShippingMethodResult;\r\n  testEligibleShippingMethods: Array<ShippingMethodQuote>;\r\n  taxCategories: Array<TaxCategory>;\r\n  taxCategory?: Maybe<TaxCategory>;\r\n  taxRates: TaxRateList;\r\n  taxRate?: Maybe<TaxRate>;\r\n  zones: Array<Zone>;\r\n  zone?: Maybe<Zone>;\r\n  productRecommendations: Array<ProductRecommendation>;\r\n  productBulkDiscounts: Array<BulkDiscount>;\r\n  productReviews: ProductReviewList;\r\n  productReview?: Maybe<ProductReview>;\r\n  Feedbacks: FeedbackList;\r\n  Feedback?: Maybe<Feedback>;\r\n  SubscriptionEmails: EmailList;\r\n  SubscriptionEmail?: Maybe<Email>;\r\n  SubscriptionPhones: PhoneList;\r\n  SubscriptionPhone?: Maybe<Phone>;\r\n};\r\n\r\n\r\nexport type QueryAdministratorsArgs = {\r\n  options?: Maybe<AdministratorListOptions>;\r\n};\r\n\r\n\r\nexport type QueryAdministratorArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryAssetsArgs = {\r\n  options?: Maybe<AssetListOptions>;\r\n};\r\n\r\n\r\nexport type QueryAssetArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryChannelArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCollectionsArgs = {\r\n  options?: Maybe<CollectionListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCollectionArgs = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryCountriesArgs = {\r\n  options?: Maybe<CountryListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCountryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCustomerGroupsArgs = {\r\n  options?: Maybe<CustomerGroupListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCustomerGroupArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCustomersArgs = {\r\n  options?: Maybe<CustomerListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCustomerArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryFacetsArgs = {\r\n  options?: Maybe<FacetListOptions>;\r\n};\r\n\r\n\r\nexport type QueryFacetArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryJobArgs = {\r\n  jobId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryJobsArgs = {\r\n  options?: Maybe<JobListOptions>;\r\n};\r\n\r\n\r\nexport type QueryJobsByIdArgs = {\r\n  jobIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type QueryOrderArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryOrdersArgs = {\r\n  options?: Maybe<OrderListOptions>;\r\n};\r\n\r\n\r\nexport type QueryPaymentMethodsArgs = {\r\n  options?: Maybe<PaymentMethodListOptions>;\r\n};\r\n\r\n\r\nexport type QueryPaymentMethodArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryProductOptionGroupsArgs = {\r\n  filterTerm?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryProductOptionGroupArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QuerySearchArgs = {\r\n  input: SearchInput;\r\n};\r\n\r\n\r\nexport type QueryProductsArgs = {\r\n  options?: Maybe<ProductListOptions>;\r\n};\r\n\r\n\r\nexport type QueryProductArgs = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryPromotionArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryPromotionsArgs = {\r\n  options?: Maybe<PromotionListOptions>;\r\n};\r\n\r\n\r\nexport type QueryRolesArgs = {\r\n  options?: Maybe<RoleListOptions>;\r\n};\r\n\r\n\r\nexport type QueryRoleArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryShippingMethodsArgs = {\r\n  options?: Maybe<ShippingMethodListOptions>;\r\n};\r\n\r\n\r\nexport type QueryShippingMethodArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryTestShippingMethodArgs = {\r\n  input: TestShippingMethodInput;\r\n};\r\n\r\n\r\nexport type QueryTestEligibleShippingMethodsArgs = {\r\n  input: TestEligibleShippingMethodsInput;\r\n};\r\n\r\n\r\nexport type QueryTaxCategoryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryTaxRatesArgs = {\r\n  options?: Maybe<TaxRateListOptions>;\r\n};\r\n\r\n\r\nexport type QueryTaxRateArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryZoneArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryProductRecommendationsArgs = {\r\n  productId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryProductBulkDiscountsArgs = {\r\n  productId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryProductReviewsArgs = {\r\n  options?: Maybe<ProductReviewListOptions>;\r\n};\r\n\r\n\r\nexport type QueryProductReviewArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryFeedbacksArgs = {\r\n  options?: Maybe<FeedbackListOptions>;\r\n};\r\n\r\n\r\nexport type QueryFeedbackArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QuerySubscriptionEmailsArgs = {\r\n  options?: Maybe<EmailListOptions>;\r\n};\r\n\r\n\r\nexport type QuerySubscriptionEmailArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QuerySubscriptionPhonesArgs = {\r\n  options?: Maybe<PhoneListOptions>;\r\n};\r\n\r\n\r\nexport type QuerySubscriptionPhoneArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\nexport enum RecommendationType {\r\n  Crosssell = 'CROSSSELL',\r\n  Upsell = 'UPSELL'\r\n}\r\n\r\nexport type Refund = Node & {\r\n  __typename?: 'Refund';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  items: Scalars['Int'];\r\n  shipping: Scalars['Int'];\r\n  adjustment: Scalars['Int'];\r\n  total: Scalars['Int'];\r\n  method?: Maybe<Scalars['String']>;\r\n  state: Scalars['String'];\r\n  transactionId?: Maybe<Scalars['String']>;\r\n  reason?: Maybe<Scalars['String']>;\r\n  orderItems: Array<OrderItem>;\r\n  paymentId: Scalars['ID'];\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type RefundOrderInput = {\r\n  lines: Array<OrderLineInput>;\r\n  shipping: Scalars['Int'];\r\n  adjustment: Scalars['Int'];\r\n  paymentId: Scalars['ID'];\r\n  reason?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type RemoveProductsFromChannelInput = {\r\n  productIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\nexport type Return = Node & StockMovement & {\r\n  __typename?: 'Return';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderItem: OrderItem;\r\n};\r\n\r\nexport type Role = Node & {\r\n  __typename?: 'Role';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n  channels: Array<Channel>;\r\n};\r\n\r\nexport type RoleFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type RoleList = PaginatedList & {\r\n  __typename?: 'RoleList';\r\n  items: Array<Role>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type RoleListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<RoleSortParameter>;\r\n  filter?: Maybe<RoleFilterParameter>;\r\n};\r\n\r\nexport type RoleSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type Sale = Node & StockMovement & {\r\n  __typename?: 'Sale';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderLine: OrderLine;\r\n};\r\n\r\nexport type SearchInput = {\r\n  term?: Maybe<Scalars['String']>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  facetValueOperator?: Maybe<LogicalOperator>;\r\n  collectionId?: Maybe<Scalars['ID']>;\r\n  groupByProduct?: Maybe<Scalars['Boolean']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  skip?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<SearchResultSortParameter>;\r\n};\r\n\r\nexport type SearchReindexResponse = {\r\n  __typename?: 'SearchReindexResponse';\r\n  success: Scalars['Boolean'];\r\n};\r\n\r\nexport type SearchResponse = {\r\n  __typename?: 'SearchResponse';\r\n  items: Array<SearchResult>;\r\n  totalItems: Scalars['Int'];\r\n  facetValues: Array<FacetValueResult>;\r\n};\r\n\r\nexport type SearchResult = {\r\n  __typename?: 'SearchResult';\r\n  enabled: Scalars['Boolean'];\r\n  /** An array of ids of the Collections in which this result appears */\r\n  channelIds: Array<Scalars['ID']>;\r\n  sku: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  productId: Scalars['ID'];\r\n  productName: Scalars['String'];\r\n  /** @deprecated Use `productAsset.preview` instead */\r\n  productPreview: Scalars['String'];\r\n  productAsset?: Maybe<SearchResultAsset>;\r\n  productVariantId: Scalars['ID'];\r\n  productVariantName: Scalars['String'];\r\n  /** @deprecated Use `productVariantAsset.preview` instead */\r\n  productVariantPreview: Scalars['String'];\r\n  productVariantAsset?: Maybe<SearchResultAsset>;\r\n  price: SearchResultPrice;\r\n  priceWithTax: SearchResultPrice;\r\n  currencyCode: CurrencyCode;\r\n  description: Scalars['String'];\r\n  facetIds: Array<Scalars['ID']>;\r\n  facetValueIds: Array<Scalars['ID']>;\r\n  /** An array of ids of the Collections in which this result appears */\r\n  collectionIds: Array<Scalars['ID']>;\r\n  /** A relevence score for the result. Differs between database implementations */\r\n  score: Scalars['Float'];\r\n};\r\n\r\nexport type SearchResultAsset = {\r\n  __typename?: 'SearchResultAsset';\r\n  id: Scalars['ID'];\r\n  preview: Scalars['String'];\r\n  focalPoint?: Maybe<Coordinate>;\r\n};\r\n\r\n/** The price of a search result product, either as a range or as a single price */\r\nexport type SearchResultPrice = PriceRange | SinglePrice;\r\n\r\nexport type SearchResultSortParameter = {\r\n  name?: Maybe<SortOrder>;\r\n  price?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ServerConfig = {\r\n  __typename?: 'ServerConfig';\r\n  customFieldConfig: CustomFields;\r\n};\r\n\r\nexport type SettleRefundInput = {\r\n  id: Scalars['ID'];\r\n  transactionId: Scalars['String'];\r\n};\r\n\r\nexport type ShippingMethod = Node & {\r\n  __typename?: 'ShippingMethod';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  checker: ConfigurableOperation;\r\n  calculator: ConfigurableOperation;\r\n};\r\n\r\nexport type ShippingMethodFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type ShippingMethodList = PaginatedList & {\r\n  __typename?: 'ShippingMethodList';\r\n  items: Array<ShippingMethod>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ShippingMethodListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<ShippingMethodSortParameter>;\r\n  filter?: Maybe<ShippingMethodFilterParameter>;\r\n};\r\n\r\nexport type ShippingMethodQuote = {\r\n  __typename?: 'ShippingMethodQuote';\r\n  id: Scalars['ID'];\r\n  price: Scalars['Int'];\r\n  priceWithTax: Scalars['Int'];\r\n  description: Scalars['String'];\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ShippingMethodSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\n/** The price value where the result has a single price */\r\nexport type SinglePrice = {\r\n  __typename?: 'SinglePrice';\r\n  value: Scalars['Int'];\r\n};\r\n\r\nexport enum SortOrder {\r\n  Asc = 'ASC',\r\n  Desc = 'DESC'\r\n}\r\n\r\nexport type StockAdjustment = Node & StockMovement & {\r\n  __typename?: 'StockAdjustment';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type StockMovement = {\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type StockMovementItem = StockAdjustment | Sale | Cancellation | Return;\r\n\r\nexport type StockMovementList = {\r\n  __typename?: 'StockMovementList';\r\n  items: Array<StockMovementItem>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type StockMovementListOptions = {\r\n  type?: Maybe<StockMovementType>;\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport enum StockMovementType {\r\n  Adjustment = 'ADJUSTMENT',\r\n  Sale = 'SALE',\r\n  Cancellation = 'CANCELLATION',\r\n  Return = 'RETURN'\r\n}\r\n\r\nexport type StringCustomFieldConfig = CustomField & {\r\n  __typename?: 'StringCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  length?: Maybe<Scalars['Int']>;\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  pattern?: Maybe<Scalars['String']>;\r\n  options?: Maybe<Array<StringFieldOption>>;\r\n};\r\n\r\nexport type StringFieldOption = {\r\n  __typename?: 'StringFieldOption';\r\n  value: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n};\r\n\r\nexport type StringOperators = {\r\n  eq?: Maybe<Scalars['String']>;\r\n  contains?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type TaxCategory = Node & {\r\n  __typename?: 'TaxCategory';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type TaxRate = Node & {\r\n  __typename?: 'TaxRate';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  value: Scalars['Float'];\r\n  category: TaxCategory;\r\n  zone: Zone;\r\n  customerGroup?: Maybe<CustomerGroup>;\r\n};\r\n\r\nexport type TaxRateFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n  value?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type TaxRateList = PaginatedList & {\r\n  __typename?: 'TaxRateList';\r\n  items: Array<TaxRate>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type TaxRateListOptions = {\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<TaxRateSortParameter>;\r\n  filter?: Maybe<TaxRateFilterParameter>;\r\n};\r\n\r\nexport type TaxRateSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  value?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type TestEligibleShippingMethodsInput = {\r\n  shippingAddress: CreateAddressInput;\r\n  lines: Array<TestShippingMethodOrderLineInput>;\r\n};\r\n\r\nexport type TestShippingMethodInput = {\r\n  checker: ConfigurableOperationInput;\r\n  calculator: ConfigurableOperationInput;\r\n  shippingAddress: CreateAddressInput;\r\n  lines: Array<TestShippingMethodOrderLineInput>;\r\n};\r\n\r\nexport type TestShippingMethodOrderLineInput = {\r\n  productVariantId: Scalars['ID'];\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type TestShippingMethodQuote = {\r\n  __typename?: 'TestShippingMethodQuote';\r\n  price: Scalars['Int'];\r\n  priceWithTax: Scalars['Int'];\r\n  description: Scalars['String'];\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type TestShippingMethodResult = {\r\n  __typename?: 'TestShippingMethodResult';\r\n  eligible: Scalars['Boolean'];\r\n  quote?: Maybe<TestShippingMethodQuote>;\r\n};\r\n\r\nexport type UpdateAddressInput = {\r\n  id: Scalars['ID'];\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1?: Maybe<Scalars['String']>;\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  countryCode?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateAdministratorInput = {\r\n  id: Scalars['ID'];\r\n  firstName?: Maybe<Scalars['String']>;\r\n  lastName?: Maybe<Scalars['String']>;\r\n  emailAddress?: Maybe<Scalars['String']>;\r\n  password?: Maybe<Scalars['String']>;\r\n  roleIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type UpdateAssetInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  focalPoint?: Maybe<CoordinateInput>;\r\n};\r\n\r\nexport type UpdateChannelInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  token?: Maybe<Scalars['String']>;\r\n  defaultLanguageCode?: Maybe<LanguageCode>;\r\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>;\r\n  currencyCode?: Maybe<CurrencyCode>;\r\n  defaultTaxZoneId?: Maybe<Scalars['ID']>;\r\n  defaultShippingZoneId?: Maybe<Scalars['ID']>;\r\n};\r\n\r\nexport type UpdateCollectionInput = {\r\n  id: Scalars['ID'];\r\n  isPrivate?: Maybe<Scalars['Boolean']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  parentId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  filters?: Maybe<Array<ConfigurableOperationInput>>;\r\n  translations?: Maybe<Array<UpdateCollectionTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCollectionTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCountryInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<CountryTranslationInput>>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdateCustomerGroupInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpdateCustomerInput = {\r\n  id: Scalars['ID'];\r\n  title?: Maybe<Scalars['String']>;\r\n  firstName?: Maybe<Scalars['String']>;\r\n  lastName?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  emailAddress?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCustomerNoteInput = {\r\n  noteId: Scalars['ID'];\r\n  note: Scalars['String'];\r\n};\r\n\r\nexport type UpdateFacetInput = {\r\n  id: Scalars['ID'];\r\n  isPrivate?: Maybe<Scalars['Boolean']>;\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<FacetTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateFacetValueInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<FacetValueTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateGlobalSettingsInput = {\r\n  availableLanguages?: Maybe<Array<LanguageCode>>;\r\n  trackInventory?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateOrderNoteInput = {\r\n  noteId: Scalars['ID'];\r\n  note?: Maybe<Scalars['String']>;\r\n  isPublic?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdatePaymentMethodInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  configArgs?: Maybe<Array<ConfigArgInput>>;\r\n};\r\n\r\nexport type UpdateProductCustomFieldsInput = {\r\n  productRecommendationsEnabled?: Maybe<Scalars['Boolean']>;\r\n  reviewRating?: Maybe<Scalars['Float']>;\r\n  reviewCount?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type UpdateProductInput = {\r\n  id: Scalars['ID'];\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  translations?: Maybe<Array<ProductTranslationInput>>;\r\n  customFields?: Maybe<UpdateProductCustomFieldsInput>;\r\n};\r\n\r\nexport type UpdateProductOptionGroupInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateProductOptionInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateProductReviewInput = {\r\n  id: Scalars['ID'];\r\n  summary?: Maybe<Scalars['String']>;\r\n  body?: Maybe<Scalars['String']>;\r\n  response?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpdateProductVariantCustomFieldsInput = {\r\n  bulkDiscountEnabled?: Maybe<Scalars['Boolean']>;\r\n  Unit?: Maybe<Scalars['String']>;\r\n  Sales?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type UpdateProductVariantInput = {\r\n  id: Scalars['ID'];\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  translations?: Maybe<Array<ProductVariantTranslationInput>>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  sku?: Maybe<Scalars['String']>;\r\n  taxCategoryId?: Maybe<Scalars['ID']>;\r\n  price?: Maybe<Scalars['Int']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  stockOnHand?: Maybe<Scalars['Int']>;\r\n  trackInventory?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<UpdateProductVariantCustomFieldsInput>;\r\n};\r\n\r\nexport type UpdatePromotionInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  startsAt?: Maybe<Scalars['DateTime']>;\r\n  endsAt?: Maybe<Scalars['DateTime']>;\r\n  couponCode?: Maybe<Scalars['String']>;\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\r\n  conditions?: Maybe<Array<ConfigurableOperationInput>>;\r\n  actions?: Maybe<Array<ConfigurableOperationInput>>;\r\n};\r\n\r\nexport type UpdateRoleInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  permissions?: Maybe<Array<Permission>>;\r\n  channelIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type UpdateShippingMethodInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  checker?: Maybe<ConfigurableOperationInput>;\r\n  calculator?: Maybe<ConfigurableOperationInput>;\r\n};\r\n\r\nexport type UpdateTaxCategoryInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpdateTaxRateInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  value?: Maybe<Scalars['Float']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  categoryId?: Maybe<Scalars['ID']>;\r\n  zoneId?: Maybe<Scalars['ID']>;\r\n  customerGroupId?: Maybe<Scalars['ID']>;\r\n};\r\n\r\nexport type UpdateZoneInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type User = Node & {\r\n  __typename?: 'User';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  identifier: Scalars['String'];\r\n  verified: Scalars['Boolean'];\r\n  roles: Array<Role>;\r\n  lastLogin?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type Zone = Node & {\r\n  __typename?: 'Zone';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  members: Array<Country>;\r\n};\r\n\r\nexport namespace Feedbacks {\r\n  export type Fragment = FeedbacksFragment;\r\n}\r\n\r\nexport namespace GetAllFeedbacks {\r\n  export type Variables = GetAllFeedbacksQueryVariables;\r\n  export type Query = GetAllFeedbacksQuery;\r\n  export type Feedbacks = GetAllFeedbacksQuery['Feedbacks'];\r\n  export type Items = (NonNullable<GetAllFeedbacksQuery['Feedbacks']['items'][0]>);\r\n}\r\n\r\nexport namespace DeleteFeedback {\r\n  export type Variables = DeleteFeedbackMutationVariables;\r\n  export type Mutation = DeleteFeedbackMutation;\r\n  export type DeleteFeedback = DeleteFeedbackMutation['deleteFeedback'];\r\n}\r\n\r\nexport namespace UpdateFeedback {\r\n  export type Variables = UpdateFeedbackMutationVariables;\r\n  export type Mutation = UpdateFeedbackMutation;\r\n  export type UpdateFeedback = UpdateFeedbackMutation['updateFeedback'];\r\n}\r\n\r\nexport namespace CreateFeedback {\r\n  export type Variables = CreateFeedbackMutationVariables;\r\n  export type Mutation = CreateFeedbackMutation;\r\n  export type AddFeedback = CreateFeedbackMutation['addFeedback'];\r\n}\r\n\r\nexport namespace GetFeedback {\r\n  export type Variables = GetFeedbackQueryVariables;\r\n  export type Query = GetFeedbackQuery;\r\n  export type Feedback = (NonNullable<GetFeedbackQuery['Feedback']>);\r\n}\r\n\r\nexport type FeedbacksFragment = (\r\n  { __typename?: 'Feedback' }\r\n  & Pick<Feedback, 'id' | 'name' | 'email' | 'phone' | 'feedback' | 'createdAt' | 'updatedAt'>\r\n);\r\n\r\nexport type GetAllFeedbacksQueryVariables = Exact<{\r\n  options?: Maybe<FeedbackListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetAllFeedbacksQuery = (\r\n  { __typename?: 'Query' }\r\n  & { Feedbacks: (\r\n    { __typename?: 'FeedbackList' }\r\n    & Pick<FeedbackList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Feedback' }\r\n      & FeedbacksFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type DeleteFeedbackMutationVariables = Exact<{\r\n  input: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteFeedbackMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { deleteFeedback: (\r\n    { __typename?: 'Feedback' }\r\n    & FeedbacksFragment\r\n  ) }\r\n);\r\n\r\nexport type UpdateFeedbackMutationVariables = Exact<{\r\n  input: FeedbackUpdateInput;\r\n}>;\r\n\r\n\r\nexport type UpdateFeedbackMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { updateFeedback: (\r\n    { __typename?: 'Feedback' }\r\n    & FeedbacksFragment\r\n  ) }\r\n);\r\n\r\nexport type CreateFeedbackMutationVariables = Exact<{\r\n  input: FeedbackAddInput;\r\n}>;\r\n\r\n\r\nexport type CreateFeedbackMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { addFeedback: (\r\n    { __typename?: 'Feedback' }\r\n    & FeedbacksFragment\r\n  ) }\r\n);\r\n\r\nexport type GetFeedbackQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetFeedbackQuery = (\r\n  { __typename?: 'Query' }\r\n  & { Feedback?: Maybe<(\r\n    { __typename?: 'Feedback' }\r\n    & FeedbacksFragment\r\n  )> }\r\n);\r\n","import gql from 'graphql-tag';\r\n\r\nexport const FEEDBACK_FRAGMENT = gql`\r\n    fragment Feedbacks on Feedback {\r\n        id\r\n\t\tname\r\n\t    email\r\n        phone\r\n\t    feedback\r\n        createdAt\r\n        updatedAt\r\n    }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nimport { FEEDBACK_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const GET_ALL_FEEDBACKS = gql`\r\n    query GetAllFeedbacks($options: FeedbackListOptions){\r\n\t\tFeedbacks(options: $options){\r\n\t\t\titems{\r\n\t\t\t...Feedbacks\r\n\t\t\t}\r\n\t\t\ttotalItems\r\n       }\r\n    }\r\n\t${FEEDBACK_FRAGMENT}\r\n`;\r\n\r\n\r\nexport const DELETE_FEEDBACK = gql`\r\n   mutation DeleteFeedback($input:ID!){\r\n      deleteFeedback(id:$input){\r\n\t     ...Feedbacks \r\n\t  }\r\n   }\r\n   ${FEEDBACK_FRAGMENT}\r\n`;","<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <input\r\n            type=\"text\"\r\n            name=\"searchTerm\"\r\n\t\t\t[formControl]=\"searchTerm\"\r\n            [placeholder]=\"'vdr-feedback-plugin.search-feedback' | translate\"\r\n            class=\"clr-input search-input\"\r\n        />\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId=\"email-list\"></vdr-action-bar-items>\r\n        <a href=\"javascript:void(0)\" class=\"btn btn-primary\" id=\"downloadbtn\" (click)=\"downloadcsv()\" *vdrIfPermissions=\"'CreateSettings'\">\r\n            <clr-icon shape=\"download-cloud\"></clr-icon>\r\n\t\t\t{{ 'vdr-feedback-plugin.download-csv' | translate }}\r\n        </a>\r\n\t\t<a class=\"btn btn-primary\" id=\"createbtn\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"'CreateSettings'\">\r\n            <clr-icon shape=\"plus\"></clr-icon>\r\n\t\t\t{{ 'vdr-feedback-plugin.create-new-feedback' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    id=\"datatable\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.name' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.email' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.phone' | translate }}</vdr-dt-column>\r\n\t<vdr-dt-column>{{ 'vdr-feedback-plugin.feedback' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n\t<vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-feedback=\"item\">\r\n\t\t<td class=\"left align-middle\">{{ feedback.name }}</td>\r\n\t\t<td class=\"left align-middle\">{{ feedback.email }}</td>\r\n\t\t<td class=\"left align-middle\">{{ feedback.phone }}</td>\r\n\t\t<td class=\"left align-middle\">{{ feedback.feedback }}</td>\r\n\t\t<td class=\"right align-middle\" *vdrIfPermissions=\"'UpdateSettings'\">\r\n            <vdr-table-row-action\r\n                iconShape=\"edit\"\r\n                [label]=\"'common.edit' | translate\"\r\n                [linkTo]=\"['/extensions', 'feedbacks', feedback.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n\t\t\r\n\t\t<td class=\"right align-middle\" *vdrIfPermissions=\"'DeleteSettings'\">\r\n            <vdr-dropdown>\r\n                <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\r\n                    {{ 'common.actions' | translate }}\r\n                    <clr-icon shape=\"caret down\"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"delete-button\"\r\n                        (click)=\"deleteFeedback(feedback.id)\"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                        {{ 'common.delete' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n\t\t\r\n    </ng-template>\r\n</vdr-data-table>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseListComponent, DataService, NotificationService, ModalService  } from '@vendure/admin-ui/core';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { Apollo } from 'apollo-angular';\r\n\r\nimport { SortOrder } from '../../generated-types';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { debounceTime, takeUntil, switchMap } from 'rxjs/operators';\r\nimport { CsvDataService } from '../../common/export-as-csv';\r\n\r\nimport { \r\n  GetAllFeedbacksQuery,\r\n  Feedbacks,\r\n  GetAllFeedbacksQueryVariables,\r\n  DeleteFeedback\r\n} from '../../generated-types';\r\n\r\nimport { GET_ALL_FEEDBACKS, DELETE_FEEDBACK } from './all-feedbacks-list.graphql';\r\n\r\n@Component({\r\n    selector: 'vdr-all-feedbacks-list',\r\n    templateUrl: './all-feedbacks-list.component.html',\r\n    styleUrls: ['./all-feedbacks-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class AllFeedbacksListComponent extends BaseListComponent<\r\n    GetAllFeedbacksQuery,\r\n\tFeedbacks.Fragment,\r\n    GetAllFeedbacksQueryVariables\r\n> implements OnInit {\r\n    searchTerm = new FormControl('');\r\n\tFeedbacks: any;\r\n\tprivate querySubscription: Subscription;\r\n\r\n    constructor(\r\n\t   private dataService: DataService,\r\n       private modalService: ModalService,\r\n       private notificationService: NotificationService,\r\n       private apollo: Apollo,\t   \r\n\t   router: Router, \r\n\t   route: ActivatedRoute,\r\n\t) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.query(GET_ALL_FEEDBACKS,args),\r\n            (data) => data.Feedbacks,\r\n\t\t\t(skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n\t\t\t\t\tsort: {\r\n                        updatedAt: SortOrder.Desc,\r\n                    },\r\n                },\r\n            }),\r\n        );\r\n    }\r\n\t\r\n\tngOnInit() {\r\n        super.ngOnInit();\r\n        this.searchTerm.valueChanges\r\n            .pipe(\r\n                debounceTime(250),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(() => {\r\n\t\t\t\tthis.filtertable();\r\n\t\t\t\t//this.refresh();\r\n\t\t\t});\r\n    }\r\n\t\r\n\t\r\n  filtertable() {\r\n\t  let input = this.searchTerm.value;\r\n\t  let filter = input.toUpperCase();\r\n\t  let table = <HTMLElement> document.querySelector(\"#datatable >.table > tbody\");\r\n\t  let tr = table.getElementsByTagName(\"tr\");\r\n\t  for (let i = 0; i < tr.length; i++) {\r\n\t\t \r\n\t\tfor(let j=0;j<4;j++){\r\n\t\t  \r\n\t\t  let td = tr[i].getElementsByTagName(\"td\")[j];\r\n\t\t  if (td) {\r\n\t\t\t let txtValue = td.innerHTML;\r\n\t\t\t if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n\t\t\t\t  tr[i].style.display = \"\";\r\n\t\t\t\t  break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttr[i].style.display = \"none\";\r\n                }\r\n             }\r\n\t\t  }\r\n       \r\n\t   }\r\n}\r\n\t\r\n\t\r\n\tdownloadcsv(){\r\n\t  let args: any[] = [];\r\n\t  this.apollo.watchQuery<any>({\r\n         query: GET_ALL_FEEDBACKS,\r\n\t\t variables: args\r\n      }).valueChanges.subscribe((data) => {\r\n\t\t  CsvDataService.exportToCsv('danfe-feedbacks.csv', data.data.Feedbacks.items);\r\n      });\r\n\t  \r\n\t   \r\n\t}\r\n\t\r\n\tdeleteFeedback(id: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('vdr-feedback-plugin.confirm-delete-feedback'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.mutate<DeleteFeedback.Mutation,DeleteFeedback.Variables>(DELETE_FEEDBACK,{\"input\":id}) : EMPTY)),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Feedback',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { FEEDBACK_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const UPDATE_FEEDBACK = gql`\r\n    mutation UpdateFeedback($input: FeedbackUpdateInput!) {\r\n        updateFeedback(input: $input) {\r\n            ...Feedbacks\r\n        }\r\n    }\r\n    ${FEEDBACK_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_FEEDBACK = gql`\r\n    mutation CreateFeedback($input: FeedbackAddInput!) {\r\n        addFeedback(input: $input) {\r\n            ...Feedbacks\r\n        }\r\n    }\r\n    ${FEEDBACK_FRAGMENT}\r\n`;","<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <button\r\n            class=\"btn btn-primary\"\r\n\t\t\tid=\"custbtn\"\r\n            *ngIf=\"which; else updateButton\"\r\n            (click)=\"create()\"\r\n            [disabled]=\"!(detailForm.valid && detailForm.dirty)\"\r\n        >\r\n            {{ 'common.create' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n\t\t\t\tid=\"editbtn\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"!(detailForm.valid && detailForm.dirty)\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-form-field [label]=\"'vdr-feedback-plugin.name-label' | translate\" for=\"email\">\r\n        <input id=\"name\" type=\"text\" formControlName=\"name\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n\t<vdr-form-field [label]=\"'vdr-feedback-plugin.email-label' | translate\" for=\"email\">\r\n        <input id=\"email\" type=\"email\" formControlName=\"email\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n\t    <vdr-form-field [label]=\"'vdr-feedback-plugin.phone-label' | translate\" for=\"email\">\r\n        <input id=\"phone\" type=\"number\" formControlName=\"phone\" [readonly]=\"!'UpdateSettings'\" />\r\n    </vdr-form-field>\r\n\t    <vdr-form-field [label]=\"'vdr-feedback-plugin.feedback-label' | translate\" for=\"email\">\r\n        <!--input id=\"feedback\" type=\"text\" formControlName=\"feedback\" [readonly]=\"!'UpdateSettings'\" /-->\r\n\t\t<textarea id=\"feedback\" formControlName=\"feedback\" [readonly]=\"!'UpdateSettings'\">\r\n\t\t</textarea>\r\n    </vdr-form-field>\r\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    BaseDetailComponent,\r\n    DataService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, mapTo, switchMap } from 'rxjs/operators';\r\n\r\nimport { \r\n   CreateFeedback,\r\n   FeedbacksFragment,\r\n   UpdateFeedback,\r\n   FeedbackAddInput,\r\n   FeedbackUpdateInput\r\n} from '../../generated-types';\r\n\r\nimport { CREATE_FEEDBACK,UPDATE_FEEDBACK } from './feedback-detail.graphql';\r\n\r\n@Component({\r\n    selector: 'vdr-feedback-detail',\r\n    templateUrl: './feedback-detail.component.html',\r\n    styleUrls: ['./feedback-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\n\r\nexport class FeedbackDetailComponent extends BaseDetailComponent<FeedbacksFragment>\r\n    implements OnInit, OnDestroy {\r\n    detailForm: FormGroup;\r\n\twhich = false;\r\n\t\r\n\tconstructor(\r\n        route: ActivatedRoute,\r\n        router: Router,\r\n        serverConfigService: ServerConfigService,\r\n        private formBuilder: FormBuilder,\r\n        protected dataService: DataService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        \r\n\t\tthis.detailForm = this.formBuilder.group({\r\n            name: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\tfeedback: ['',Validators.required]\r\n        });\r\n\t\t\r\n    }\r\n\t\r\n\tngOnInit() {\r\n\t\tif(this.router.url!='/extensions/feedbacks/create'){\r\n\t\t  this.which=false;\r\n\t\t  this.init();\r\n\t\t}else{\r\n\t\t   this.which=true;\r\n\t\t}\r\n    }\r\n\t\r\n\tngOnDestroy() {\r\n      this.destroy();\r\n    }\r\n\t\r\n\tcreate(){\r\n\t   this.addNew()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-create-success', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-create-error', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n            );\r\n\t}\r\n\t\r\n\tsave() {\r\n        this.saveChanges()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-update-success', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-update-error', {\r\n                        entity: 'Feedback',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\t\r\n\tprivate addNew(): Observable<boolean>{\r\n\t   if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n            const input: FeedbackAddInput = {\r\n\t\t\t\tname: formValue.name || \"Anonymous\",\r\n                email: formValue.email || \"Anonymous\",\r\n\t\t\t\tphone: formValue.phone.toString() || \"Anonymous\",\r\n\t\t\t\tfeedback: formValue.feedback\r\n            };\r\n            return this.dataService\r\n                .mutate<CreateFeedback.Mutation,CreateFeedback.Variables>(CREATE_FEEDBACK, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n\t}\r\n\t\r\n\tprivate saveChanges(): Observable<boolean> {\r\n        if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n            const input: FeedbackUpdateInput = {\r\n                id: this.id,\r\n                name: formValue.name || \"Anonymous\",\r\n                email: formValue.email || \"Anonymous\",\r\n\t\t\t\tphone: formValue.phone.toString() || \"Anonymous\",\r\n\t\t\t\tfeedback: formValue.feedback\r\n            };\r\n            return this.dataService\r\n                .mutate<UpdateFeedback.Mutation,UpdateFeedback.Variables>(UPDATE_FEEDBACK, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n    }\r\n\t\r\n\tprotected setFormValues(entity: FeedbacksFragment) {\r\n\t\t  let datas = <any>{};\r\n\t\t  \r\n\t\t  if(entity.name==\"Anonymous\"){\r\n\t\t      datas.name=\"\"\r\n\t\t  }\r\n\t\t  \r\n\t\t  if(entity.email==\"Anonymous\"){\r\n\t\t      datas.email=\"\"\r\n\t\t  }\r\n\t\t  \r\n\t\t  if(entity.phone==\"Anonymous\"){\r\n\t\t      datas.phone=\"\"\r\n\t\t  }else{\r\n\t\t       datas.phone=parseInt(datas.phone)\r\n\t\t  }\r\n\t\t  \r\n\t\t  datas.feedback=entity.feedback;\r\n\t\t  this.detailForm.patchValue(datas);\r\n\t}\r\n    \r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { FEEDBACK_FRAGMENT } from '../../../common/fragments.graphql';\r\n\r\nexport const GET_FEEDBACK = gql`\r\n  query GetFeedback($id: ID!) {\r\n    Feedback(id: $id) {\r\n      ...Feedbacks\r\n    }\r\n  }\r\n  ${FEEDBACK_FRAGMENT}\r\n`;","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService, BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { GET_FEEDBACK } from './feedback-detail-resolver.graphql';\r\n\r\nimport { \r\n  GetFeedbackQuery,\r\n  FeedbacksFragment,\r\n  GetFeedbackQueryVariables\r\n} from '../../../generated-types';\r\n\r\n@Injectable()\r\nexport default class FeedbackDetailResolver extends BaseEntityResolver<\r\n  FeedbacksFragment\r\n> {\r\n  constructor(router: Router, dataService: DataService) {\r\n    super(\r\n      router,\r\n      {\r\n        __typename: 'Feedback',\r\n        id: '',\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\tfeedback: '',\r\n\t\tcreatedAt: '',\r\n\t\tupdatedAt: '',\r\n      },\r\n      (id) =>\r\n        dataService.query<GetFeedbackQuery, GetFeedbackQueryVariables>(GET_FEEDBACK, {\r\n            id: id\r\n        })\r\n        .mapStream((data) => data.Feedback)\r\n    );\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule, createResolveData } from '@vendure/admin-ui/core';\r\nimport { AllFeedbacksListComponent } from './components/all-feedbacks-list/all-feedbacks-list.component';\r\nimport { FeedbackDetailComponent } from './components/feedback-detail/feedback-detail.component';\r\n\r\nimport FeedbackDetailResolver from './providers/routing/feedback-detail/feedback-detail-resolver';\r\nimport { FeedbacksFragment } from './generated-types';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n\t{\r\n      path: '',\r\n      pathMatch: 'full',\r\n      component: AllFeedbacksListComponent ,\r\n      data: { breadcrumb: 'Feedbacks' },\r\n    },\r\n\t{\r\n\t  path: 'create',\r\n      component: FeedbackDetailComponent,\r\n      data: {breadcrumb: [\r\n             {\r\n                label: 'Feedbacks',\r\n                link: ['/extensions', 'feedbacks'],\r\n\t\t\t\trequiresPermission: 'SuperAdmin',\r\n             },\r\n             {\r\n                label: 'Create Feedback',\r\n                link: [],\r\n\t\t\t\trequiresPermission: 'SuperAdmin',\r\n             }\r\n\t       ]\r\n\t     } \r\n\t},\r\n    {\r\n       path: ':id',\r\n       component: FeedbackDetailComponent,\r\n       resolve: createResolveData(FeedbackDetailResolver),\r\n       data: { breadcrumb: feedbackDetailBreadcrumb },\r\n    }\r\n\t]),\r\n  ],\r\n  declarations: [\r\n    AllFeedbacksListComponent,\r\n\tFeedbackDetailComponent\r\n  ],\r\n  providers:[FeedbackDetailResolver],\r\n})\r\nexport class FeedbackUIModule {}\r\n\r\nexport function feedbackDetailBreadcrumb(resolved: { entity: Observable<FeedbacksFragment> }) {\r\n\treturn resolved.entity.pipe(\r\n        map(entity => [\r\n            {\r\n                label: 'Feedbacks',\r\n                link: ['/extensions', 'feedbacks'],\r\n\t\t\t\trequiresPermission: 'SuperAdmin',\r\n            },\r\n            {\r\n                label: 'Update Feedback',\r\n                link: [],\r\n\t\t\t\trequiresPermission: 'SuperAdmin',\r\n            },\r\n        ]),\r\n    );\r\n}\r\n"]}