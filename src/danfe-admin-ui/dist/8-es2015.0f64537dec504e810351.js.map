{"version":3,"sources":["webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/generated-types.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/common/fragments.graphql.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/all-product-reviews-list/all-product-reviews-list.graphql.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/review-state-label/review-state-label.component.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/review-state-label/review-state-label.component.html","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/all-product-reviews-list/all-product-reviews-list.component.html","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/all-product-reviews-list/all-product-reviews-list.component.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/product-review-detail/product-review-detail.graphql.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/product-review-detail/product-review-detail.component.html","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/product-review-detail/product-review-detail.component.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/product-reviews-list/product-reviews-list.graphql.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/review-histogram/review-histogram.component.html","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/review-histogram/review-histogram.component.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/product-reviews-list/product-reviews-list.component.html","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/components/product-reviews-list/product-reviews-list.component.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/providers/routing/product-reviews-resolver.graphql.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/providers/routing/product-reviews-resolver.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/providers/routing/review-detail-resolver.graphql.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/providers/routing/review-detail-resolver.ts","webpack:///src/extensions/840972a46552899ed7afef3fc466fbca27d3b45c6bb2d306017d7ba2f255b732/reviews-ui-lazy.module.ts"],"names":["AdjustmentType","AssetType","CurrencyCode","DeletionResult","HistoryEntryType","JobState","LanguageCode","Permission","SortOrder","StockMovementType","Tax","Promotion","Shipping","Refund","TaxRefund","PromotionRefund","ShippingRefund","Image","Video","Binary","Aed","Afn","All","Amd","Ang","Aoa","Ars","Aud","Awg","Azn","Bam","Bbd","Bdt","Bgn","Bhd","Bif","Bmd","Bnd","Bob","Brl","Bsd","Btn","Bwp","Byn","Bzd","Cad","Che","Chw","Clp","Cny","Cop","Crc","Cuc","Cup","Cve","Czk","Djf","Dkk","Dop","Dzd","Egp","Ern","Etb","Eur","Fjd","Fkp","Gbp","Gel","Ghs","Gip","Gmd","Gnf","Gtq","Gyd","Hkd","Hnl","Hrk","Htg","Huf","Idr","Ils","Inr","Iqd","Irr","Isk","Jmd","Jod","Jpy","Kes","Kgs","Khr","Kmf","Kpw","Krw","Kwd","Kyd","Kzt","Lak","Lbp","Lkr","Lrd","Lsl","Lyd","Mad","Mdl","Mga","Mkd","Mmk","Mnt","Mop","Mru","Mur","Mvr","Mwk","Mxn","Myr","Mzn","Nad","Ngn","Nio","Nok","Npr","Nzd","Omr","Pab","Pen","Pgk","Php","Pkr","Pln","Pyg","Qar","Ron","Rsd","Rub","Rwf","Sar","Sbd","Scr","Sdg","Sek","Sgd","Shp","Sll","Sos","Srd","Ssp","Stn","Svc","Syp","Szl","Thb","Tjs","Tmt","Tnd","Top","Try","Ttd","Twd","Tzs","Uah","Ugx","Usd","Uyu","Uzs","Ves","Vnd","Vuv","Wst","Xaf","Xcd","Xof","Xpf","Yer","Zar","Zmw","Zwl","Deleted","NotDeleted","OrderStateTransition","OrderPaymentTransition","OrderFullfillment","OrderCancellation","OrderRefundTransition","OrderNote","OrderCouponApplied","OrderCouponRemoved","Pending","Running","Completed","Failed","Aa","Ab","Af","Ak","Sq","Am","Ar","An","Hy","As","Av","Ae","Ay","Az","Ba","Bm","Eu","Be","Bn","Bh","Bi","Bs","Br","Bg","My","Ca","Ch","Ce","Zh","Cu","Cv","Kw","Co","Cr","Cs","Da","Dv","Nl","Dz","En","Eo","Et","Ee","Fo","Fj","Fi","Fr","Fy","Ff","Ka","De","Gd","Ga","Gl","Gv","El","Gn","Gu","Ht","Ha","He","Hz","Hi","Ho","Hr","Hu","Ig","Is","Io","Ii","Iu","Ie","Ia","Id","Ik","It","Jv","Ja","Kl","Kn","Ks","Kr","Kk","Km","Ki","Rw","Ky","Kv","Kg","Ko","Kj","Ku","Lo","La","Lv","Li","Ln","Lt","Lb","Lu","Lg","Mk","Mh","Ml","Mi","Mr","Ms","Mg","Mt","Mn","Na","Nv","Nr","Nd","Ng","Ne","Nn","Nb","No","Ny","Oc","Oj","Or","Om","Os","Pa","Fa","Pi","Pl","Pt","Ps","Qu","Rm","Ro","Rn","Ru","Sg","Sa","Si","Sk","Sl","Se","Sm","Sn","Sd","So","St","Es","Sc","Sr","Ss","Su","Sw","Sv","Ty","Ta","Tt","Te","Tg","Tl","Th","Bo","Ti","To","Tn","Ts","Tk","Tr","Tw","Ug","Uk","Ur","Uz","Ve","Vi","Vo","Cy","Wa","Wo","Xh","Yi","Yo","Za","Zu","Authenticated","SuperAdmin","Owner","Public","CreateCatalog","ReadCatalog","UpdateCatalog","DeleteCatalog","CreateCustomer","ReadCustomer","UpdateCustomer","DeleteCustomer","CreateAdministrator","ReadAdministrator","UpdateAdministrator","DeleteAdministrator","CreateOrder","ReadOrder","UpdateOrder","DeleteOrder","CreatePromotion","ReadPromotion","UpdatePromotion","DeletePromotion","CreateSettings","ReadSettings","UpdateSettings","DeleteSettings","Asc","Desc","Adjustment","Sale","Cancellation","Return","PRODUCT_REVIEW_FRAGMENT","GET_ALL_REVIEWS","ReviewStateLabelComponent","state","dataService","router","route","super","filteredState","setQueryFn","args","this","query","data","productReviews","skip","take","productId","snapshot","paramMap","get","options","sort","createdAt","filter","eq","refresh","setPageNumber","setItemsPerPage","UPDATE_REVIEW","APPROVE_REVIEW","REJECT_REVIEW","serverConfigService","formBuilder","changeDetector","notificationService","detailForm","group","summary","required","body","rating","authorName","authorLocation","response","init","reviewState$","entity$","pipe","map","review","saveChanges","switchMap","mutate","id","subscribe","markAsPristine","markForCheck","success","error","result","entity","dirty","formValue","value","input","mapTo","of","patchValue","GET_REVIEWS_FOR_PRODUCT","GET_PRODUCT_PREVIEW_AND_HISTOGRAM","binData","filterChange","bins","filteredBin","max","Math","d","frequency","bin","find","round","emit","product","reviews","filteredRating","ngOnInit","productWithHistogram$","single$","shareReplay","histogramBinData$","reviewsHistogram","product$","applyRatingFilters","GET_PRODUCT_NAME","mapSingle","GET_REVIEW","stream","mapStream","productReview","ReviewsUiLazyModule","productReviewsBreadcrumb","resolved","params","label","link","name","reviewDetailBreadcrumb","forChild","path","component","resolve","breadcrumb","pathMatch"],"mappings":"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","file":"x","sourcesContent":["// tslint:disable\r\nexport type Maybe<T> = T | null;\r\n\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string,\r\n  String: string,\r\n  Boolean: boolean,\r\n  Int: number,\r\n  Float: number,\r\n  /** \r\n * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\r\n   * `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\r\n   * 8601 standard for representation of dates and times using the Gregorian calendar.\r\n **/\r\n  DateTime: any,\r\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\r\n  JSON: any,\r\n  /** The `Upload` scalar type represents a file upload. */\r\n  Upload: any,\r\n};\r\n\r\nexport type AddNoteToOrderInput = {\r\n  id: Scalars['ID'],\r\n  note: Scalars['String'],\r\n  isPublic: Scalars['Boolean'],\r\n};\r\n\r\nexport type Address = Node & {\r\n   __typename?: 'Address',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  fullName?: Maybe<Scalars['String']>,\r\n  company?: Maybe<Scalars['String']>,\r\n  streetLine1: Scalars['String'],\r\n  streetLine2?: Maybe<Scalars['String']>,\r\n  city?: Maybe<Scalars['String']>,\r\n  province?: Maybe<Scalars['String']>,\r\n  postalCode?: Maybe<Scalars['String']>,\r\n  country: Country,\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>,\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type Adjustment = {\r\n   __typename?: 'Adjustment',\r\n  adjustmentSource: Scalars['String'],\r\n  type: AdjustmentType,\r\n  description: Scalars['String'],\r\n  amount: Scalars['Int'],\r\n};\r\n\r\nexport enum AdjustmentType {\r\n  Tax = 'TAX',\r\n  Promotion = 'PROMOTION',\r\n  Shipping = 'SHIPPING',\r\n  Refund = 'REFUND',\r\n  TaxRefund = 'TAX_REFUND',\r\n  PromotionRefund = 'PROMOTION_REFUND',\r\n  ShippingRefund = 'SHIPPING_REFUND'\r\n}\r\n\r\nexport type Administrator = Node & {\r\n   __typename?: 'Administrator',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  firstName: Scalars['String'],\r\n  lastName: Scalars['String'],\r\n  emailAddress: Scalars['String'],\r\n  user: User,\r\n};\r\n\r\nexport type AdministratorFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  firstName?: Maybe<StringOperators>,\r\n  lastName?: Maybe<StringOperators>,\r\n  emailAddress?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type AdministratorList = PaginatedList & {\r\n   __typename?: 'AdministratorList',\r\n  items: Array<Administrator>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type AdministratorListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<AdministratorSortParameter>,\r\n  filter?: Maybe<AdministratorFilterParameter>,\r\n};\r\n\r\nexport type AdministratorSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  firstName?: Maybe<SortOrder>,\r\n  lastName?: Maybe<SortOrder>,\r\n  emailAddress?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type Asset = Node & {\r\n   __typename?: 'Asset',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  name: Scalars['String'],\r\n  type: AssetType,\r\n  fileSize: Scalars['Int'],\r\n  mimeType: Scalars['String'],\r\n  width: Scalars['Int'],\r\n  height: Scalars['Int'],\r\n  source: Scalars['String'],\r\n  preview: Scalars['String'],\r\n};\r\n\r\nexport type AssetFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  type?: Maybe<StringOperators>,\r\n  fileSize?: Maybe<NumberOperators>,\r\n  mimeType?: Maybe<StringOperators>,\r\n  width?: Maybe<NumberOperators>,\r\n  height?: Maybe<NumberOperators>,\r\n  source?: Maybe<StringOperators>,\r\n  preview?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type AssetList = PaginatedList & {\r\n   __typename?: 'AssetList',\r\n  items: Array<Asset>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type AssetListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<AssetSortParameter>,\r\n  filter?: Maybe<AssetFilterParameter>,\r\n};\r\n\r\nexport type AssetSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n  fileSize?: Maybe<SortOrder>,\r\n  mimeType?: Maybe<SortOrder>,\r\n  width?: Maybe<SortOrder>,\r\n  height?: Maybe<SortOrder>,\r\n  source?: Maybe<SortOrder>,\r\n  preview?: Maybe<SortOrder>,\r\n};\r\n\r\nexport enum AssetType {\r\n  Image = 'IMAGE',\r\n  Video = 'VIDEO',\r\n  Binary = 'BINARY'\r\n}\r\n\r\nexport type AssignProductsToChannelInput = {\r\n  productIds: Array<Scalars['ID']>,\r\n  channelId: Scalars['ID'],\r\n  priceFactor?: Maybe<Scalars['Float']>,\r\n};\r\n\r\nexport type BooleanCustomFieldConfig = CustomField & {\r\n   __typename?: 'BooleanCustomFieldConfig',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n};\r\n\r\nexport type BooleanOperators = {\r\n  eq?: Maybe<Scalars['Boolean']>,\r\n};\r\n\r\nexport type Cancellation = Node & StockMovement & {\r\n   __typename?: 'Cancellation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  productVariant: ProductVariant,\r\n  type: StockMovementType,\r\n  quantity: Scalars['Int'],\r\n  orderLine: OrderLine,\r\n};\r\n\r\nexport type CancelOrderInput = {\r\n  /** The id of the order to be cancelled */\r\n  orderId: Scalars['ID'],\r\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\r\n  lines?: Maybe<Array<OrderLineInput>>,\r\n  reason?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type Channel = Node & {\r\n   __typename?: 'Channel',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  code: Scalars['String'],\r\n  token: Scalars['String'],\r\n  defaultTaxZone?: Maybe<Zone>,\r\n  defaultShippingZone?: Maybe<Zone>,\r\n  defaultLanguageCode: LanguageCode,\r\n  currencyCode: CurrencyCode,\r\n  pricesIncludeTax: Scalars['Boolean'],\r\n};\r\n\r\nexport type Collection = Node & {\r\n   __typename?: 'Collection',\r\n  isPrivate: Scalars['Boolean'],\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode?: Maybe<LanguageCode>,\r\n  name: Scalars['String'],\r\n  breadcrumbs: Array<CollectionBreadcrumb>,\r\n  position: Scalars['Int'],\r\n  description: Scalars['String'],\r\n  featuredAsset?: Maybe<Asset>,\r\n  assets: Array<Asset>,\r\n  parent?: Maybe<Collection>,\r\n  children?: Maybe<Array<Collection>>,\r\n  filters: Array<ConfigurableOperation>,\r\n  translations: Array<CollectionTranslation>,\r\n  productVariants: ProductVariantList,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\n\r\nexport type CollectionProductVariantsArgs = {\r\n  options?: Maybe<ProductVariantListOptions>\r\n};\r\n\r\nexport type CollectionBreadcrumb = {\r\n   __typename?: 'CollectionBreadcrumb',\r\n  id: Scalars['ID'],\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type CollectionFilterParameter = {\r\n  isPrivate?: Maybe<BooleanOperators>,\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  languageCode?: Maybe<StringOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  position?: Maybe<NumberOperators>,\r\n  description?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type CollectionList = PaginatedList & {\r\n   __typename?: 'CollectionList',\r\n  items: Array<Collection>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type CollectionListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<CollectionSortParameter>,\r\n  filter?: Maybe<CollectionFilterParameter>,\r\n};\r\n\r\nexport type CollectionSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n  position?: Maybe<SortOrder>,\r\n  description?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type CollectionTranslation = {\r\n   __typename?: 'CollectionTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n  description: Scalars['String'],\r\n};\r\n\r\nexport type CollectionTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  description?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ConfigArg = {\r\n   __typename?: 'ConfigArg',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  value: Scalars['String'],\r\n};\r\n\r\nexport type ConfigArgDefinition = {\r\n   __typename?: 'ConfigArgDefinition',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Scalars['String']>,\r\n  description?: Maybe<Scalars['String']>,\r\n  config?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ConfigArgInput = {\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  value: Scalars['String'],\r\n};\r\n\r\nexport type ConfigurableOperation = {\r\n   __typename?: 'ConfigurableOperation',\r\n  code: Scalars['String'],\r\n  args: Array<ConfigArg>,\r\n};\r\n\r\nexport type ConfigurableOperationDefinition = {\r\n   __typename?: 'ConfigurableOperationDefinition',\r\n  code: Scalars['String'],\r\n  args: Array<ConfigArgDefinition>,\r\n  description: Scalars['String'],\r\n};\r\n\r\nexport type ConfigurableOperationInput = {\r\n  code: Scalars['String'],\r\n  arguments: Array<ConfigArgInput>,\r\n};\r\n\r\nexport type Country = Node & {\r\n   __typename?: 'Country',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  code: Scalars['String'],\r\n  name: Scalars['String'],\r\n  enabled: Scalars['Boolean'],\r\n  translations: Array<CountryTranslation>,\r\n};\r\n\r\nexport type CountryFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  languageCode?: Maybe<StringOperators>,\r\n  code?: Maybe<StringOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  enabled?: Maybe<BooleanOperators>,\r\n};\r\n\r\nexport type CountryList = PaginatedList & {\r\n   __typename?: 'CountryList',\r\n  items: Array<Country>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type CountryListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<CountrySortParameter>,\r\n  filter?: Maybe<CountryFilterParameter>,\r\n};\r\n\r\nexport type CountrySortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  code?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type CountryTranslation = {\r\n   __typename?: 'CountryTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type CountryTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type CreateAddressInput = {\r\n  fullName?: Maybe<Scalars['String']>,\r\n  company?: Maybe<Scalars['String']>,\r\n  streetLine1: Scalars['String'],\r\n  streetLine2?: Maybe<Scalars['String']>,\r\n  city?: Maybe<Scalars['String']>,\r\n  province?: Maybe<Scalars['String']>,\r\n  postalCode?: Maybe<Scalars['String']>,\r\n  countryCode: Scalars['String'],\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>,\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateAdministratorInput = {\r\n  firstName: Scalars['String'],\r\n  lastName: Scalars['String'],\r\n  emailAddress: Scalars['String'],\r\n  password: Scalars['String'],\r\n  roleIds: Array<Scalars['ID']>,\r\n};\r\n\r\nexport type CreateAssetInput = {\r\n  file: Scalars['Upload'],\r\n};\r\n\r\nexport type CreateChannelInput = {\r\n  code: Scalars['String'],\r\n  token: Scalars['String'],\r\n  defaultLanguageCode: LanguageCode,\r\n  pricesIncludeTax: Scalars['Boolean'],\r\n  currencyCode: CurrencyCode,\r\n  defaultTaxZoneId?: Maybe<Scalars['ID']>,\r\n  defaultShippingZoneId?: Maybe<Scalars['ID']>,\r\n};\r\n\r\nexport type CreateCollectionInput = {\r\n  isPrivate?: Maybe<Scalars['Boolean']>,\r\n  featuredAssetId?: Maybe<Scalars['ID']>,\r\n  assetIds?: Maybe<Array<Scalars['ID']>>,\r\n  parentId?: Maybe<Scalars['ID']>,\r\n  filters: Array<ConfigurableOperationInput>,\r\n  translations: Array<CollectionTranslationInput>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateCountryInput = {\r\n  code: Scalars['String'],\r\n  translations: Array<CountryTranslationInput>,\r\n  enabled: Scalars['Boolean'],\r\n};\r\n\r\nexport type CreateCustomerGroupInput = {\r\n  name: Scalars['String'],\r\n  customerIds?: Maybe<Array<Scalars['ID']>>,\r\n};\r\n\r\nexport type CreateCustomerInput = {\r\n  title?: Maybe<Scalars['String']>,\r\n  firstName: Scalars['String'],\r\n  lastName: Scalars['String'],\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n  emailAddress: Scalars['String'],\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateFacetInput = {\r\n  code: Scalars['String'],\r\n  isPrivate: Scalars['Boolean'],\r\n  translations: Array<FacetTranslationInput>,\r\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateFacetValueInput = {\r\n  facetId: Scalars['ID'],\r\n  code: Scalars['String'],\r\n  translations: Array<FacetValueTranslationInput>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateFacetValueWithFacetInput = {\r\n  code: Scalars['String'],\r\n  translations: Array<FacetValueTranslationInput>,\r\n};\r\n\r\nexport type CreateGroupOptionInput = {\r\n  code: Scalars['String'],\r\n  translations: Array<ProductOptionGroupTranslationInput>,\r\n};\r\n\r\nexport type CreateProductCustomFieldsInput = {\r\n  reviewRating?: Maybe<Scalars['Float']>,\r\n  reviewCount?: Maybe<Scalars['Float']>,\r\n};\r\n\r\nexport type CreateProductInput = {\r\n  featuredAssetId?: Maybe<Scalars['ID']>,\r\n  assetIds?: Maybe<Array<Scalars['ID']>>,\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>,\r\n  translations: Array<ProductTranslationInput>,\r\n  customFields?: Maybe<CreateProductCustomFieldsInput>,\r\n};\r\n\r\nexport type CreateProductOptionGroupInput = {\r\n  code: Scalars['String'],\r\n  translations: Array<ProductOptionGroupTranslationInput>,\r\n  options: Array<CreateGroupOptionInput>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateProductOptionInput = {\r\n  productOptionGroupId: Scalars['ID'],\r\n  code: Scalars['String'],\r\n  translations: Array<ProductOptionGroupTranslationInput>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateProductVariantInput = {\r\n  productId: Scalars['ID'],\r\n  translations: Array<ProductVariantTranslationInput>,\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>,\r\n  sku: Scalars['String'],\r\n  price?: Maybe<Scalars['Int']>,\r\n  taxCategoryId?: Maybe<Scalars['ID']>,\r\n  optionIds?: Maybe<Array<Scalars['ID']>>,\r\n  featuredAssetId?: Maybe<Scalars['ID']>,\r\n  assetIds?: Maybe<Array<Scalars['ID']>>,\r\n  stockOnHand?: Maybe<Scalars['Int']>,\r\n  trackInventory?: Maybe<Scalars['Boolean']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type CreateProductVariantOptionInput = {\r\n  optionGroupId: Scalars['ID'],\r\n  code: Scalars['String'],\r\n  translations: Array<ProductOptionTranslationInput>,\r\n};\r\n\r\nexport type CreatePromotionInput = {\r\n  name: Scalars['String'],\r\n  enabled: Scalars['Boolean'],\r\n  startsAt?: Maybe<Scalars['DateTime']>,\r\n  endsAt?: Maybe<Scalars['DateTime']>,\r\n  couponCode?: Maybe<Scalars['String']>,\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>,\r\n  conditions: Array<ConfigurableOperationInput>,\r\n  actions: Array<ConfigurableOperationInput>,\r\n};\r\n\r\nexport type CreateRoleInput = {\r\n  code: Scalars['String'],\r\n  description: Scalars['String'],\r\n  permissions: Array<Permission>,\r\n  channelIds?: Maybe<Array<Scalars['ID']>>,\r\n};\r\n\r\nexport type CreateShippingMethodInput = {\r\n  code: Scalars['String'],\r\n  description: Scalars['String'],\r\n  checker: ConfigurableOperationInput,\r\n  calculator: ConfigurableOperationInput,\r\n};\r\n\r\nexport type CreateTaxCategoryInput = {\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type CreateTaxRateInput = {\r\n  name: Scalars['String'],\r\n  enabled: Scalars['Boolean'],\r\n  value: Scalars['Int'],\r\n  categoryId: Scalars['ID'],\r\n  zoneId: Scalars['ID'],\r\n  customerGroupId?: Maybe<Scalars['ID']>,\r\n};\r\n\r\nexport type CreateZoneInput = {\r\n  name: Scalars['String'],\r\n  memberIds?: Maybe<Array<Scalars['ID']>>,\r\n};\r\n\r\n/** \r\n * @description\r\n * ISO 4217 currency code\r\n * \r\n * @docsCategory common\r\n **/\r\nexport enum CurrencyCode {\r\n  /** United Arab Emirates dirham */\r\n  Aed = 'AED',\r\n  /** Afghan afghani */\r\n  Afn = 'AFN',\r\n  /** Albanian lek */\r\n  All = 'ALL',\r\n  /** Armenian dram */\r\n  Amd = 'AMD',\r\n  /** Netherlands Antillean guilder */\r\n  Ang = 'ANG',\r\n  /** Angolan kwanza */\r\n  Aoa = 'AOA',\r\n  /** Argentine peso */\r\n  Ars = 'ARS',\r\n  /** Australian dollar */\r\n  Aud = 'AUD',\r\n  /** Aruban florin */\r\n  Awg = 'AWG',\r\n  /** Azerbaijani manat */\r\n  Azn = 'AZN',\r\n  /** Bosnia and Herzegovina convertible mark */\r\n  Bam = 'BAM',\r\n  /** Barbados dollar */\r\n  Bbd = 'BBD',\r\n  /** Bangladeshi taka */\r\n  Bdt = 'BDT',\r\n  /** Bulgarian lev */\r\n  Bgn = 'BGN',\r\n  /** Bahraini dinar */\r\n  Bhd = 'BHD',\r\n  /** Burundian franc */\r\n  Bif = 'BIF',\r\n  /** Bermudian dollar */\r\n  Bmd = 'BMD',\r\n  /** Brunei dollar */\r\n  Bnd = 'BND',\r\n  /** Boliviano */\r\n  Bob = 'BOB',\r\n  /** Brazilian real */\r\n  Brl = 'BRL',\r\n  /** Bahamian dollar */\r\n  Bsd = 'BSD',\r\n  /** Bhutanese ngultrum */\r\n  Btn = 'BTN',\r\n  /** Botswana pula */\r\n  Bwp = 'BWP',\r\n  /** Belarusian ruble */\r\n  Byn = 'BYN',\r\n  /** Belize dollar */\r\n  Bzd = 'BZD',\r\n  /** Canadian dollar */\r\n  Cad = 'CAD',\r\n  /** Congolese franc */\r\n  Che = 'CHE',\r\n  /** Swiss franc */\r\n  Chw = 'CHW',\r\n  /** Chilean peso */\r\n  Clp = 'CLP',\r\n  /** Renminbi (Chinese) yuan */\r\n  Cny = 'CNY',\r\n  /** Colombian peso */\r\n  Cop = 'COP',\r\n  /** Costa Rican colon */\r\n  Crc = 'CRC',\r\n  /** Cuban convertible peso */\r\n  Cuc = 'CUC',\r\n  /** Cuban peso */\r\n  Cup = 'CUP',\r\n  /** Cape Verde escudo */\r\n  Cve = 'CVE',\r\n  /** Czech koruna */\r\n  Czk = 'CZK',\r\n  /** Djiboutian franc */\r\n  Djf = 'DJF',\r\n  /** Danish krone */\r\n  Dkk = 'DKK',\r\n  /** Dominican peso */\r\n  Dop = 'DOP',\r\n  /** Algerian dinar */\r\n  Dzd = 'DZD',\r\n  /** Egyptian pound */\r\n  Egp = 'EGP',\r\n  /** Eritrean nakfa */\r\n  Ern = 'ERN',\r\n  /** Ethiopian birr */\r\n  Etb = 'ETB',\r\n  /** Euro */\r\n  Eur = 'EUR',\r\n  /** Fiji dollar */\r\n  Fjd = 'FJD',\r\n  /** Falkland Islands pound */\r\n  Fkp = 'FKP',\r\n  /** Pound sterling */\r\n  Gbp = 'GBP',\r\n  /** Georgian lari */\r\n  Gel = 'GEL',\r\n  /** Ghanaian cedi */\r\n  Ghs = 'GHS',\r\n  /** Gibraltar pound */\r\n  Gip = 'GIP',\r\n  /** Gambian dalasi */\r\n  Gmd = 'GMD',\r\n  /** Guinean franc */\r\n  Gnf = 'GNF',\r\n  /** Guatemalan quetzal */\r\n  Gtq = 'GTQ',\r\n  /** Guyanese dollar */\r\n  Gyd = 'GYD',\r\n  /** Hong Kong dollar */\r\n  Hkd = 'HKD',\r\n  /** Honduran lempira */\r\n  Hnl = 'HNL',\r\n  /** Croatian kuna */\r\n  Hrk = 'HRK',\r\n  /** Haitian gourde */\r\n  Htg = 'HTG',\r\n  /** Hungarian forint */\r\n  Huf = 'HUF',\r\n  /** Indonesian rupiah */\r\n  Idr = 'IDR',\r\n  /** Israeli new shekel */\r\n  Ils = 'ILS',\r\n  /** Indian rupee */\r\n  Inr = 'INR',\r\n  /** Iraqi dinar */\r\n  Iqd = 'IQD',\r\n  /** Iranian rial */\r\n  Irr = 'IRR',\r\n  /** Icelandic króna */\r\n  Isk = 'ISK',\r\n  /** Jamaican dollar */\r\n  Jmd = 'JMD',\r\n  /** Jordanian dinar */\r\n  Jod = 'JOD',\r\n  /** Japanese yen */\r\n  Jpy = 'JPY',\r\n  /** Kenyan shilling */\r\n  Kes = 'KES',\r\n  /** Kyrgyzstani som */\r\n  Kgs = 'KGS',\r\n  /** Cambodian riel */\r\n  Khr = 'KHR',\r\n  /** Comoro franc */\r\n  Kmf = 'KMF',\r\n  /** North Korean won */\r\n  Kpw = 'KPW',\r\n  /** South Korean won */\r\n  Krw = 'KRW',\r\n  /** Kuwaiti dinar */\r\n  Kwd = 'KWD',\r\n  /** Cayman Islands dollar */\r\n  Kyd = 'KYD',\r\n  /** Kazakhstani tenge */\r\n  Kzt = 'KZT',\r\n  /** Lao kip */\r\n  Lak = 'LAK',\r\n  /** Lebanese pound */\r\n  Lbp = 'LBP',\r\n  /** Sri Lankan rupee */\r\n  Lkr = 'LKR',\r\n  /** Liberian dollar */\r\n  Lrd = 'LRD',\r\n  /** Lesotho loti */\r\n  Lsl = 'LSL',\r\n  /** Libyan dinar */\r\n  Lyd = 'LYD',\r\n  /** Moroccan dirham */\r\n  Mad = 'MAD',\r\n  /** Moldovan leu */\r\n  Mdl = 'MDL',\r\n  /** Malagasy ariary */\r\n  Mga = 'MGA',\r\n  /** Macedonian denar */\r\n  Mkd = 'MKD',\r\n  /** Myanmar kyat */\r\n  Mmk = 'MMK',\r\n  /** Mongolian tögrög */\r\n  Mnt = 'MNT',\r\n  /** Macanese pataca */\r\n  Mop = 'MOP',\r\n  /** Mauritanian ouguiya */\r\n  Mru = 'MRU',\r\n  /** Mauritian rupee */\r\n  Mur = 'MUR',\r\n  /** Maldivian rufiyaa */\r\n  Mvr = 'MVR',\r\n  /** Malawian kwacha */\r\n  Mwk = 'MWK',\r\n  /** Mexican peso */\r\n  Mxn = 'MXN',\r\n  /** Malaysian ringgit */\r\n  Myr = 'MYR',\r\n  /** Mozambican metical */\r\n  Mzn = 'MZN',\r\n  /** Namibian dollar */\r\n  Nad = 'NAD',\r\n  /** Nigerian naira */\r\n  Ngn = 'NGN',\r\n  /** Nicaraguan córdoba */\r\n  Nio = 'NIO',\r\n  /** Norwegian krone */\r\n  Nok = 'NOK',\r\n  /** Nepalese rupee */\r\n  Npr = 'NPR',\r\n  /** New Zealand dollar */\r\n  Nzd = 'NZD',\r\n  /** Omani rial */\r\n  Omr = 'OMR',\r\n  /** Panamanian balboa */\r\n  Pab = 'PAB',\r\n  /** Peruvian sol */\r\n  Pen = 'PEN',\r\n  /** Papua New Guinean kina */\r\n  Pgk = 'PGK',\r\n  /** Philippine peso */\r\n  Php = 'PHP',\r\n  /** Pakistani rupee */\r\n  Pkr = 'PKR',\r\n  /** Polish złoty */\r\n  Pln = 'PLN',\r\n  /** Paraguayan guaraní */\r\n  Pyg = 'PYG',\r\n  /** Qatari riyal */\r\n  Qar = 'QAR',\r\n  /** Romanian leu */\r\n  Ron = 'RON',\r\n  /** Serbian dinar */\r\n  Rsd = 'RSD',\r\n  /** Russian ruble */\r\n  Rub = 'RUB',\r\n  /** Rwandan franc */\r\n  Rwf = 'RWF',\r\n  /** Saudi riyal */\r\n  Sar = 'SAR',\r\n  /** Solomon Islands dollar */\r\n  Sbd = 'SBD',\r\n  /** Seychelles rupee */\r\n  Scr = 'SCR',\r\n  /** Sudanese pound */\r\n  Sdg = 'SDG',\r\n  /** Swedish krona/kronor */\r\n  Sek = 'SEK',\r\n  /** Singapore dollar */\r\n  Sgd = 'SGD',\r\n  /** Saint Helena pound */\r\n  Shp = 'SHP',\r\n  /** Sierra Leonean leone */\r\n  Sll = 'SLL',\r\n  /** Somali shilling */\r\n  Sos = 'SOS',\r\n  /** Surinamese dollar */\r\n  Srd = 'SRD',\r\n  /** South Sudanese pound */\r\n  Ssp = 'SSP',\r\n  /** São Tomé and Príncipe dobra */\r\n  Stn = 'STN',\r\n  /** Salvadoran colón */\r\n  Svc = 'SVC',\r\n  /** Syrian pound */\r\n  Syp = 'SYP',\r\n  /** Swazi lilangeni */\r\n  Szl = 'SZL',\r\n  /** Thai baht */\r\n  Thb = 'THB',\r\n  /** Tajikistani somoni */\r\n  Tjs = 'TJS',\r\n  /** Turkmenistan manat */\r\n  Tmt = 'TMT',\r\n  /** Tunisian dinar */\r\n  Tnd = 'TND',\r\n  /** Tongan paʻanga */\r\n  Top = 'TOP',\r\n  /** Turkish lira */\r\n  Try = 'TRY',\r\n  /** Trinidad and Tobago dollar */\r\n  Ttd = 'TTD',\r\n  /** New Taiwan dollar */\r\n  Twd = 'TWD',\r\n  /** Tanzanian shilling */\r\n  Tzs = 'TZS',\r\n  /** Ukrainian hryvnia */\r\n  Uah = 'UAH',\r\n  /** Ugandan shilling */\r\n  Ugx = 'UGX',\r\n  /** United States dollar */\r\n  Usd = 'USD',\r\n  /** Uruguayan peso */\r\n  Uyu = 'UYU',\r\n  /** Uzbekistan som */\r\n  Uzs = 'UZS',\r\n  /** Venezuelan bolívar soberano */\r\n  Ves = 'VES',\r\n  /** Vietnamese đồng */\r\n  Vnd = 'VND',\r\n  /** Vanuatu vatu */\r\n  Vuv = 'VUV',\r\n  /** Samoan tala */\r\n  Wst = 'WST',\r\n  /** CFA franc BEAC */\r\n  Xaf = 'XAF',\r\n  /** East Caribbean dollar */\r\n  Xcd = 'XCD',\r\n  /** CFA franc BCEAO */\r\n  Xof = 'XOF',\r\n  /** CFP franc (franc Pacifique) */\r\n  Xpf = 'XPF',\r\n  /** Yemeni rial */\r\n  Yer = 'YER',\r\n  /** South African rand */\r\n  Zar = 'ZAR',\r\n  /** Zambian kwacha */\r\n  Zmw = 'ZMW',\r\n  /** Zimbabwean dollar */\r\n  Zwl = 'ZWL'\r\n}\r\n\r\nexport type CurrentUser = {\r\n   __typename?: 'CurrentUser',\r\n  id: Scalars['ID'],\r\n  identifier: Scalars['String'],\r\n  channels: Array<CurrentUserChannel>,\r\n};\r\n\r\nexport type CurrentUserChannel = {\r\n   __typename?: 'CurrentUserChannel',\r\n  id: Scalars['ID'],\r\n  token: Scalars['String'],\r\n  code: Scalars['String'],\r\n  permissions: Array<Permission>,\r\n};\r\n\r\nexport type Customer = Node & {\r\n   __typename?: 'Customer',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  title?: Maybe<Scalars['String']>,\r\n  firstName: Scalars['String'],\r\n  lastName: Scalars['String'],\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n  emailAddress: Scalars['String'],\r\n  addresses?: Maybe<Array<Address>>,\r\n  orders: OrderList,\r\n  user?: Maybe<User>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\n\r\nexport type CustomerOrdersArgs = {\r\n  options?: Maybe<OrderListOptions>\r\n};\r\n\r\nexport type CustomerFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  title?: Maybe<StringOperators>,\r\n  firstName?: Maybe<StringOperators>,\r\n  lastName?: Maybe<StringOperators>,\r\n  phoneNumber?: Maybe<StringOperators>,\r\n  emailAddress?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type CustomerGroup = Node & {\r\n   __typename?: 'CustomerGroup',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type CustomerList = PaginatedList & {\r\n   __typename?: 'CustomerList',\r\n  items: Array<Customer>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type CustomerListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<CustomerSortParameter>,\r\n  filter?: Maybe<CustomerFilterParameter>,\r\n};\r\n\r\nexport type CustomerSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  title?: Maybe<SortOrder>,\r\n  firstName?: Maybe<SortOrder>,\r\n  lastName?: Maybe<SortOrder>,\r\n  phoneNumber?: Maybe<SortOrder>,\r\n  emailAddress?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type CustomField = {\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n};\r\n\r\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig;\r\n\r\nexport type CustomFields = {\r\n   __typename?: 'CustomFields',\r\n  Address: Array<CustomFieldConfig>,\r\n  Collection: Array<CustomFieldConfig>,\r\n  Customer: Array<CustomFieldConfig>,\r\n  Facet: Array<CustomFieldConfig>,\r\n  FacetValue: Array<CustomFieldConfig>,\r\n  GlobalSettings: Array<CustomFieldConfig>,\r\n  Order: Array<CustomFieldConfig>,\r\n  OrderLine: Array<CustomFieldConfig>,\r\n  Product: Array<CustomFieldConfig>,\r\n  ProductOption: Array<CustomFieldConfig>,\r\n  ProductOptionGroup: Array<CustomFieldConfig>,\r\n  ProductVariant: Array<CustomFieldConfig>,\r\n  User: Array<CustomFieldConfig>,\r\n};\r\n\r\nexport type DateOperators = {\r\n  eq?: Maybe<Scalars['DateTime']>,\r\n  before?: Maybe<Scalars['DateTime']>,\r\n  after?: Maybe<Scalars['DateTime']>,\r\n  between?: Maybe<DateRange>,\r\n};\r\n\r\nexport type DateRange = {\r\n  start: Scalars['DateTime'],\r\n  end: Scalars['DateTime'],\r\n};\r\n\r\n\r\n/** \r\n * Expects the same validation formats as the <input type=\"datetime-local\"> HTML element.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\r\n **/\r\nexport type DateTimeCustomFieldConfig = CustomField & {\r\n   __typename?: 'DateTimeCustomFieldConfig',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n  min?: Maybe<Scalars['String']>,\r\n  max?: Maybe<Scalars['String']>,\r\n  step?: Maybe<Scalars['Int']>,\r\n};\r\n\r\nexport type DeletionResponse = {\r\n   __typename?: 'DeletionResponse',\r\n  result: DeletionResult,\r\n  message?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport enum DeletionResult {\r\n  /** The entity was successfully deleted */\r\n  Deleted = 'DELETED',\r\n  /** Deletion did not take place, reason given in message */\r\n  NotDeleted = 'NOT_DELETED'\r\n}\r\n\r\nexport type Facet = Node & {\r\n   __typename?: 'Facet',\r\n  isPrivate: Scalars['Boolean'],\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n  code: Scalars['String'],\r\n  values: Array<FacetValue>,\r\n  translations: Array<FacetTranslation>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type FacetFilterParameter = {\r\n  isPrivate?: Maybe<BooleanOperators>,\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  languageCode?: Maybe<StringOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  code?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type FacetList = PaginatedList & {\r\n   __typename?: 'FacetList',\r\n  items: Array<Facet>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type FacetListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<FacetSortParameter>,\r\n  filter?: Maybe<FacetFilterParameter>,\r\n};\r\n\r\nexport type FacetSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n  code?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type FacetTranslation = {\r\n   __typename?: 'FacetTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type FacetTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type FacetValue = Node & {\r\n   __typename?: 'FacetValue',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  facet: Facet,\r\n  name: Scalars['String'],\r\n  code: Scalars['String'],\r\n  translations: Array<FacetValueTranslation>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\n/** \r\n * Which FacetValues are present in the products returned\r\n * by the search, and in what quantity.\r\n **/\r\nexport type FacetValueResult = {\r\n   __typename?: 'FacetValueResult',\r\n  facetValue: FacetValue,\r\n  count: Scalars['Int'],\r\n};\r\n\r\nexport type FacetValueTranslation = {\r\n   __typename?: 'FacetValueTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type FacetValueTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type FloatCustomFieldConfig = CustomField & {\r\n   __typename?: 'FloatCustomFieldConfig',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n  min?: Maybe<Scalars['Float']>,\r\n  max?: Maybe<Scalars['Float']>,\r\n  step?: Maybe<Scalars['Float']>,\r\n};\r\n\r\nexport type Fulfillment = Node & {\r\n   __typename?: 'Fulfillment',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  orderItems: Array<OrderItem>,\r\n  method: Scalars['String'],\r\n  trackingCode?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type FulfillOrderInput = {\r\n  lines: Array<OrderLineInput>,\r\n  method: Scalars['String'],\r\n  trackingCode?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type GlobalSettings = {\r\n   __typename?: 'GlobalSettings',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  availableLanguages: Array<LanguageCode>,\r\n  trackInventory: Scalars['Boolean'],\r\n  serverConfig: ServerConfig,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type HistoryEntry = Node & {\r\n   __typename?: 'HistoryEntry',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  isPublic: Scalars['Boolean'],\r\n  type: HistoryEntryType,\r\n  administrator?: Maybe<Administrator>,\r\n  data: Scalars['JSON'],\r\n};\r\n\r\nexport type HistoryEntryFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  isPublic?: Maybe<BooleanOperators>,\r\n  type?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type HistoryEntryList = PaginatedList & {\r\n   __typename?: 'HistoryEntryList',\r\n  items: Array<HistoryEntry>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type HistoryEntryListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<HistoryEntrySortParameter>,\r\n  filter?: Maybe<HistoryEntryFilterParameter>,\r\n};\r\n\r\nexport type HistoryEntrySortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n};\r\n\r\nexport enum HistoryEntryType {\r\n  OrderStateTransition = 'ORDER_STATE_TRANSITION',\r\n  OrderPaymentTransition = 'ORDER_PAYMENT_TRANSITION',\r\n  OrderFullfillment = 'ORDER_FULLFILLMENT',\r\n  OrderCancellation = 'ORDER_CANCELLATION',\r\n  OrderRefundTransition = 'ORDER_REFUND_TRANSITION',\r\n  OrderNote = 'ORDER_NOTE',\r\n  OrderCouponApplied = 'ORDER_COUPON_APPLIED',\r\n  OrderCouponRemoved = 'ORDER_COUPON_REMOVED'\r\n}\r\n\r\nexport type ImportInfo = {\r\n   __typename?: 'ImportInfo',\r\n  errors?: Maybe<Array<Scalars['String']>>,\r\n  processed: Scalars['Int'],\r\n  imported: Scalars['Int'],\r\n};\r\n\r\nexport type IntCustomFieldConfig = CustomField & {\r\n   __typename?: 'IntCustomFieldConfig',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n  min?: Maybe<Scalars['Int']>,\r\n  max?: Maybe<Scalars['Int']>,\r\n  step?: Maybe<Scalars['Int']>,\r\n};\r\n\r\nexport type JobInfo = {\r\n   __typename?: 'JobInfo',\r\n  id: Scalars['String'],\r\n  name: Scalars['String'],\r\n  state: JobState,\r\n  progress: Scalars['Float'],\r\n  metadata?: Maybe<Scalars['JSON']>,\r\n  result?: Maybe<Scalars['JSON']>,\r\n  started?: Maybe<Scalars['DateTime']>,\r\n  ended?: Maybe<Scalars['DateTime']>,\r\n  duration?: Maybe<Scalars['Int']>,\r\n};\r\n\r\nexport type JobListInput = {\r\n  state?: Maybe<JobState>,\r\n  ids?: Maybe<Array<Scalars['String']>>,\r\n};\r\n\r\nexport enum JobState {\r\n  Pending = 'PENDING',\r\n  Running = 'RUNNING',\r\n  Completed = 'COMPLETED',\r\n  Failed = 'FAILED'\r\n}\r\n\r\n\r\n/** \r\n * @description\r\n * ISO 639-1 language code\r\n * \r\n * @docsCategory common\r\n **/\r\nexport enum LanguageCode {\r\n  /** Afar */\r\n  Aa = 'aa',\r\n  /** Abkhazian */\r\n  Ab = 'ab',\r\n  /** Afrikaans */\r\n  Af = 'af',\r\n  /** Akan */\r\n  Ak = 'ak',\r\n  /** Albanian */\r\n  Sq = 'sq',\r\n  /** Amharic */\r\n  Am = 'am',\r\n  /** Arabic */\r\n  Ar = 'ar',\r\n  /** Aragonese */\r\n  An = 'an',\r\n  /** Armenian */\r\n  Hy = 'hy',\r\n  /** Assamese */\r\n  As = 'as',\r\n  /** Avaric */\r\n  Av = 'av',\r\n  /** Avestan */\r\n  Ae = 'ae',\r\n  /** Aymara */\r\n  Ay = 'ay',\r\n  /** Azerbaijani */\r\n  Az = 'az',\r\n  /** Bashkir */\r\n  Ba = 'ba',\r\n  /** Bambara */\r\n  Bm = 'bm',\r\n  /** Basque */\r\n  Eu = 'eu',\r\n  /** Belarusian */\r\n  Be = 'be',\r\n  /** Bengali */\r\n  Bn = 'bn',\r\n  /** Bihari languages */\r\n  Bh = 'bh',\r\n  /** Bislama */\r\n  Bi = 'bi',\r\n  /** Bosnian */\r\n  Bs = 'bs',\r\n  /** Breton */\r\n  Br = 'br',\r\n  /** Bulgarian */\r\n  Bg = 'bg',\r\n  /** Burmese */\r\n  My = 'my',\r\n  /** Catalan; Valencian */\r\n  Ca = 'ca',\r\n  /** Chamorro */\r\n  Ch = 'ch',\r\n  /** Chechen */\r\n  Ce = 'ce',\r\n  /** Chinese */\r\n  Zh = 'zh',\r\n  /** Church Slavic; Old Slavonic; Church Slavonic; Old Bulgarian; Old Church Slavonic */\r\n  Cu = 'cu',\r\n  /** Chuvash */\r\n  Cv = 'cv',\r\n  /** Cornish */\r\n  Kw = 'kw',\r\n  /** Corsican */\r\n  Co = 'co',\r\n  /** Cree */\r\n  Cr = 'cr',\r\n  /** Czech */\r\n  Cs = 'cs',\r\n  /** Danish */\r\n  Da = 'da',\r\n  /** Divehi; Dhivehi; Maldivian */\r\n  Dv = 'dv',\r\n  /** Dutch; Flemish */\r\n  Nl = 'nl',\r\n  /** Dzongkha */\r\n  Dz = 'dz',\r\n  /** English */\r\n  En = 'en',\r\n  /** Esperanto */\r\n  Eo = 'eo',\r\n  /** Estonian */\r\n  Et = 'et',\r\n  /** Ewe */\r\n  Ee = 'ee',\r\n  /** Faroese */\r\n  Fo = 'fo',\r\n  /** Fijian */\r\n  Fj = 'fj',\r\n  /** Finnish */\r\n  Fi = 'fi',\r\n  /** French */\r\n  Fr = 'fr',\r\n  /** Western Frisian */\r\n  Fy = 'fy',\r\n  /** Fulah */\r\n  Ff = 'ff',\r\n  /** Georgian */\r\n  Ka = 'ka',\r\n  /** German */\r\n  De = 'de',\r\n  /** Gaelic; Scottish Gaelic */\r\n  Gd = 'gd',\r\n  /** Irish */\r\n  Ga = 'ga',\r\n  /** Galician */\r\n  Gl = 'gl',\r\n  /** Manx */\r\n  Gv = 'gv',\r\n  /** Greek, Modern (1453-) */\r\n  El = 'el',\r\n  /** Guarani */\r\n  Gn = 'gn',\r\n  /** Gujarati */\r\n  Gu = 'gu',\r\n  /** Haitian; Haitian Creole */\r\n  Ht = 'ht',\r\n  /** Hausa */\r\n  Ha = 'ha',\r\n  /** Hebrew */\r\n  He = 'he',\r\n  /** Herero */\r\n  Hz = 'hz',\r\n  /** Hindi */\r\n  Hi = 'hi',\r\n  /** Hiri Motu */\r\n  Ho = 'ho',\r\n  /** Croatian */\r\n  Hr = 'hr',\r\n  /** Hungarian */\r\n  Hu = 'hu',\r\n  /** Igbo */\r\n  Ig = 'ig',\r\n  /** Icelandic */\r\n  Is = 'is',\r\n  /** Ido */\r\n  Io = 'io',\r\n  /** Sichuan Yi; Nuosu */\r\n  Ii = 'ii',\r\n  /** Inuktitut */\r\n  Iu = 'iu',\r\n  /** Interlingue; Occidental */\r\n  Ie = 'ie',\r\n  /** Interlingua (International Auxiliary Language Association) */\r\n  Ia = 'ia',\r\n  /** Indonesian */\r\n  Id = 'id',\r\n  /** Inupiaq */\r\n  Ik = 'ik',\r\n  /** Italian */\r\n  It = 'it',\r\n  /** Javanese */\r\n  Jv = 'jv',\r\n  /** Japanese */\r\n  Ja = 'ja',\r\n  /** Kalaallisut; Greenlandic */\r\n  Kl = 'kl',\r\n  /** Kannada */\r\n  Kn = 'kn',\r\n  /** Kashmiri */\r\n  Ks = 'ks',\r\n  /** Kanuri */\r\n  Kr = 'kr',\r\n  /** Kazakh */\r\n  Kk = 'kk',\r\n  /** Central Khmer */\r\n  Km = 'km',\r\n  /** Kikuyu; Gikuyu */\r\n  Ki = 'ki',\r\n  /** Kinyarwanda */\r\n  Rw = 'rw',\r\n  /** Kirghiz; Kyrgyz */\r\n  Ky = 'ky',\r\n  /** Komi */\r\n  Kv = 'kv',\r\n  /** Kongo */\r\n  Kg = 'kg',\r\n  /** Korean */\r\n  Ko = 'ko',\r\n  /** Kuanyama; Kwanyama */\r\n  Kj = 'kj',\r\n  /** Kurdish */\r\n  Ku = 'ku',\r\n  /** Lao */\r\n  Lo = 'lo',\r\n  /** Latin */\r\n  La = 'la',\r\n  /** Latvian */\r\n  Lv = 'lv',\r\n  /** Limburgan; Limburger; Limburgish */\r\n  Li = 'li',\r\n  /** Lingala */\r\n  Ln = 'ln',\r\n  /** Lithuanian */\r\n  Lt = 'lt',\r\n  /** Luxembourgish; Letzeburgesch */\r\n  Lb = 'lb',\r\n  /** Luba-Katanga */\r\n  Lu = 'lu',\r\n  /** Ganda */\r\n  Lg = 'lg',\r\n  /** Macedonian */\r\n  Mk = 'mk',\r\n  /** Marshallese */\r\n  Mh = 'mh',\r\n  /** Malayalam */\r\n  Ml = 'ml',\r\n  /** Maori */\r\n  Mi = 'mi',\r\n  /** Marathi */\r\n  Mr = 'mr',\r\n  /** Malay */\r\n  Ms = 'ms',\r\n  /** Malagasy */\r\n  Mg = 'mg',\r\n  /** Maltese */\r\n  Mt = 'mt',\r\n  /** Mongolian */\r\n  Mn = 'mn',\r\n  /** Nauru */\r\n  Na = 'na',\r\n  /** Navajo; Navaho */\r\n  Nv = 'nv',\r\n  /** Ndebele, South; South Ndebele */\r\n  Nr = 'nr',\r\n  /** Ndebele, North; North Ndebele */\r\n  Nd = 'nd',\r\n  /** Ndonga */\r\n  Ng = 'ng',\r\n  /** Nepali */\r\n  Ne = 'ne',\r\n  /** Norwegian Nynorsk; Nynorsk, Norwegian */\r\n  Nn = 'nn',\r\n  /** Bokmål, Norwegian; Norwegian Bokmål */\r\n  Nb = 'nb',\r\n  /** Norwegian */\r\n  No = 'no',\r\n  /** Chichewa; Chewa; Nyanja */\r\n  Ny = 'ny',\r\n  /** Occitan (post 1500); Provençal */\r\n  Oc = 'oc',\r\n  /** Ojibwa */\r\n  Oj = 'oj',\r\n  /** Oriya */\r\n  Or = 'or',\r\n  /** Oromo */\r\n  Om = 'om',\r\n  /** Ossetian; Ossetic */\r\n  Os = 'os',\r\n  /** Panjabi; Punjabi */\r\n  Pa = 'pa',\r\n  /** Persian */\r\n  Fa = 'fa',\r\n  /** Pali */\r\n  Pi = 'pi',\r\n  /** Polish */\r\n  Pl = 'pl',\r\n  /** Portuguese */\r\n  Pt = 'pt',\r\n  /** Pushto; Pashto */\r\n  Ps = 'ps',\r\n  /** Quechua */\r\n  Qu = 'qu',\r\n  /** Romansh */\r\n  Rm = 'rm',\r\n  /** Romanian; Moldavian; Moldovan */\r\n  Ro = 'ro',\r\n  /** Rundi */\r\n  Rn = 'rn',\r\n  /** Russian */\r\n  Ru = 'ru',\r\n  /** Sango */\r\n  Sg = 'sg',\r\n  /** Sanskrit */\r\n  Sa = 'sa',\r\n  /** Sinhala; Sinhalese */\r\n  Si = 'si',\r\n  /** Slovak */\r\n  Sk = 'sk',\r\n  /** Slovenian */\r\n  Sl = 'sl',\r\n  /** Northern Sami */\r\n  Se = 'se',\r\n  /** Samoan */\r\n  Sm = 'sm',\r\n  /** Shona */\r\n  Sn = 'sn',\r\n  /** Sindhi */\r\n  Sd = 'sd',\r\n  /** Somali */\r\n  So = 'so',\r\n  /** Sotho, Southern */\r\n  St = 'st',\r\n  /** Spanish; Castilian */\r\n  Es = 'es',\r\n  /** Sardinian */\r\n  Sc = 'sc',\r\n  /** Serbian */\r\n  Sr = 'sr',\r\n  /** Swati */\r\n  Ss = 'ss',\r\n  /** Sundanese */\r\n  Su = 'su',\r\n  /** Swahili */\r\n  Sw = 'sw',\r\n  /** Swedish */\r\n  Sv = 'sv',\r\n  /** Tahitian */\r\n  Ty = 'ty',\r\n  /** Tamil */\r\n  Ta = 'ta',\r\n  /** Tatar */\r\n  Tt = 'tt',\r\n  /** Telugu */\r\n  Te = 'te',\r\n  /** Tajik */\r\n  Tg = 'tg',\r\n  /** Tagalog */\r\n  Tl = 'tl',\r\n  /** Thai */\r\n  Th = 'th',\r\n  /** Tibetan */\r\n  Bo = 'bo',\r\n  /** Tigrinya */\r\n  Ti = 'ti',\r\n  /** Tonga (Tonga Islands) */\r\n  To = 'to',\r\n  /** Tswana */\r\n  Tn = 'tn',\r\n  /** Tsonga */\r\n  Ts = 'ts',\r\n  /** Turkmen */\r\n  Tk = 'tk',\r\n  /** Turkish */\r\n  Tr = 'tr',\r\n  /** Twi */\r\n  Tw = 'tw',\r\n  /** Uighur; Uyghur */\r\n  Ug = 'ug',\r\n  /** Ukrainian */\r\n  Uk = 'uk',\r\n  /** Urdu */\r\n  Ur = 'ur',\r\n  /** Uzbek */\r\n  Uz = 'uz',\r\n  /** Venda */\r\n  Ve = 've',\r\n  /** Vietnamese */\r\n  Vi = 'vi',\r\n  /** Volapük */\r\n  Vo = 'vo',\r\n  /** Welsh */\r\n  Cy = 'cy',\r\n  /** Walloon */\r\n  Wa = 'wa',\r\n  /** Wolof */\r\n  Wo = 'wo',\r\n  /** Xhosa */\r\n  Xh = 'xh',\r\n  /** Yiddish */\r\n  Yi = 'yi',\r\n  /** Yoruba */\r\n  Yo = 'yo',\r\n  /** Zhuang; Chuang */\r\n  Za = 'za',\r\n  /** Zulu */\r\n  Zu = 'zu'\r\n}\r\n\r\nexport type LocaleStringCustomFieldConfig = CustomField & {\r\n   __typename?: 'LocaleStringCustomFieldConfig',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n  pattern?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type LocalizedString = {\r\n   __typename?: 'LocalizedString',\r\n  languageCode: LanguageCode,\r\n  value: Scalars['String'],\r\n};\r\n\r\nexport type LoginResult = {\r\n   __typename?: 'LoginResult',\r\n  user: CurrentUser,\r\n};\r\n\r\nexport type MoveCollectionInput = {\r\n  collectionId: Scalars['ID'],\r\n  parentId: Scalars['ID'],\r\n  index: Scalars['Int'],\r\n};\r\n\r\nexport type Mutation = {\r\n   __typename?: 'Mutation',\r\n  /** Create a new Administrator */\r\n  createAdministrator: Administrator,\r\n  /** Update an existing Administrator */\r\n  updateAdministrator: Administrator,\r\n  /** Assign a Role to an Administrator */\r\n  assignRoleToAdministrator: Administrator,\r\n  /** Create a new Asset */\r\n  createAssets: Array<Asset>,\r\n  login: LoginResult,\r\n  logout: Scalars['Boolean'],\r\n  /** Create a new Channel */\r\n  createChannel: Channel,\r\n  /** Update an existing Channel */\r\n  updateChannel: Channel,\r\n  /** Delete a Channel */\r\n  deleteChannel: DeletionResponse,\r\n  /** Create a new Collection */\r\n  createCollection: Collection,\r\n  /** Update an existing Collection */\r\n  updateCollection: Collection,\r\n  /** Delete a Collection and all of its descendants */\r\n  deleteCollection: DeletionResponse,\r\n  /** Move a Collection to a different parent or index */\r\n  moveCollection: Collection,\r\n  /** Create a new Country */\r\n  createCountry: Country,\r\n  /** Update an existing Country */\r\n  updateCountry: Country,\r\n  /** Delete a Country */\r\n  deleteCountry: DeletionResponse,\r\n  /** Create a new CustomerGroup */\r\n  createCustomerGroup: CustomerGroup,\r\n  /** Update an existing CustomerGroup */\r\n  updateCustomerGroup: CustomerGroup,\r\n  /** Add Customers to a CustomerGroup */\r\n  addCustomersToGroup: CustomerGroup,\r\n  /** Remove Customers from a CustomerGroup */\r\n  removeCustomersFromGroup: CustomerGroup,\r\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\r\n  createCustomer: Customer,\r\n  /** Update an existing Customer */\r\n  updateCustomer: Customer,\r\n  /** Delete a Customer */\r\n  deleteCustomer: DeletionResponse,\r\n  /** Create a new Address and associate it with the Customer specified by customerId */\r\n  createCustomerAddress: Address,\r\n  /** Update an existing Address */\r\n  updateCustomerAddress: Address,\r\n  /** Update an existing Address */\r\n  deleteCustomerAddress: Scalars['Boolean'],\r\n  /** Create a new Facet */\r\n  createFacet: Facet,\r\n  /** Update an existing Facet */\r\n  updateFacet: Facet,\r\n  /** Delete an existing Facet */\r\n  deleteFacet: DeletionResponse,\r\n  /** Create one or more FacetValues */\r\n  createFacetValues: Array<FacetValue>,\r\n  /** Update one or more FacetValues */\r\n  updateFacetValues: Array<FacetValue>,\r\n  /** Delete one or more FacetValues */\r\n  deleteFacetValues: Array<DeletionResponse>,\r\n  updateGlobalSettings: GlobalSettings,\r\n  importProducts?: Maybe<ImportInfo>,\r\n  settlePayment: Payment,\r\n  fulfillOrder: Fulfillment,\r\n  cancelOrder: Order,\r\n  refundOrder: Refund,\r\n  settleRefund: Refund,\r\n  addNoteToOrder: Order,\r\n  /** Update an existing PaymentMethod */\r\n  updatePaymentMethod: PaymentMethod,\r\n  /** Create a new ProductOptionGroup */\r\n  createProductOptionGroup: ProductOptionGroup,\r\n  /** Update an existing ProductOptionGroup */\r\n  updateProductOptionGroup: ProductOptionGroup,\r\n  /** Create a new ProductOption within a ProductOptionGroup */\r\n  createProductOption: ProductOption,\r\n  /** Create a new ProductOption within a ProductOptionGroup */\r\n  updateProductOption: ProductOption,\r\n  reindex: JobInfo,\r\n  /** Create a new Product */\r\n  createProduct: Product,\r\n  /** Update an existing Product */\r\n  updateProduct: Product,\r\n  /** Delete a Product */\r\n  deleteProduct: DeletionResponse,\r\n  /** Add an OptionGroup to a Product */\r\n  addOptionGroupToProduct: Product,\r\n  /** Remove an OptionGroup from a Product */\r\n  removeOptionGroupFromProduct: Product,\r\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\r\n  createProductVariants: Array<Maybe<ProductVariant>>,\r\n  /** Update existing ProductVariants */\r\n  updateProductVariants: Array<Maybe<ProductVariant>>,\r\n  /** Delete a ProductVariant */\r\n  deleteProductVariant: DeletionResponse,\r\n  /** Assigns Products to the specified Channel */\r\n  assignProductsToChannel: Array<Product>,\r\n  /** Removes Products from the specified Channel */\r\n  removeProductsFromChannel: Array<Product>,\r\n  createPromotion: Promotion,\r\n  updatePromotion: Promotion,\r\n  deletePromotion: DeletionResponse,\r\n  /** Create a new Role */\r\n  createRole: Role,\r\n  /** Update an existing Role */\r\n  updateRole: Role,\r\n  /** Delete an existing Role */\r\n  deleteRole: DeletionResponse,\r\n  /** Create a new ShippingMethod */\r\n  createShippingMethod: ShippingMethod,\r\n  /** Update an existing ShippingMethod */\r\n  updateShippingMethod: ShippingMethod,\r\n  /** Delete a ShippingMethod */\r\n  deleteShippingMethod: DeletionResponse,\r\n  /** Create a new TaxCategory */\r\n  createTaxCategory: TaxCategory,\r\n  /** Update an existing TaxCategory */\r\n  updateTaxCategory: TaxCategory,\r\n  /** Create a new TaxRate */\r\n  createTaxRate: TaxRate,\r\n  /** Update an existing TaxRate */\r\n  updateTaxRate: TaxRate,\r\n  /** Create a new Zone */\r\n  createZone: Zone,\r\n  /** Update an existing Zone */\r\n  updateZone: Zone,\r\n  /** Delete a Zone */\r\n  deleteZone: DeletionResponse,\r\n  /** Add members to a Zone */\r\n  addMembersToZone: Zone,\r\n  /** Remove members from a Zone */\r\n  removeMembersFromZone: Zone,\r\n  updateProductReview: ProductReview,\r\n  approveProductReview?: Maybe<ProductReview>,\r\n  rejectProductReview?: Maybe<ProductReview>,\r\n};\r\n\r\n\r\nexport type MutationCreateAdministratorArgs = {\r\n  input: CreateAdministratorInput\r\n};\r\n\r\n\r\nexport type MutationUpdateAdministratorArgs = {\r\n  input: UpdateAdministratorInput\r\n};\r\n\r\n\r\nexport type MutationAssignRoleToAdministratorArgs = {\r\n  administratorId: Scalars['ID'],\r\n  roleId: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateAssetsArgs = {\r\n  input: Array<CreateAssetInput>\r\n};\r\n\r\n\r\nexport type MutationLoginArgs = {\r\n  username: Scalars['String'],\r\n  password: Scalars['String'],\r\n  rememberMe?: Maybe<Scalars['Boolean']>\r\n};\r\n\r\n\r\nexport type MutationCreateChannelArgs = {\r\n  input: CreateChannelInput\r\n};\r\n\r\n\r\nexport type MutationUpdateChannelArgs = {\r\n  input: UpdateChannelInput\r\n};\r\n\r\n\r\nexport type MutationDeleteChannelArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateCollectionArgs = {\r\n  input: CreateCollectionInput\r\n};\r\n\r\n\r\nexport type MutationUpdateCollectionArgs = {\r\n  input: UpdateCollectionInput\r\n};\r\n\r\n\r\nexport type MutationDeleteCollectionArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationMoveCollectionArgs = {\r\n  input: MoveCollectionInput\r\n};\r\n\r\n\r\nexport type MutationCreateCountryArgs = {\r\n  input: CreateCountryInput\r\n};\r\n\r\n\r\nexport type MutationUpdateCountryArgs = {\r\n  input: UpdateCountryInput\r\n};\r\n\r\n\r\nexport type MutationDeleteCountryArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerGroupArgs = {\r\n  input: CreateCustomerGroupInput\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerGroupArgs = {\r\n  input: UpdateCustomerGroupInput\r\n};\r\n\r\n\r\nexport type MutationAddCustomersToGroupArgs = {\r\n  customerGroupId: Scalars['ID'],\r\n  customerIds: Array<Scalars['ID']>\r\n};\r\n\r\n\r\nexport type MutationRemoveCustomersFromGroupArgs = {\r\n  customerGroupId: Scalars['ID'],\r\n  customerIds: Array<Scalars['ID']>\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerArgs = {\r\n  input: CreateCustomerInput,\r\n  password?: Maybe<Scalars['String']>\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerArgs = {\r\n  input: UpdateCustomerInput\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerAddressArgs = {\r\n  customerId: Scalars['ID'],\r\n  input: CreateAddressInput\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerAddressArgs = {\r\n  input: UpdateAddressInput\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerAddressArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateFacetArgs = {\r\n  input: CreateFacetInput\r\n};\r\n\r\n\r\nexport type MutationUpdateFacetArgs = {\r\n  input: UpdateFacetInput\r\n};\r\n\r\n\r\nexport type MutationDeleteFacetArgs = {\r\n  id: Scalars['ID'],\r\n  force?: Maybe<Scalars['Boolean']>\r\n};\r\n\r\n\r\nexport type MutationCreateFacetValuesArgs = {\r\n  input: Array<CreateFacetValueInput>\r\n};\r\n\r\n\r\nexport type MutationUpdateFacetValuesArgs = {\r\n  input: Array<UpdateFacetValueInput>\r\n};\r\n\r\n\r\nexport type MutationDeleteFacetValuesArgs = {\r\n  ids: Array<Scalars['ID']>,\r\n  force?: Maybe<Scalars['Boolean']>\r\n};\r\n\r\n\r\nexport type MutationUpdateGlobalSettingsArgs = {\r\n  input: UpdateGlobalSettingsInput\r\n};\r\n\r\n\r\nexport type MutationImportProductsArgs = {\r\n  csvFile: Scalars['Upload']\r\n};\r\n\r\n\r\nexport type MutationSettlePaymentArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationFulfillOrderArgs = {\r\n  input: FulfillOrderInput\r\n};\r\n\r\n\r\nexport type MutationCancelOrderArgs = {\r\n  input: CancelOrderInput\r\n};\r\n\r\n\r\nexport type MutationRefundOrderArgs = {\r\n  input: RefundOrderInput\r\n};\r\n\r\n\r\nexport type MutationSettleRefundArgs = {\r\n  input: SettleRefundInput\r\n};\r\n\r\n\r\nexport type MutationAddNoteToOrderArgs = {\r\n  input: AddNoteToOrderInput\r\n};\r\n\r\n\r\nexport type MutationUpdatePaymentMethodArgs = {\r\n  input: UpdatePaymentMethodInput\r\n};\r\n\r\n\r\nexport type MutationCreateProductOptionGroupArgs = {\r\n  input: CreateProductOptionGroupInput\r\n};\r\n\r\n\r\nexport type MutationUpdateProductOptionGroupArgs = {\r\n  input: UpdateProductOptionGroupInput\r\n};\r\n\r\n\r\nexport type MutationCreateProductOptionArgs = {\r\n  input: CreateProductOptionInput\r\n};\r\n\r\n\r\nexport type MutationUpdateProductOptionArgs = {\r\n  input: UpdateProductOptionInput\r\n};\r\n\r\n\r\nexport type MutationCreateProductArgs = {\r\n  input: CreateProductInput\r\n};\r\n\r\n\r\nexport type MutationUpdateProductArgs = {\r\n  input: UpdateProductInput\r\n};\r\n\r\n\r\nexport type MutationDeleteProductArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationAddOptionGroupToProductArgs = {\r\n  productId: Scalars['ID'],\r\n  optionGroupId: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationRemoveOptionGroupFromProductArgs = {\r\n  productId: Scalars['ID'],\r\n  optionGroupId: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateProductVariantsArgs = {\r\n  input: Array<CreateProductVariantInput>\r\n};\r\n\r\n\r\nexport type MutationUpdateProductVariantsArgs = {\r\n  input: Array<UpdateProductVariantInput>\r\n};\r\n\r\n\r\nexport type MutationDeleteProductVariantArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationAssignProductsToChannelArgs = {\r\n  input: AssignProductsToChannelInput\r\n};\r\n\r\n\r\nexport type MutationRemoveProductsFromChannelArgs = {\r\n  input: RemoveProductsFromChannelInput\r\n};\r\n\r\n\r\nexport type MutationCreatePromotionArgs = {\r\n  input: CreatePromotionInput\r\n};\r\n\r\n\r\nexport type MutationUpdatePromotionArgs = {\r\n  input: UpdatePromotionInput\r\n};\r\n\r\n\r\nexport type MutationDeletePromotionArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateRoleArgs = {\r\n  input: CreateRoleInput\r\n};\r\n\r\n\r\nexport type MutationUpdateRoleArgs = {\r\n  input: UpdateRoleInput\r\n};\r\n\r\n\r\nexport type MutationDeleteRoleArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateShippingMethodArgs = {\r\n  input: CreateShippingMethodInput\r\n};\r\n\r\n\r\nexport type MutationUpdateShippingMethodArgs = {\r\n  input: UpdateShippingMethodInput\r\n};\r\n\r\n\r\nexport type MutationDeleteShippingMethodArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationCreateTaxCategoryArgs = {\r\n  input: CreateTaxCategoryInput\r\n};\r\n\r\n\r\nexport type MutationUpdateTaxCategoryArgs = {\r\n  input: UpdateTaxCategoryInput\r\n};\r\n\r\n\r\nexport type MutationCreateTaxRateArgs = {\r\n  input: CreateTaxRateInput\r\n};\r\n\r\n\r\nexport type MutationUpdateTaxRateArgs = {\r\n  input: UpdateTaxRateInput\r\n};\r\n\r\n\r\nexport type MutationCreateZoneArgs = {\r\n  input: CreateZoneInput\r\n};\r\n\r\n\r\nexport type MutationUpdateZoneArgs = {\r\n  input: UpdateZoneInput\r\n};\r\n\r\n\r\nexport type MutationDeleteZoneArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationAddMembersToZoneArgs = {\r\n  zoneId: Scalars['ID'],\r\n  memberIds: Array<Scalars['ID']>\r\n};\r\n\r\n\r\nexport type MutationRemoveMembersFromZoneArgs = {\r\n  zoneId: Scalars['ID'],\r\n  memberIds: Array<Scalars['ID']>\r\n};\r\n\r\n\r\nexport type MutationUpdateProductReviewArgs = {\r\n  input: UpdateProductReviewInput\r\n};\r\n\r\n\r\nexport type MutationApproveProductReviewArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type MutationRejectProductReviewArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\nexport type Node = {\r\n  id: Scalars['ID'],\r\n};\r\n\r\nexport type NumberOperators = {\r\n  eq?: Maybe<Scalars['Float']>,\r\n  lt?: Maybe<Scalars['Float']>,\r\n  lte?: Maybe<Scalars['Float']>,\r\n  gt?: Maybe<Scalars['Float']>,\r\n  gte?: Maybe<Scalars['Float']>,\r\n  between?: Maybe<NumberRange>,\r\n};\r\n\r\nexport type NumberRange = {\r\n  start: Scalars['Float'],\r\n  end: Scalars['Float'],\r\n};\r\n\r\nexport type Order = Node & {\r\n   __typename?: 'Order',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  /** A unique code for the Order */\r\n  code: Scalars['String'],\r\n  state: Scalars['String'],\r\n  /** An order is active as long as the payment process has not been completed */\r\n  active: Scalars['Boolean'],\r\n  customer?: Maybe<Customer>,\r\n  shippingAddress?: Maybe<OrderAddress>,\r\n  billingAddress?: Maybe<OrderAddress>,\r\n  lines: Array<OrderLine>,\r\n  /** Order-level adjustments to the order total, such as discounts from promotions */\r\n  adjustments: Array<Adjustment>,\r\n  couponCodes: Array<Scalars['String']>,\r\n  promotions: Array<Promotion>,\r\n  payments?: Maybe<Array<Payment>>,\r\n  fulfillments?: Maybe<Array<Fulfillment>>,\r\n  subTotalBeforeTax: Scalars['Int'],\r\n  /** The subTotal is the total of the OrderLines, before order-level promotions and shipping has been applied. */\r\n  subTotal: Scalars['Int'],\r\n  currencyCode: CurrencyCode,\r\n  shipping: Scalars['Int'],\r\n  shippingWithTax: Scalars['Int'],\r\n  shippingMethod?: Maybe<ShippingMethod>,\r\n  totalBeforeTax: Scalars['Int'],\r\n  total: Scalars['Int'],\r\n  history: HistoryEntryList,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\n\r\nexport type OrderHistoryArgs = {\r\n  options?: Maybe<HistoryEntryListOptions>\r\n};\r\n\r\nexport type OrderAddress = {\r\n   __typename?: 'OrderAddress',\r\n  fullName?: Maybe<Scalars['String']>,\r\n  company?: Maybe<Scalars['String']>,\r\n  streetLine1?: Maybe<Scalars['String']>,\r\n  streetLine2?: Maybe<Scalars['String']>,\r\n  city?: Maybe<Scalars['String']>,\r\n  province?: Maybe<Scalars['String']>,\r\n  postalCode?: Maybe<Scalars['String']>,\r\n  country?: Maybe<Scalars['String']>,\r\n  countryCode?: Maybe<Scalars['String']>,\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type OrderFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  code?: Maybe<StringOperators>,\r\n  state?: Maybe<StringOperators>,\r\n  active?: Maybe<BooleanOperators>,\r\n  subTotalBeforeTax?: Maybe<NumberOperators>,\r\n  subTotal?: Maybe<NumberOperators>,\r\n  currencyCode?: Maybe<StringOperators>,\r\n  shipping?: Maybe<NumberOperators>,\r\n  shippingWithTax?: Maybe<NumberOperators>,\r\n  totalBeforeTax?: Maybe<NumberOperators>,\r\n  total?: Maybe<NumberOperators>,\r\n};\r\n\r\nexport type OrderItem = Node & {\r\n   __typename?: 'OrderItem',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  cancelled: Scalars['Boolean'],\r\n  unitPrice: Scalars['Int'],\r\n  unitPriceWithTax: Scalars['Int'],\r\n  unitPriceIncludesTax: Scalars['Boolean'],\r\n  taxRate: Scalars['Float'],\r\n  adjustments: Array<Adjustment>,\r\n  fulfillment?: Maybe<Fulfillment>,\r\n  refundId?: Maybe<Scalars['ID']>,\r\n};\r\n\r\nexport type OrderLine = Node & {\r\n   __typename?: 'OrderLine',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  productVariant: ProductVariant,\r\n  featuredAsset?: Maybe<Asset>,\r\n  unitPrice: Scalars['Int'],\r\n  unitPriceWithTax: Scalars['Int'],\r\n  quantity: Scalars['Int'],\r\n  items: Array<OrderItem>,\r\n  totalPrice: Scalars['Int'],\r\n  adjustments: Array<Adjustment>,\r\n  order: Order,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type OrderLineInput = {\r\n  orderLineId: Scalars['ID'],\r\n  quantity: Scalars['Int'],\r\n};\r\n\r\nexport type OrderList = PaginatedList & {\r\n   __typename?: 'OrderList',\r\n  items: Array<Order>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type OrderListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<OrderSortParameter>,\r\n  filter?: Maybe<OrderFilterParameter>,\r\n};\r\n\r\nexport type OrderSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  code?: Maybe<SortOrder>,\r\n  state?: Maybe<SortOrder>,\r\n  subTotalBeforeTax?: Maybe<SortOrder>,\r\n  subTotal?: Maybe<SortOrder>,\r\n  shipping?: Maybe<SortOrder>,\r\n  shippingWithTax?: Maybe<SortOrder>,\r\n  totalBeforeTax?: Maybe<SortOrder>,\r\n  total?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type PaginatedList = {\r\n  items: Array<Node>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type Payment = Node & {\r\n   __typename?: 'Payment',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  method: Scalars['String'],\r\n  amount: Scalars['Int'],\r\n  state: Scalars['String'],\r\n  transactionId?: Maybe<Scalars['String']>,\r\n  errorMessage?: Maybe<Scalars['String']>,\r\n  refunds: Array<Refund>,\r\n  metadata?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type PaymentMethod = Node & {\r\n   __typename?: 'PaymentMethod',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  code: Scalars['String'],\r\n  enabled: Scalars['Boolean'],\r\n  configArgs: Array<ConfigArg>,\r\n};\r\n\r\nexport type PaymentMethodFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  code?: Maybe<StringOperators>,\r\n  enabled?: Maybe<BooleanOperators>,\r\n};\r\n\r\nexport type PaymentMethodList = PaginatedList & {\r\n   __typename?: 'PaymentMethodList',\r\n  items: Array<PaymentMethod>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type PaymentMethodListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<PaymentMethodSortParameter>,\r\n  filter?: Maybe<PaymentMethodFilterParameter>,\r\n};\r\n\r\nexport type PaymentMethodSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  code?: Maybe<SortOrder>,\r\n};\r\n\r\n/** \r\n * \"\r\n * @description\r\n * Permissions for administrators and customers. Used to control access to\r\n * GraphQL resolvers via the {@link Allow} decorator.\r\n * \r\n * @docsCategory common\r\n **/\r\nexport enum Permission {\r\n  /**  The Authenticated role means simply that the user is logged in  */\r\n  Authenticated = 'Authenticated',\r\n  /**  SuperAdmin can perform the most sensitive tasks */\r\n  SuperAdmin = 'SuperAdmin',\r\n  /**  Owner means the user owns this entity, e.g. a Customer's own Order */\r\n  Owner = 'Owner',\r\n  /**  Public means any unauthenticated user may perform the operation  */\r\n  Public = 'Public',\r\n  CreateCatalog = 'CreateCatalog',\r\n  ReadCatalog = 'ReadCatalog',\r\n  UpdateCatalog = 'UpdateCatalog',\r\n  DeleteCatalog = 'DeleteCatalog',\r\n  CreateCustomer = 'CreateCustomer',\r\n  ReadCustomer = 'ReadCustomer',\r\n  UpdateCustomer = 'UpdateCustomer',\r\n  DeleteCustomer = 'DeleteCustomer',\r\n  CreateAdministrator = 'CreateAdministrator',\r\n  ReadAdministrator = 'ReadAdministrator',\r\n  UpdateAdministrator = 'UpdateAdministrator',\r\n  DeleteAdministrator = 'DeleteAdministrator',\r\n  CreateOrder = 'CreateOrder',\r\n  ReadOrder = 'ReadOrder',\r\n  UpdateOrder = 'UpdateOrder',\r\n  DeleteOrder = 'DeleteOrder',\r\n  CreatePromotion = 'CreatePromotion',\r\n  ReadPromotion = 'ReadPromotion',\r\n  UpdatePromotion = 'UpdatePromotion',\r\n  DeletePromotion = 'DeletePromotion',\r\n  CreateSettings = 'CreateSettings',\r\n  ReadSettings = 'ReadSettings',\r\n  UpdateSettings = 'UpdateSettings',\r\n  DeleteSettings = 'DeleteSettings'\r\n}\r\n\r\n/** The price range where the result has more than one price */\r\nexport type PriceRange = {\r\n   __typename?: 'PriceRange',\r\n  min: Scalars['Int'],\r\n  max: Scalars['Int'],\r\n};\r\n\r\nexport type Product = Node & {\r\n   __typename?: 'Product',\r\n  enabled: Scalars['Boolean'],\r\n  channels: Array<Channel>,\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n  slug: Scalars['String'],\r\n  description: Scalars['String'],\r\n  featuredAsset?: Maybe<Asset>,\r\n  assets: Array<Asset>,\r\n  variants: Array<ProductVariant>,\r\n  optionGroups: Array<ProductOptionGroup>,\r\n  facetValues: Array<FacetValue>,\r\n  translations: Array<ProductTranslation>,\r\n  collections: Array<Collection>,\r\n  reviews: ProductReviewList,\r\n  reviewsHistogram: Array<ProductReviewHistogramItem>,\r\n  customFields?: Maybe<ProductCustomFields>,\r\n};\r\n\r\n\r\nexport type ProductReviewsArgs = {\r\n  options?: Maybe<ProductReviewListOptions>\r\n};\r\n\r\nexport type ProductCustomFields = {\r\n   __typename?: 'ProductCustomFields',\r\n  reviewRating?: Maybe<Scalars['Float']>,\r\n  reviewCount?: Maybe<Scalars['Float']>,\r\n};\r\n\r\nexport type ProductFilterParameter = {\r\n  enabled?: Maybe<BooleanOperators>,\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  languageCode?: Maybe<StringOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  slug?: Maybe<StringOperators>,\r\n  description?: Maybe<StringOperators>,\r\n  reviewRating?: Maybe<NumberOperators>,\r\n  reviewCount?: Maybe<NumberOperators>,\r\n};\r\n\r\nexport type ProductList = PaginatedList & {\r\n   __typename?: 'ProductList',\r\n  items: Array<Product>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type ProductListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<ProductSortParameter>,\r\n  filter?: Maybe<ProductFilterParameter>,\r\n};\r\n\r\nexport type ProductOption = Node & {\r\n   __typename?: 'ProductOption',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  code: Scalars['String'],\r\n  name: Scalars['String'],\r\n  groupId: Scalars['ID'],\r\n  translations: Array<ProductOptionTranslation>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ProductOptionGroup = Node & {\r\n   __typename?: 'ProductOptionGroup',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  code: Scalars['String'],\r\n  name: Scalars['String'],\r\n  options: Array<ProductOption>,\r\n  translations: Array<ProductOptionGroupTranslation>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ProductOptionGroupTranslation = {\r\n   __typename?: 'ProductOptionGroupTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type ProductOptionGroupTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ProductOptionTranslation = {\r\n   __typename?: 'ProductOptionTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type ProductOptionTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ProductReview = Node & {\r\n   __typename?: 'ProductReview',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  product: Product,\r\n  productVariant?: Maybe<ProductVariant>,\r\n  summary: Scalars['String'],\r\n  body?: Maybe<Scalars['String']>,\r\n  rating: Scalars['Float'],\r\n  author?: Maybe<Customer>,\r\n  authorName: Scalars['String'],\r\n  authorLocation?: Maybe<Scalars['String']>,\r\n  upvotes: Scalars['Int'],\r\n  downvotes: Scalars['Int'],\r\n  state: Scalars['String'],\r\n  response?: Maybe<Scalars['String']>,\r\n  responseCreatedAt?: Maybe<Scalars['DateTime']>,\r\n};\r\n\r\nexport type ProductReviewFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  summary?: Maybe<StringOperators>,\r\n  body?: Maybe<StringOperators>,\r\n  rating?: Maybe<NumberOperators>,\r\n  authorName?: Maybe<StringOperators>,\r\n  authorLocation?: Maybe<StringOperators>,\r\n  upvotes?: Maybe<NumberOperators>,\r\n  downvotes?: Maybe<NumberOperators>,\r\n  state?: Maybe<StringOperators>,\r\n  response?: Maybe<StringOperators>,\r\n  responseCreatedAt?: Maybe<DateOperators>,\r\n};\r\n\r\nexport type ProductReviewHistogramItem = {\r\n   __typename?: 'ProductReviewHistogramItem',\r\n  bin: Scalars['Int'],\r\n  frequency: Scalars['Int'],\r\n};\r\n\r\nexport type ProductReviewList = PaginatedList & {\r\n   __typename?: 'ProductReviewList',\r\n  items: Array<ProductReview>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type ProductReviewListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<ProductReviewSortParameter>,\r\n  filter?: Maybe<ProductReviewFilterParameter>,\r\n};\r\n\r\nexport type ProductReviewSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  summary?: Maybe<SortOrder>,\r\n  body?: Maybe<SortOrder>,\r\n  rating?: Maybe<SortOrder>,\r\n  authorName?: Maybe<SortOrder>,\r\n  authorLocation?: Maybe<SortOrder>,\r\n  upvotes?: Maybe<SortOrder>,\r\n  downvotes?: Maybe<SortOrder>,\r\n  state?: Maybe<SortOrder>,\r\n  response?: Maybe<SortOrder>,\r\n  responseCreatedAt?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type ProductSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n  slug?: Maybe<SortOrder>,\r\n  description?: Maybe<SortOrder>,\r\n  reviewRating?: Maybe<SortOrder>,\r\n  reviewCount?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type ProductTranslation = {\r\n   __typename?: 'ProductTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n  slug: Scalars['String'],\r\n  description: Scalars['String'],\r\n};\r\n\r\nexport type ProductTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  slug?: Maybe<Scalars['String']>,\r\n  description?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ProductVariant = Node & {\r\n   __typename?: 'ProductVariant',\r\n  enabled: Scalars['Boolean'],\r\n  stockOnHand: Scalars['Int'],\r\n  trackInventory: Scalars['Boolean'],\r\n  stockMovements: StockMovementList,\r\n  id: Scalars['ID'],\r\n  productId: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  sku: Scalars['String'],\r\n  name: Scalars['String'],\r\n  featuredAsset?: Maybe<Asset>,\r\n  assets: Array<Asset>,\r\n  price: Scalars['Int'],\r\n  currencyCode: CurrencyCode,\r\n  priceIncludesTax: Scalars['Boolean'],\r\n  priceWithTax: Scalars['Int'],\r\n  taxRateApplied: TaxRate,\r\n  taxCategory: TaxCategory,\r\n  options: Array<ProductOption>,\r\n  facetValues: Array<FacetValue>,\r\n  translations: Array<ProductVariantTranslation>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\n\r\nexport type ProductVariantStockMovementsArgs = {\r\n  options?: Maybe<StockMovementListOptions>\r\n};\r\n\r\nexport type ProductVariantFilterParameter = {\r\n  enabled?: Maybe<BooleanOperators>,\r\n  stockOnHand?: Maybe<NumberOperators>,\r\n  trackInventory?: Maybe<BooleanOperators>,\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  languageCode?: Maybe<StringOperators>,\r\n  sku?: Maybe<StringOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  price?: Maybe<NumberOperators>,\r\n  currencyCode?: Maybe<StringOperators>,\r\n  priceIncludesTax?: Maybe<BooleanOperators>,\r\n  priceWithTax?: Maybe<NumberOperators>,\r\n};\r\n\r\nexport type ProductVariantList = PaginatedList & {\r\n   __typename?: 'ProductVariantList',\r\n  items: Array<ProductVariant>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type ProductVariantListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<ProductVariantSortParameter>,\r\n  filter?: Maybe<ProductVariantFilterParameter>,\r\n};\r\n\r\nexport type ProductVariantSortParameter = {\r\n  stockOnHand?: Maybe<SortOrder>,\r\n  id?: Maybe<SortOrder>,\r\n  productId?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  sku?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n  price?: Maybe<SortOrder>,\r\n  priceWithTax?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type ProductVariantTranslation = {\r\n   __typename?: 'ProductVariantTranslation',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  languageCode: LanguageCode,\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type ProductVariantTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  languageCode: LanguageCode,\r\n  name?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type Promotion = Node & {\r\n   __typename?: 'Promotion',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  startsAt?: Maybe<Scalars['DateTime']>,\r\n  endsAt?: Maybe<Scalars['DateTime']>,\r\n  couponCode?: Maybe<Scalars['String']>,\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>,\r\n  name: Scalars['String'],\r\n  enabled: Scalars['Boolean'],\r\n  conditions: Array<ConfigurableOperation>,\r\n  actions: Array<ConfigurableOperation>,\r\n};\r\n\r\nexport type PromotionFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  startsAt?: Maybe<DateOperators>,\r\n  endsAt?: Maybe<DateOperators>,\r\n  couponCode?: Maybe<StringOperators>,\r\n  perCustomerUsageLimit?: Maybe<NumberOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  enabled?: Maybe<BooleanOperators>,\r\n};\r\n\r\nexport type PromotionList = PaginatedList & {\r\n   __typename?: 'PromotionList',\r\n  items: Array<Promotion>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type PromotionListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<PromotionSortParameter>,\r\n  filter?: Maybe<PromotionFilterParameter>,\r\n};\r\n\r\nexport type PromotionSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  startsAt?: Maybe<SortOrder>,\r\n  endsAt?: Maybe<SortOrder>,\r\n  couponCode?: Maybe<SortOrder>,\r\n  perCustomerUsageLimit?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type Query = {\r\n   __typename?: 'Query',\r\n  administrators: AdministratorList,\r\n  administrator?: Maybe<Administrator>,\r\n  assets: AssetList,\r\n  asset?: Maybe<Asset>,\r\n  me?: Maybe<CurrentUser>,\r\n  channels: Array<Channel>,\r\n  channel?: Maybe<Channel>,\r\n  activeChannel: Channel,\r\n  collections: CollectionList,\r\n  collection?: Maybe<Collection>,\r\n  collectionFilters: Array<ConfigurableOperationDefinition>,\r\n  countries: CountryList,\r\n  country?: Maybe<Country>,\r\n  customerGroups: Array<CustomerGroup>,\r\n  customerGroup?: Maybe<CustomerGroup>,\r\n  customers: CustomerList,\r\n  customer?: Maybe<Customer>,\r\n  facets: FacetList,\r\n  facet?: Maybe<Facet>,\r\n  globalSettings: GlobalSettings,\r\n  job?: Maybe<JobInfo>,\r\n  jobs: Array<JobInfo>,\r\n  order?: Maybe<Order>,\r\n  orders: OrderList,\r\n  paymentMethods: PaymentMethodList,\r\n  paymentMethod?: Maybe<PaymentMethod>,\r\n  productOptionGroups: Array<ProductOptionGroup>,\r\n  productOptionGroup?: Maybe<ProductOptionGroup>,\r\n  search: SearchResponse,\r\n  products: ProductList,\r\n  /** Get a Product either by id or slug. If neither id nor slug is speicified, an error will result. */\r\n  product?: Maybe<Product>,\r\n  promotion?: Maybe<Promotion>,\r\n  promotions: PromotionList,\r\n  promotionConditions: Array<ConfigurableOperationDefinition>,\r\n  promotionActions: Array<ConfigurableOperationDefinition>,\r\n  roles: RoleList,\r\n  role?: Maybe<Role>,\r\n  shippingMethods: ShippingMethodList,\r\n  shippingMethod?: Maybe<ShippingMethod>,\r\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>,\r\n  shippingCalculators: Array<ConfigurableOperationDefinition>,\r\n  testShippingMethod: TestShippingMethodResult,\r\n  testEligibleShippingMethods: Array<ShippingMethodQuote>,\r\n  taxCategories: Array<TaxCategory>,\r\n  taxCategory?: Maybe<TaxCategory>,\r\n  taxRates: TaxRateList,\r\n  taxRate?: Maybe<TaxRate>,\r\n  zones: Array<Zone>,\r\n  zone?: Maybe<Zone>,\r\n  productReviews: ProductReviewList,\r\n  productReview?: Maybe<ProductReview>,\r\n};\r\n\r\n\r\nexport type QueryAdministratorsArgs = {\r\n  options?: Maybe<AdministratorListOptions>\r\n};\r\n\r\n\r\nexport type QueryAdministratorArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryAssetsArgs = {\r\n  options?: Maybe<AssetListOptions>\r\n};\r\n\r\n\r\nexport type QueryAssetArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryChannelArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryCollectionsArgs = {\r\n  options?: Maybe<CollectionListOptions>\r\n};\r\n\r\n\r\nexport type QueryCollectionArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryCountriesArgs = {\r\n  options?: Maybe<CountryListOptions>\r\n};\r\n\r\n\r\nexport type QueryCountryArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryCustomerGroupArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryCustomersArgs = {\r\n  options?: Maybe<CustomerListOptions>\r\n};\r\n\r\n\r\nexport type QueryCustomerArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryFacetsArgs = {\r\n  options?: Maybe<FacetListOptions>\r\n};\r\n\r\n\r\nexport type QueryFacetArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryJobArgs = {\r\n  jobId: Scalars['String']\r\n};\r\n\r\n\r\nexport type QueryJobsArgs = {\r\n  input?: Maybe<JobListInput>\r\n};\r\n\r\n\r\nexport type QueryOrderArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryOrdersArgs = {\r\n  options?: Maybe<OrderListOptions>\r\n};\r\n\r\n\r\nexport type QueryPaymentMethodsArgs = {\r\n  options?: Maybe<PaymentMethodListOptions>\r\n};\r\n\r\n\r\nexport type QueryPaymentMethodArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryProductOptionGroupsArgs = {\r\n  filterTerm?: Maybe<Scalars['String']>\r\n};\r\n\r\n\r\nexport type QueryProductOptionGroupArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QuerySearchArgs = {\r\n  input: SearchInput\r\n};\r\n\r\n\r\nexport type QueryProductsArgs = {\r\n  options?: Maybe<ProductListOptions>\r\n};\r\n\r\n\r\nexport type QueryProductArgs = {\r\n  id?: Maybe<Scalars['ID']>,\r\n  slug?: Maybe<Scalars['String']>\r\n};\r\n\r\n\r\nexport type QueryPromotionArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryPromotionsArgs = {\r\n  options?: Maybe<PromotionListOptions>\r\n};\r\n\r\n\r\nexport type QueryRolesArgs = {\r\n  options?: Maybe<RoleListOptions>\r\n};\r\n\r\n\r\nexport type QueryRoleArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryShippingMethodsArgs = {\r\n  options?: Maybe<ShippingMethodListOptions>\r\n};\r\n\r\n\r\nexport type QueryShippingMethodArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryTestShippingMethodArgs = {\r\n  input: TestShippingMethodInput\r\n};\r\n\r\n\r\nexport type QueryTestEligibleShippingMethodsArgs = {\r\n  input: TestEligibleShippingMethodsInput\r\n};\r\n\r\n\r\nexport type QueryTaxCategoryArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryTaxRatesArgs = {\r\n  options?: Maybe<TaxRateListOptions>\r\n};\r\n\r\n\r\nexport type QueryTaxRateArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryZoneArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type QueryProductReviewsArgs = {\r\n  options?: Maybe<ProductReviewListOptions>\r\n};\r\n\r\n\r\nexport type QueryProductReviewArgs = {\r\n  id: Scalars['ID']\r\n};\r\n\r\nexport type Refund = Node & {\r\n   __typename?: 'Refund',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  items: Scalars['Int'],\r\n  shipping: Scalars['Int'],\r\n  adjustment: Scalars['Int'],\r\n  total: Scalars['Int'],\r\n  method?: Maybe<Scalars['String']>,\r\n  state: Scalars['String'],\r\n  transactionId?: Maybe<Scalars['String']>,\r\n  reason?: Maybe<Scalars['String']>,\r\n  orderItems: Array<OrderItem>,\r\n  paymentId: Scalars['ID'],\r\n  metadata?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type RefundOrderInput = {\r\n  lines: Array<OrderLineInput>,\r\n  shipping: Scalars['Int'],\r\n  adjustment: Scalars['Int'],\r\n  paymentId: Scalars['ID'],\r\n  reason?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type RemoveProductsFromChannelInput = {\r\n  productIds: Array<Scalars['ID']>,\r\n  channelId: Scalars['ID'],\r\n};\r\n\r\nexport type Return = Node & StockMovement & {\r\n   __typename?: 'Return',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  productVariant: ProductVariant,\r\n  type: StockMovementType,\r\n  quantity: Scalars['Int'],\r\n  orderItem: OrderItem,\r\n};\r\n\r\nexport type Role = Node & {\r\n   __typename?: 'Role',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  code: Scalars['String'],\r\n  description: Scalars['String'],\r\n  permissions: Array<Permission>,\r\n  channels: Array<Channel>,\r\n};\r\n\r\nexport type RoleFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  code?: Maybe<StringOperators>,\r\n  description?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type RoleList = PaginatedList & {\r\n   __typename?: 'RoleList',\r\n  items: Array<Role>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type RoleListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<RoleSortParameter>,\r\n  filter?: Maybe<RoleFilterParameter>,\r\n};\r\n\r\nexport type RoleSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  code?: Maybe<SortOrder>,\r\n  description?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type Sale = Node & StockMovement & {\r\n   __typename?: 'Sale',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  productVariant: ProductVariant,\r\n  type: StockMovementType,\r\n  quantity: Scalars['Int'],\r\n  orderLine: OrderLine,\r\n};\r\n\r\nexport type SearchInput = {\r\n  term?: Maybe<Scalars['String']>,\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>,\r\n  collectionId?: Maybe<Scalars['ID']>,\r\n  groupByProduct?: Maybe<Scalars['Boolean']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  skip?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<SearchResultSortParameter>,\r\n};\r\n\r\nexport type SearchReindexResponse = {\r\n   __typename?: 'SearchReindexResponse',\r\n  success: Scalars['Boolean'],\r\n};\r\n\r\nexport type SearchResponse = {\r\n   __typename?: 'SearchResponse',\r\n  items: Array<SearchResult>,\r\n  totalItems: Scalars['Int'],\r\n  facetValues: Array<FacetValueResult>,\r\n};\r\n\r\nexport type SearchResult = {\r\n   __typename?: 'SearchResult',\r\n  enabled: Scalars['Boolean'],\r\n  /** An array of ids of the Collections in which this result appears */\r\n  channelIds: Array<Scalars['ID']>,\r\n  sku: Scalars['String'],\r\n  slug: Scalars['String'],\r\n  productId: Scalars['ID'],\r\n  productName: Scalars['String'],\r\n  productPreview: Scalars['String'],\r\n  productVariantId: Scalars['ID'],\r\n  productVariantName: Scalars['String'],\r\n  productVariantPreview: Scalars['String'],\r\n  price: SearchResultPrice,\r\n  priceWithTax: SearchResultPrice,\r\n  currencyCode: CurrencyCode,\r\n  description: Scalars['String'],\r\n  facetIds: Array<Scalars['ID']>,\r\n  facetValueIds: Array<Scalars['ID']>,\r\n  /** An array of ids of the Collections in which this result appears */\r\n  collectionIds: Array<Scalars['ID']>,\r\n  /** A relevence score for the result. Differs between database implementations */\r\n  score: Scalars['Float'],\r\n};\r\n\r\n/** The price of a search result product, either as a range or as a single price */\r\nexport type SearchResultPrice = PriceRange | SinglePrice;\r\n\r\nexport type SearchResultSortParameter = {\r\n  name?: Maybe<SortOrder>,\r\n  price?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type ServerConfig = {\r\n   __typename?: 'ServerConfig',\r\n  customFieldConfig: CustomFields,\r\n};\r\n\r\nexport type SettleRefundInput = {\r\n  id: Scalars['ID'],\r\n  transactionId: Scalars['String'],\r\n};\r\n\r\nexport type ShippingMethod = Node & {\r\n   __typename?: 'ShippingMethod',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  code: Scalars['String'],\r\n  description: Scalars['String'],\r\n  checker: ConfigurableOperation,\r\n  calculator: ConfigurableOperation,\r\n};\r\n\r\nexport type ShippingMethodFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  code?: Maybe<StringOperators>,\r\n  description?: Maybe<StringOperators>,\r\n};\r\n\r\nexport type ShippingMethodList = PaginatedList & {\r\n   __typename?: 'ShippingMethodList',\r\n  items: Array<ShippingMethod>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type ShippingMethodListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<ShippingMethodSortParameter>,\r\n  filter?: Maybe<ShippingMethodFilterParameter>,\r\n};\r\n\r\nexport type ShippingMethodQuote = {\r\n   __typename?: 'ShippingMethodQuote',\r\n  id: Scalars['ID'],\r\n  price: Scalars['Int'],\r\n  priceWithTax: Scalars['Int'],\r\n  description: Scalars['String'],\r\n  metadata?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type ShippingMethodSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  code?: Maybe<SortOrder>,\r\n  description?: Maybe<SortOrder>,\r\n};\r\n\r\n/** The price value where the result has a single price */\r\nexport type SinglePrice = {\r\n   __typename?: 'SinglePrice',\r\n  value: Scalars['Int'],\r\n};\r\n\r\nexport enum SortOrder {\r\n  Asc = 'ASC',\r\n  Desc = 'DESC'\r\n}\r\n\r\nexport type StockAdjustment = Node & StockMovement & {\r\n   __typename?: 'StockAdjustment',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  productVariant: ProductVariant,\r\n  type: StockMovementType,\r\n  quantity: Scalars['Int'],\r\n};\r\n\r\nexport type StockMovement = {\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  productVariant: ProductVariant,\r\n  type: StockMovementType,\r\n  quantity: Scalars['Int'],\r\n};\r\n\r\nexport type StockMovementItem = StockAdjustment | Sale | Cancellation | Return;\r\n\r\nexport type StockMovementList = {\r\n   __typename?: 'StockMovementList',\r\n  items: Array<StockMovementItem>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type StockMovementListOptions = {\r\n  type?: Maybe<StockMovementType>,\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n};\r\n\r\nexport enum StockMovementType {\r\n  Adjustment = 'ADJUSTMENT',\r\n  Sale = 'SALE',\r\n  Cancellation = 'CANCELLATION',\r\n  Return = 'RETURN'\r\n}\r\n\r\nexport type StringCustomFieldConfig = CustomField & {\r\n   __typename?: 'StringCustomFieldConfig',\r\n  name: Scalars['String'],\r\n  type: Scalars['String'],\r\n  length?: Maybe<Scalars['Int']>,\r\n  label?: Maybe<Array<LocalizedString>>,\r\n  description?: Maybe<Array<LocalizedString>>,\r\n  pattern?: Maybe<Scalars['String']>,\r\n  options?: Maybe<Array<StringFieldOption>>,\r\n};\r\n\r\nexport type StringFieldOption = {\r\n   __typename?: 'StringFieldOption',\r\n  value: Scalars['String'],\r\n  label?: Maybe<Array<LocalizedString>>,\r\n};\r\n\r\nexport type StringOperators = {\r\n  eq?: Maybe<Scalars['String']>,\r\n  contains?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type TaxCategory = Node & {\r\n   __typename?: 'TaxCategory',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  name: Scalars['String'],\r\n};\r\n\r\nexport type TaxRate = Node & {\r\n   __typename?: 'TaxRate',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  name: Scalars['String'],\r\n  enabled: Scalars['Boolean'],\r\n  value: Scalars['Int'],\r\n  category: TaxCategory,\r\n  zone: Zone,\r\n  customerGroup?: Maybe<CustomerGroup>,\r\n};\r\n\r\nexport type TaxRateFilterParameter = {\r\n  createdAt?: Maybe<DateOperators>,\r\n  updatedAt?: Maybe<DateOperators>,\r\n  name?: Maybe<StringOperators>,\r\n  enabled?: Maybe<BooleanOperators>,\r\n  value?: Maybe<NumberOperators>,\r\n};\r\n\r\nexport type TaxRateList = PaginatedList & {\r\n   __typename?: 'TaxRateList',\r\n  items: Array<TaxRate>,\r\n  totalItems: Scalars['Int'],\r\n};\r\n\r\nexport type TaxRateListOptions = {\r\n  skip?: Maybe<Scalars['Int']>,\r\n  take?: Maybe<Scalars['Int']>,\r\n  sort?: Maybe<TaxRateSortParameter>,\r\n  filter?: Maybe<TaxRateFilterParameter>,\r\n};\r\n\r\nexport type TaxRateSortParameter = {\r\n  id?: Maybe<SortOrder>,\r\n  createdAt?: Maybe<SortOrder>,\r\n  updatedAt?: Maybe<SortOrder>,\r\n  name?: Maybe<SortOrder>,\r\n  value?: Maybe<SortOrder>,\r\n};\r\n\r\nexport type TestEligibleShippingMethodsInput = {\r\n  shippingAddress: CreateAddressInput,\r\n  lines: Array<TestShippingMethodOrderLineInput>,\r\n};\r\n\r\nexport type TestShippingMethodInput = {\r\n  checker: ConfigurableOperationInput,\r\n  calculator: ConfigurableOperationInput,\r\n  shippingAddress: CreateAddressInput,\r\n  lines: Array<TestShippingMethodOrderLineInput>,\r\n};\r\n\r\nexport type TestShippingMethodOrderLineInput = {\r\n  productVariantId: Scalars['ID'],\r\n  quantity: Scalars['Int'],\r\n};\r\n\r\nexport type TestShippingMethodQuote = {\r\n   __typename?: 'TestShippingMethodQuote',\r\n  price: Scalars['Int'],\r\n  priceWithTax: Scalars['Int'],\r\n  description: Scalars['String'],\r\n  metadata?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type TestShippingMethodResult = {\r\n   __typename?: 'TestShippingMethodResult',\r\n  eligible: Scalars['Boolean'],\r\n  quote?: Maybe<TestShippingMethodQuote>,\r\n};\r\n\r\nexport type UpdateAddressInput = {\r\n  id: Scalars['ID'],\r\n  fullName?: Maybe<Scalars['String']>,\r\n  company?: Maybe<Scalars['String']>,\r\n  streetLine1?: Maybe<Scalars['String']>,\r\n  streetLine2?: Maybe<Scalars['String']>,\r\n  city?: Maybe<Scalars['String']>,\r\n  province?: Maybe<Scalars['String']>,\r\n  postalCode?: Maybe<Scalars['String']>,\r\n  countryCode?: Maybe<Scalars['String']>,\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>,\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateAdministratorInput = {\r\n  id: Scalars['ID'],\r\n  firstName?: Maybe<Scalars['String']>,\r\n  lastName?: Maybe<Scalars['String']>,\r\n  emailAddress?: Maybe<Scalars['String']>,\r\n  password?: Maybe<Scalars['String']>,\r\n  roleIds?: Maybe<Array<Scalars['ID']>>,\r\n};\r\n\r\nexport type UpdateChannelInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  token?: Maybe<Scalars['String']>,\r\n  defaultLanguageCode?: Maybe<LanguageCode>,\r\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>,\r\n  currencyCode?: Maybe<CurrencyCode>,\r\n  defaultTaxZoneId?: Maybe<Scalars['ID']>,\r\n  defaultShippingZoneId?: Maybe<Scalars['ID']>,\r\n};\r\n\r\nexport type UpdateCollectionInput = {\r\n  id: Scalars['ID'],\r\n  isPrivate?: Maybe<Scalars['Boolean']>,\r\n  featuredAssetId?: Maybe<Scalars['ID']>,\r\n  parentId?: Maybe<Scalars['ID']>,\r\n  assetIds?: Maybe<Array<Scalars['ID']>>,\r\n  filters?: Maybe<Array<ConfigurableOperationInput>>,\r\n  translations?: Maybe<Array<CollectionTranslationInput>>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateCountryInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  translations?: Maybe<Array<CountryTranslationInput>>,\r\n  enabled?: Maybe<Scalars['Boolean']>,\r\n};\r\n\r\nexport type UpdateCustomerGroupInput = {\r\n  id: Scalars['ID'],\r\n  name?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type UpdateCustomerInput = {\r\n  id: Scalars['ID'],\r\n  title?: Maybe<Scalars['String']>,\r\n  firstName?: Maybe<Scalars['String']>,\r\n  lastName?: Maybe<Scalars['String']>,\r\n  phoneNumber?: Maybe<Scalars['String']>,\r\n  emailAddress?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateFacetInput = {\r\n  id: Scalars['ID'],\r\n  isPrivate?: Maybe<Scalars['Boolean']>,\r\n  code?: Maybe<Scalars['String']>,\r\n  translations?: Maybe<Array<FacetTranslationInput>>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateFacetValueInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  translations?: Maybe<Array<FacetValueTranslationInput>>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateGlobalSettingsInput = {\r\n  availableLanguages?: Maybe<Array<LanguageCode>>,\r\n  trackInventory?: Maybe<Scalars['Boolean']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdatePaymentMethodInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  enabled?: Maybe<Scalars['Boolean']>,\r\n  configArgs?: Maybe<Array<ConfigArgInput>>,\r\n};\r\n\r\nexport type UpdateProductCustomFieldsInput = {\r\n  reviewRating?: Maybe<Scalars['Float']>,\r\n  reviewCount?: Maybe<Scalars['Float']>,\r\n};\r\n\r\nexport type UpdateProductInput = {\r\n  id: Scalars['ID'],\r\n  enabled?: Maybe<Scalars['Boolean']>,\r\n  featuredAssetId?: Maybe<Scalars['ID']>,\r\n  assetIds?: Maybe<Array<Scalars['ID']>>,\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>,\r\n  translations?: Maybe<Array<ProductTranslationInput>>,\r\n  customFields?: Maybe<UpdateProductCustomFieldsInput>,\r\n};\r\n\r\nexport type UpdateProductOptionGroupInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateProductOptionInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdateProductReviewInput = {\r\n  id: Scalars['ID'],\r\n  summary?: Maybe<Scalars['String']>,\r\n  body?: Maybe<Scalars['String']>,\r\n  response?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type UpdateProductVariantInput = {\r\n  id: Scalars['ID'],\r\n  enabled?: Maybe<Scalars['Boolean']>,\r\n  translations?: Maybe<Array<ProductVariantTranslationInput>>,\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>,\r\n  sku?: Maybe<Scalars['String']>,\r\n  taxCategoryId?: Maybe<Scalars['ID']>,\r\n  price?: Maybe<Scalars['Int']>,\r\n  featuredAssetId?: Maybe<Scalars['ID']>,\r\n  assetIds?: Maybe<Array<Scalars['ID']>>,\r\n  stockOnHand?: Maybe<Scalars['Int']>,\r\n  trackInventory?: Maybe<Scalars['Boolean']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type UpdatePromotionInput = {\r\n  id: Scalars['ID'],\r\n  name?: Maybe<Scalars['String']>,\r\n  enabled?: Maybe<Scalars['Boolean']>,\r\n  startsAt?: Maybe<Scalars['DateTime']>,\r\n  endsAt?: Maybe<Scalars['DateTime']>,\r\n  couponCode?: Maybe<Scalars['String']>,\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>,\r\n  conditions?: Maybe<Array<ConfigurableOperationInput>>,\r\n  actions?: Maybe<Array<ConfigurableOperationInput>>,\r\n};\r\n\r\nexport type UpdateRoleInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  description?: Maybe<Scalars['String']>,\r\n  permissions?: Maybe<Array<Permission>>,\r\n  channelIds?: Maybe<Array<Scalars['ID']>>,\r\n};\r\n\r\nexport type UpdateShippingMethodInput = {\r\n  id: Scalars['ID'],\r\n  code?: Maybe<Scalars['String']>,\r\n  description?: Maybe<Scalars['String']>,\r\n  checker?: Maybe<ConfigurableOperationInput>,\r\n  calculator?: Maybe<ConfigurableOperationInput>,\r\n};\r\n\r\nexport type UpdateTaxCategoryInput = {\r\n  id: Scalars['ID'],\r\n  name?: Maybe<Scalars['String']>,\r\n};\r\n\r\nexport type UpdateTaxRateInput = {\r\n  id: Scalars['ID'],\r\n  name?: Maybe<Scalars['String']>,\r\n  value?: Maybe<Scalars['Int']>,\r\n  enabled?: Maybe<Scalars['Boolean']>,\r\n  categoryId?: Maybe<Scalars['ID']>,\r\n  zoneId?: Maybe<Scalars['ID']>,\r\n  customerGroupId?: Maybe<Scalars['ID']>,\r\n};\r\n\r\nexport type UpdateZoneInput = {\r\n  id: Scalars['ID'],\r\n  name?: Maybe<Scalars['String']>,\r\n};\r\n\r\n\r\nexport type User = Node & {\r\n   __typename?: 'User',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  identifier: Scalars['String'],\r\n  verified: Scalars['Boolean'],\r\n  roles: Array<Role>,\r\n  lastLogin?: Maybe<Scalars['String']>,\r\n  customFields?: Maybe<Scalars['JSON']>,\r\n};\r\n\r\nexport type Zone = Node & {\r\n   __typename?: 'Zone',\r\n  id: Scalars['ID'],\r\n  createdAt: Scalars['DateTime'],\r\n  updatedAt: Scalars['DateTime'],\r\n  name: Scalars['String'],\r\n  members: Array<Country>,\r\n};\r\n\r\nexport namespace ProductReview {\r\n  export type Fragment = ProductReviewFragment;\r\n}\r\n\r\nexport namespace GetAllReviews {\r\n  export type Variables = GetAllReviewsQueryVariables;\r\n  export type Query = GetAllReviewsQuery;\r\n  export type ProductReviews = GetAllReviewsQuery['productReviews'];\r\n  export type Items = ProductReviewFragment;\r\n  export type Product = (NonNullable<GetAllReviewsQuery['productReviews']['items'][0]>)['product'];\r\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetAllReviewsQuery['productReviews']['items'][0]>)['product']['featuredAsset']>);\r\n}\r\n\r\nexport namespace UpdateReview {\r\n  export type Variables = UpdateReviewMutationVariables;\r\n  export type Mutation = UpdateReviewMutation;\r\n  export type UpdateProductReview = ProductReviewFragment;\r\n}\r\n\r\nexport namespace ApproveReview {\r\n  export type Variables = ApproveReviewMutationVariables;\r\n  export type Mutation = ApproveReviewMutation;\r\n  export type ApproveProductReview = (NonNullable<ApproveReviewMutation['approveProductReview']>);\r\n  export type Product = (NonNullable<ApproveReviewMutation['approveProductReview']>)['product'];\r\n  export type CustomFields = (NonNullable<(NonNullable<ApproveReviewMutation['approveProductReview']>)['product']['customFields']>);\r\n}\r\n\r\nexport namespace RejectReview {\r\n  export type Variables = RejectReviewMutationVariables;\r\n  export type Mutation = RejectReviewMutation;\r\n  export type RejectProductReview = (NonNullable<RejectReviewMutation['rejectProductReview']>);\r\n}\r\n\r\nexport namespace GetReviewForProduct {\r\n  export type Variables = GetReviewForProductQueryVariables;\r\n  export type Query = GetReviewForProductQuery;\r\n  export type Product = (NonNullable<GetReviewForProductQuery['product']>);\r\n  export type Reviews = (NonNullable<GetReviewForProductQuery['product']>)['reviews'];\r\n  export type Items = ProductReviewFragment;\r\n}\r\n\r\nexport namespace GetReviewsHistogram {\r\n  export type Variables = GetReviewsHistogramQueryVariables;\r\n  export type Query = GetReviewsHistogramQuery;\r\n  export type Product = (NonNullable<GetReviewsHistogramQuery['product']>);\r\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetReviewsHistogramQuery['product']>)['featuredAsset']>);\r\n  export type CustomFields = (NonNullable<(NonNullable<GetReviewsHistogramQuery['product']>)['customFields']>);\r\n  export type ReviewsHistogram = (NonNullable<(NonNullable<GetReviewsHistogramQuery['product']>)['reviewsHistogram'][0]>);\r\n}\r\n\r\nexport namespace GetProductName {\r\n  export type Variables = GetProductNameQueryVariables;\r\n  export type Query = GetProductNameQuery;\r\n  export type Product = (NonNullable<GetProductNameQuery['product']>);\r\n}\r\n\r\nexport namespace GetReview {\r\n  export type Variables = GetReviewQueryVariables;\r\n  export type Query = GetReviewQuery;\r\n  export type ProductReview = ProductReviewFragment;\r\n  export type Product = (NonNullable<GetReviewQuery['productReview']>)['product'];\r\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetReviewQuery['productReview']>)['product']['featuredAsset']>);\r\n  export type ProductVariant = (NonNullable<(NonNullable<GetReviewQuery['productReview']>)['productVariant']>);\r\n  export type _FeaturedAsset = (NonNullable<(NonNullable<(NonNullable<GetReviewQuery['productReview']>)['productVariant']>)['featuredAsset']>);\r\n}\r\n\r\nexport type ProductReviewFragment = (\r\n  { __typename?: 'ProductReview' }\r\n  & Pick<ProductReview, 'id' | 'createdAt' | 'updatedAt' | 'authorName' | 'authorLocation' | 'summary' | 'body' | 'rating' | 'state' | 'upvotes' | 'downvotes' | 'response' | 'responseCreatedAt'>\r\n);\r\n\r\nexport type GetAllReviewsQueryVariables = {\r\n  options?: Maybe<ProductReviewListOptions>\r\n};\r\n\r\n\r\nexport type GetAllReviewsQuery = (\r\n  { __typename?: 'Query' }\r\n  & { productReviews: (\r\n    { __typename?: 'ProductReviewList' }\r\n    & Pick<ProductReviewList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'ProductReview' }\r\n      & { product: (\r\n        { __typename?: 'Product' }\r\n        & Pick<Product, 'id' | 'name'>\r\n        & { featuredAsset: Maybe<(\r\n          { __typename?: 'Asset' }\r\n          & Pick<Asset, 'id' | 'preview'>\r\n        )> }\r\n      ) }\r\n      & ProductReviewFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type UpdateReviewMutationVariables = {\r\n  input: UpdateProductReviewInput\r\n};\r\n\r\n\r\nexport type UpdateReviewMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { updateProductReview: (\r\n    { __typename?: 'ProductReview' }\r\n    & ProductReviewFragment\r\n  ) }\r\n);\r\n\r\nexport type ApproveReviewMutationVariables = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type ApproveReviewMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { approveProductReview: Maybe<(\r\n    { __typename?: 'ProductReview' }\r\n    & Pick<ProductReview, 'id' | 'state'>\r\n    & { product: (\r\n      { __typename?: 'Product' }\r\n      & Pick<Product, 'id'>\r\n      & { customFields: Maybe<(\r\n        { __typename?: 'ProductCustomFields' }\r\n        & Pick<ProductCustomFields, 'reviewCount' | 'reviewRating'>\r\n      )> }\r\n    ) }\r\n  )> }\r\n);\r\n\r\nexport type RejectReviewMutationVariables = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type RejectReviewMutation = (\r\n  { __typename?: 'Mutation' }\r\n  & { rejectProductReview: Maybe<(\r\n    { __typename?: 'ProductReview' }\r\n    & Pick<ProductReview, 'id' | 'state'>\r\n  )> }\r\n);\r\n\r\nexport type GetReviewForProductQueryVariables = {\r\n  productId: Scalars['ID'],\r\n  options?: Maybe<ProductReviewListOptions>\r\n};\r\n\r\n\r\nexport type GetReviewForProductQuery = (\r\n  { __typename?: 'Query' }\r\n  & { product: Maybe<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id'>\r\n    & { reviews: (\r\n      { __typename?: 'ProductReviewList' }\r\n      & Pick<ProductReviewList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'ProductReview' }\r\n        & ProductReviewFragment\r\n      )> }\r\n    ) }\r\n  )> }\r\n);\r\n\r\nexport type GetReviewsHistogramQueryVariables = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type GetReviewsHistogramQuery = (\r\n  { __typename?: 'Query' }\r\n  & { product: Maybe<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id' | 'name'>\r\n    & { featuredAsset: Maybe<(\r\n      { __typename?: 'Asset' }\r\n      & Pick<Asset, 'id' | 'preview'>\r\n    )>, customFields: Maybe<(\r\n      { __typename?: 'ProductCustomFields' }\r\n      & Pick<ProductCustomFields, 'reviewRating' | 'reviewCount'>\r\n    )>, reviewsHistogram: Array<(\r\n      { __typename?: 'ProductReviewHistogramItem' }\r\n      & Pick<ProductReviewHistogramItem, 'bin' | 'frequency'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type GetProductNameQueryVariables = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type GetProductNameQuery = (\r\n  { __typename?: 'Query' }\r\n  & { product: Maybe<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id' | 'name'>\r\n  )> }\r\n);\r\n\r\nexport type GetReviewQueryVariables = {\r\n  id: Scalars['ID']\r\n};\r\n\r\n\r\nexport type GetReviewQuery = (\r\n  { __typename?: 'Query' }\r\n  & { productReview: Maybe<(\r\n    { __typename?: 'ProductReview' }\r\n    & { product: (\r\n      { __typename?: 'Product' }\r\n      & Pick<Product, 'id' | 'name'>\r\n      & { featuredAsset: Maybe<(\r\n        { __typename?: 'Asset' }\r\n        & Pick<Asset, 'id' | 'preview'>\r\n      )> }\r\n    ), productVariant: Maybe<(\r\n      { __typename?: 'ProductVariant' }\r\n      & Pick<ProductVariant, 'id' | 'name'>\r\n      & { featuredAsset: Maybe<(\r\n        { __typename?: 'Asset' }\r\n        & Pick<Asset, 'id' | 'preview'>\r\n      )> }\r\n    )> }\r\n    & ProductReviewFragment\r\n  )> }\r\n);\r\n","import gql from 'graphql-tag';\r\n\r\nexport const PRODUCT_REVIEW_FRAGMENT = gql`\r\n    fragment ProductReview on ProductReview {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        authorName\r\n        authorLocation\r\n        summary\r\n        body\r\n        rating\r\n        state\r\n        upvotes\r\n        downvotes\r\n        response\r\n        responseCreatedAt\r\n    }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const GET_ALL_REVIEWS = gql`\r\n    query GetAllReviews($options: ProductReviewListOptions) {\r\n        productReviews(options: $options) {\r\n            items {\r\n                ...ProductReview\r\n                product {\r\n                    id\r\n                    name\r\n                    featuredAsset {\r\n                        id\r\n                        preview\r\n                    }\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_REVIEW_FRAGMENT}\r\n`;\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { ReviewState } from '../../common/ui-types';\r\n\r\n@Component({\r\n    selector: 'kb-review-state-label',\r\n    templateUrl: './review-state-label.component.html',\r\n    styleUrls: ['./review-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReviewStateLabelComponent {\r\n    @Input() state: ReviewState;\r\n\r\n    getIcon(state: ReviewState) {\r\n        switch (state) {\r\n            case 'new':\r\n                return 'bubble-exclamation';\r\n            case 'approved':\r\n                return 'check-circle';\r\n            case 'rejected':\r\n                return 'times-circle';\r\n        }\r\n    }\r\n}\r\n","<vdr-chip>\r\n    <clr-icon [attr.shape]=\"getIcon(state)\" class=\"state-icon\" [ngClass]=\"state\"></clr-icon>\r\n    {{ state | titlecase }}\r\n</vdr-chip>\r\n","<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <div class=\"filter-controls\">\r\n            <select clrSelect name=\"state\" [(ngModel)]=\"filteredState\" (change)=\"refresh()\">\r\n                <option [ngValue]=\"null\">All reviews</option>\r\n                <option value=\"new\">Reviews pending approval</option>\r\n                <option value=\"approved\">Approved reviews</option>\r\n                <option value=\"rejected\">Rejected reviews</option>\r\n            </select>\r\n        </div>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n<vdr-data-table\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-dt-column>Submitted</vdr-dt-column>\r\n    <vdr-dt-column>Author</vdr-dt-column>\r\n    <vdr-dt-column>Product</vdr-dt-column>\r\n    <vdr-dt-column>Rating</vdr-dt-column>\r\n    <vdr-dt-column>Summary</vdr-dt-column>\r\n    <vdr-dt-column>Status</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-review=\"item\">\r\n        <td class=\"left align-middle\">\r\n            {{ review.createdAt | date:'mediumDate' }}\r\n        </td>\r\n        <td class=\"left align-middle\">{{ review.authorName }}</td>\r\n        <td class=\"left align-middle\">\r\n            <div class=\"product-info\">\r\n                <img [src]=\"review.product.featuredAsset?.preview + '?preset=tiny'\" width=\"50\" height=\"50\">\r\n                <span class=\"product-name\">{{ review.product.name }}</span>\r\n            </div>\r\n        </td>\r\n\r\n        <td class=\"left align-middle\">\r\n\r\n            <kb-star-rating [rating]=\"review.rating\"></kb-star-rating>\r\n        </td>\r\n        <td class=\"left align-middle\">{{ review.summary }}</td>\r\n        <td class=\"left align-middle\">\r\n            <kb-review-state-label [state]=\"review.state\"></kb-review-state-label>\r\n        </td>\r\n        <td class=\"right align-middle\">\r\n            <vdr-table-row-action\r\n                iconShape=\"edit\"\r\n                [label]=\"'common.edit' | translate\"\r\n                [linkTo]=\"['/extensions', 'product-reviews', review.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseListComponent, DataService } from '@vendure/admin-ui/core';\r\n\r\nimport { GetAllReviews, SortOrder } from '../../generated-types';\r\n\r\nimport { GET_ALL_REVIEWS } from './all-product-reviews-list.graphql';\r\n\r\n@Component({\r\n    selector: 'kb-all-product-reviews-list',\r\n    templateUrl: './all-product-reviews-list.component.html',\r\n    styleUrls: ['./all-product-reviews-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AllProductReviewsListComponent extends BaseListComponent<\r\n    GetAllReviews.Query,\r\n    GetAllReviews.Items,\r\n    GetAllReviews.Variables\r\n> {\r\n    filteredState: string | null = 'new';\r\n\r\n    constructor(private dataService: DataService, router: Router, route: ActivatedRoute) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => {\r\n                return this.dataService.query<GetAllReviews.Query>(GET_ALL_REVIEWS, args);\r\n            },\r\n            data => data.productReviews,\r\n            (skip, take) => {\r\n                return {\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    productId: route.snapshot.paramMap.get('id')!,\r\n                    options: {\r\n                        skip,\r\n                        take,\r\n                        sort: {\r\n                            createdAt: SortOrder.Desc,\r\n                        },\r\n                        ...(this.filteredState != null\r\n                            ? {\r\n                                  filter: {\r\n                                      state: {\r\n                                          eq: this.filteredState,\r\n                                      },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                    },\r\n                };\r\n            },\r\n        );\r\n    }\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const UPDATE_REVIEW = gql`\r\n    mutation UpdateReview($input: UpdateProductReviewInput!) {\r\n        updateProductReview(input: $input) {\r\n            ...ProductReview\r\n        }\r\n    }\r\n    ${PRODUCT_REVIEW_FRAGMENT}\r\n`;\r\n\r\nexport const APPROVE_REVIEW = gql`\r\n    mutation ApproveReview($id: ID!) {\r\n        approveProductReview(id: $id) {\r\n            id\r\n            state\r\n            product {\r\n                id\r\n                customFields {\r\n                    reviewCount\r\n                    reviewRating\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REJECT_REVIEW = gql`\r\n    mutation RejectReview($id: ID!) {\r\n        rejectProductReview(id: $id) {\r\n            id\r\n            state\r\n        }\r\n    }\r\n`;\r\n","<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <div class=\"review-info\">\r\n            <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\r\n            <kb-review-state-label [state]=\"reviewState$ | async\"></kb-review-state-label>\r\n        </div>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <ng-container *ngIf=\"(reviewState$ | async) === 'new'; else updateButton\">\r\n            <button\r\n                *vdrIfPermissions=\"'UpdateCatalog'\"\r\n                class=\"btn btn-success\"\r\n                (click)=\"approve()\"\r\n                [disabled]=\"detailForm.invalid\"\r\n            >\r\n                <clr-icon shape=\"check\"></clr-icon>\r\n                Approve\r\n            </button>\r\n            <button\r\n                *vdrIfPermissions=\"'UpdateCatalog'\"\r\n                class=\"btn btn-warning\"\r\n                (click)=\"reject()\"\r\n                [disabled]=\"detailForm.invalid\"\r\n            >\r\n                <clr-icon shape=\"times\"></clr-icon>\r\n                Reject\r\n            </button>\r\n        </ng-container>\r\n        <ng-template #updateButton>\r\n            <button\r\n                *vdrIfPermissions=\"'UpdateCatalog'\"\r\n                class=\"btn btn-primary\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<div class=\"clr-row\">\r\n    <div class=\"clr-col\">\r\n        <form class=\"form\" [formGroup]=\"detailForm\">\r\n            <section class=\"form-block\">\r\n                <vdr-form-field label=\"Summary\" for=\"summary\">\r\n                    <input\r\n                        id=\"summary\"\r\n                        type=\"text\"\r\n                        formControlName=\"summary\"\r\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\r\n                    />\r\n                </vdr-form-field>\r\n                <vdr-form-field label=\"Rating\" for=\"rating\">\r\n                    <kb-star-rating [rating]=\"detailForm.get('rating')?.value\"></kb-star-rating>\r\n                </vdr-form-field>\r\n                <vdr-form-field label=\"Body\" for=\"body\">\r\n                    <textarea\r\n                        clrTextarea\r\n                        id=\"body\"\r\n                        formControlName=\"body\"\r\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\r\n                    ></textarea>\r\n                </vdr-form-field>\r\n                <vdr-form-field label=\"Author name\" for=\"authorName\">\r\n                    <input\r\n                        id=\"authorName\"\r\n                        type=\"text\"\r\n                        formControlName=\"authorName\"\r\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\r\n                    />\r\n                </vdr-form-field>\r\n                <vdr-form-field label=\"Author location\" for=\"authorLocation\">\r\n                    <input\r\n\r\n                        id=\"authorLocation\"\r\n                        type=\"text\"\r\n                        formControlName=\"authorLocation\"\r\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\r\n                    />\r\n                </vdr-form-field>\r\n                <vdr-form-field label=\"Response\" for=\"response\">\r\n                    <textarea\r\n                        clrTextarea\r\n                        id=\"response\"\r\n                        formControlName=\"response\"\r\n                        [readonly]=\"!('UpdateCatalog' | hasPermission)\"\r\n                    ></textarea>\r\n                </vdr-form-field>\r\n            </section>\r\n        </form>\r\n    </div>\r\n    <div class=\"clr-col-4\">\r\n        <div class=\"card\" *ngIf=\"entity$ | async as review\">\r\n            <div class=\"card-img\">\r\n                <img class=\"product-image\" [src]=\"review.product!.featuredAsset!.preview + '?preset=small'\" />\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <a [routerLink]=\"['/catalog', 'products', review.product.id]\">{{ review.product.name }}</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    BaseDetailComponent,\r\n    DataService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, mapTo, switchMap } from 'rxjs/operators';\r\n\r\nimport { ReviewState } from '../../common/ui-types';\r\nimport {\r\n    ApproveReview,\r\n    ProductReview,\r\n    RejectReview,\r\n    UpdateProductReviewInput,\r\n    UpdateReview,\r\n} from '../../generated-types';\r\n\r\nimport { APPROVE_REVIEW, REJECT_REVIEW, UPDATE_REVIEW } from './product-review-detail.graphql';\r\n\r\n@Component({\r\n    selector: 'kb-product-review-detail',\r\n    templateUrl: './product-review-detail.component.html',\r\n    styleUrls: ['./product-review-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class ProductReviewDetailComponent extends BaseDetailComponent<ProductReview.Fragment>\r\n    implements OnInit {\r\n    detailForm: FormGroup;\r\n    reviewState$: Observable<ReviewState>;\r\n\r\n    constructor(\r\n        route: ActivatedRoute,\r\n        router: Router,\r\n        serverConfigService: ServerConfigService,\r\n        private formBuilder: FormBuilder,\r\n        protected dataService: DataService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.detailForm = this.formBuilder.group({\r\n            summary: ['', Validators.required],\r\n            body: '',\r\n            rating: [0, Validators.required],\r\n            authorName: ['', Validators.required],\r\n            authorLocation: '',\r\n            state: '',\r\n            response: '',\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n        this.reviewState$ = this.entity$.pipe(map(review => review.state as ReviewState));\r\n    }\r\n\r\n    approve() {\r\n        this.saveChanges()\r\n            .pipe(\r\n                switchMap(() =>\r\n                    this.dataService.mutate<ApproveReview.Mutation, ApproveReview.Variables>(APPROVE_REVIEW, {\r\n                        id: this.id,\r\n                    }),\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('Review was approved');\r\n                },\r\n                () => {\r\n                    this.notificationService.error('An error occurred when attempting to approve the review');\r\n                },\r\n            );\r\n    }\r\n\r\n    reject() {\r\n        this.saveChanges()\r\n            .pipe(\r\n                switchMap(() =>\r\n                    this.dataService.mutate<RejectReview.Mutation, RejectReview.Variables>(REJECT_REVIEW, {\r\n                        id: this.id,\r\n                    }),\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('Review was rejected');\r\n                },\r\n                () => {\r\n                    this.notificationService.error('An error occurred when attempting to reject the review');\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        this.saveChanges()\r\n            .pipe(filter(result => !!result))\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success('common.notify-update-success', {\r\n                        entity: 'ProductReview',\r\n                    });\r\n                },\r\n                () => {\r\n                    this.notificationService.error('common.notify-update-error', {\r\n                        entity: 'ProductReview',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private saveChanges(): Observable<boolean> {\r\n        if (this.detailForm.dirty) {\r\n            const formValue = this.detailForm.value;\r\n            const input: UpdateProductReviewInput = {\r\n                id: this.id,\r\n                summary: formValue.summary,\r\n                body: formValue.body,\r\n                response: formValue.response,\r\n            };\r\n            return this.dataService\r\n                .mutate<UpdateReview.Mutation, UpdateReview.Variables>(UPDATE_REVIEW, {\r\n                    input,\r\n                })\r\n                .pipe(mapTo(true));\r\n        } else {\r\n            return of(false);\r\n        }\r\n    }\r\n\r\n    protected setFormValues(entity: ProductReview.Fragment): void {\r\n        this.detailForm.patchValue({\r\n            summary: entity.summary,\r\n            body: entity.body,\r\n            rating: entity.rating,\r\n            authorName: entity.authorName,\r\n            authorLocation: entity.authorLocation,\r\n            state: entity.state,\r\n            response: entity.response,\r\n        });\r\n    }\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const GET_REVIEWS_FOR_PRODUCT = gql`\r\n    query GetReviewForProduct($productId: ID!, $options: ProductReviewListOptions) {\r\n        product(id: $productId) {\r\n            id\r\n            reviews(options: $options) {\r\n                items {\r\n                    ...ProductReview\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${PRODUCT_REVIEW_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PRODUCT_PREVIEW_AND_HISTOGRAM = gql`\r\n    query GetReviewsHistogram($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            name\r\n            featuredAsset {\r\n                id\r\n                preview\r\n            }\r\n            customFields {\r\n                reviewRating\r\n                reviewCount\r\n            }\r\n            reviewsHistogram {\r\n                bin\r\n                frequency\r\n            }\r\n        }\r\n    }\r\n`;\r\n","<div class=\"bar-container\" *ngFor=\"let bin of bins\">\r\n    <kb-star-rating [rating]=\"bin\" [showLabel]=\"false\"></kb-star-rating>\r\n    <div class=\"bar\">\r\n        <div class=\"fill\" [style.width.%]=\"getPercentage(bin)\"></div>\r\n    </div>\r\n    <div class=\"frequency\">\r\n        {{ getFrequency(bin) }}\r\n    </div>\r\n    <button class=\"icon-button filter-button\"\r\n            title=\"Filter reviews with this rating\"\r\n            [class.active]=\"filteredBin === bin\"\r\n            (click)=\"toggleBinFilter(bin)\"\r\n            [disabled]=\"getFrequency(bin) === 0\">\r\n        <clr-icon shape=\"filter-2\"></clr-icon>\r\n    </button>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { ProductReviewHistogramItem } from '../../generated-types';\r\n\r\n@Component({\r\n    selector: 'kb-review-histogram',\r\n    templateUrl: './review-histogram.component.html',\r\n    styleUrls: ['./review-histogram.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ReviewHistogramComponent implements OnChanges {\r\n    @Input() binData: ProductReviewHistogramItem[] | null = [];\r\n    @Output() filterChange = new EventEmitter<number | null>();\r\n    bins = [5, 4, 3, 2, 1];\r\n    filteredBin: number | null = null;\r\n    private max: number;\r\n\r\n    ngOnChanges() {\r\n        this.max = this.binData ? Math.max(...this.binData.map(d => d.frequency)) : 0;\r\n    }\r\n\r\n    getPercentage(bin: number): number {\r\n        if (!this.binData) {\r\n            return 0;\r\n        }\r\n        const data = this.binData.find(d => d.bin === bin);\r\n        if (!data) {\r\n            return 0;\r\n        }\r\n        return Math.round((data.frequency / this.max) * 100);\r\n    }\r\n\r\n    getFrequency(bin: number): number {\r\n        if (!this.binData) {\r\n            return 0;\r\n        }\r\n        const data = this.binData.find(d => d.bin === bin);\r\n        if (!data) {\r\n            return 0;\r\n        }\r\n        return data.frequency;\r\n    }\r\n\r\n    toggleBinFilter(bin: number) {\r\n        if (this.filteredBin === bin) {\r\n            this.filteredBin = null;\r\n        } else {\r\n            this.filteredBin = bin;\r\n        }\r\n        this.filterChange.emit(this.filteredBin);\r\n    }\r\n}\r\n","<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <div class=\"summary\">\r\n            <div class=\"image-preview\" *ngIf=\"product$ | async as product\">\r\n                <img [src]=\"product.featuredAsset?.preview + '?preset=tiny'\">\r\n                <kb-star-rating [rating]=\"product.customFields.reviewRating\"></kb-star-rating>\r\n            </div>\r\n            <kb-review-histogram [binData]=\"histogramBinData$ | async\"\r\n                                 (filterChange)=\"applyRatingFilters($event)\"></kb-review-histogram>\r\n        </div>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n<vdr-data-table\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-dt-column>Submitted</vdr-dt-column>\r\n    <vdr-dt-column>Author</vdr-dt-column>\r\n    <vdr-dt-column>Rating</vdr-dt-column>\r\n    <vdr-dt-column>Summary</vdr-dt-column>\r\n    <vdr-dt-column>Status</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-review=\"item\">\r\n        <td class=\"left align-middle\">\r\n            {{ review.createdAt | date:'mediumDate' }}\r\n        </td>\r\n        <td class=\"left align-middle\">{{ review.authorName }}</td>\r\n        <td class=\"left align-middle\">\r\n\r\n            <kb-star-rating [rating]=\"review.rating\"></kb-star-rating>\r\n        </td>\r\n        <td class=\"left align-middle\">{{ review.summary }}</td>\r\n        <td class=\"left align-middle\">\r\n            <kb-review-state-label [state]=\"review.state\"></kb-review-state-label>\r\n        </td>\r\n\r\n        <td class=\"right align-middle\">\r\n\r\n            <vdr-table-row-action\r\n                iconShape=\"edit\"\r\n                [label]=\"'common.edit' | translate\"\r\n                [linkTo]=\"['/extensions', 'product-reviews', review.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseListComponent, DataService } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport {\r\n    GetReviewForProduct,\r\n    GetReviewsHistogram,\r\n    ProductReviewHistogramItem,\r\n    SortOrder,\r\n} from '../../generated-types';\r\n\r\nimport { GET_PRODUCT_PREVIEW_AND_HISTOGRAM, GET_REVIEWS_FOR_PRODUCT } from './product-reviews-list.graphql';\r\n\r\n@Component({\r\n    selector: 'kb-product-reviews-list',\r\n    templateUrl: './product-reviews-list.component.html',\r\n    styleUrls: ['./product-reviews-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductReviewsListComponent\r\n    extends BaseListComponent<\r\n        GetReviewForProduct.Query,\r\n        GetReviewForProduct.Items,\r\n        GetReviewForProduct.Variables\r\n    >\r\n    implements OnInit {\r\n    histogramBinData$: Observable<ProductReviewHistogramItem[]>;\r\n    product$: Observable<GetReviewsHistogram.Product | null>;\r\n    private filteredRating: number | null;\r\n\r\n    constructor(private dataService: DataService, router: Router, route: ActivatedRoute) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => {\r\n                return this.dataService.query(GET_REVIEWS_FOR_PRODUCT, args);\r\n            },\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            data => data.product!.reviews,\r\n            (skip, take) => {\r\n                return {\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    productId: route.snapshot.paramMap.get('id')!,\r\n                    options: {\r\n                        skip,\r\n                        take,\r\n                        sort: {\r\n                            createdAt: SortOrder.Desc,\r\n                        },\r\n                        ...(this.filteredRating != null\r\n                            ? {\r\n                                  filter: {\r\n                                      rating: {\r\n                                          eq: this.filteredRating,\r\n                                      },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                    },\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        const productWithHistogram$ = this.dataService\r\n            .query<GetReviewsHistogram.Query, GetReviewsHistogram.Variables>(\r\n                GET_PRODUCT_PREVIEW_AND_HISTOGRAM,\r\n                {\r\n                    id: this.route.snapshot.paramMap.get('id') || '',\r\n                },\r\n            )\r\n            .single$.pipe(shareReplay(1));\r\n        this.histogramBinData$ = productWithHistogram$.pipe(\r\n            map(data => (data.product ? data.product.reviewsHistogram : [])),\r\n        );\r\n        this.product$ = productWithHistogram$.pipe(map(data => data.product));\r\n    }\r\n\r\n    applyRatingFilters(filteredBin: number) {\r\n        this.filteredRating = filteredBin;\r\n        this.refresh();\r\n    }\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_PRODUCT_NAME = gql`\r\n    query GetProductName($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { GetProductName } from '../../generated-types';\r\n\r\nimport { GET_PRODUCT_NAME } from './product-reviews-resolver.graphql';\r\n\r\n@Injectable()\r\nexport class ProductReviewsResolver implements Resolve<any> {\r\n    constructor(private dataService: DataService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<GetProductName.Product | null> {\r\n        return this.dataService\r\n            .query<GetProductName.Query, GetProductName.Variables>(GET_PRODUCT_NAME, {\r\n                id: route.paramMap.get('id') || '',\r\n            })\r\n            .mapSingle(data => data.product);\r\n    }\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PRODUCT_REVIEW_FRAGMENT } from '../../common/fragments.graphql';\r\n\r\nexport const GET_REVIEW = gql`\r\n    query GetReview($id: ID!) {\r\n        productReview(id: $id) {\r\n            ...ProductReview\r\n            product {\r\n                id\r\n                name\r\n                featuredAsset {\r\n                    id\r\n                    preview\r\n                }\r\n            }\r\n            productVariant {\r\n                id\r\n                name\r\n                featuredAsset {\r\n                    id\r\n                    preview\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${PRODUCT_REVIEW_FRAGMENT}\r\n`;\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay, take } from 'rxjs/operators';\r\n\r\nimport { GetReview } from '../../generated-types';\r\n\r\nimport { GET_REVIEW } from './review-detail-resolver.graphql';\r\n\r\n@Injectable()\r\nexport class ReviewDetailResolver implements Resolve<any> {\r\n    constructor(private dataService: DataService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Observable<GetReview.ProductReview | null>> {\r\n        const stream = this.dataService\r\n            .query<GetReview.Query, GetReview.Variables>(GET_REVIEW, {\r\n                id: route.paramMap.get('id') || '',\r\n            })\r\n            .mapStream(data => data.productReview)\r\n            .pipe(shareReplay(1));\r\n\r\n        return stream.pipe(\r\n            take(1),\r\n            map(() => stream),\r\n        );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AllProductReviewsListComponent } from './components/all-product-reviews-list/all-product-reviews-list.component';\r\nimport { ProductReviewDetailComponent } from './components/product-review-detail/product-review-detail.component';\r\nimport { ProductReviewsListComponent } from './components/product-reviews-list/product-reviews-list.component';\r\nimport { ReviewHistogramComponent } from './components/review-histogram/review-histogram.component';\r\nimport { ReviewStateLabelComponent } from './components/review-state-label/review-state-label.component';\r\nimport { GetProductName, GetReview } from './generated-types';\r\nimport { ProductReviewsResolver } from './providers/routing/product-reviews-resolver';\r\nimport { ReviewDetailResolver } from './providers/routing/review-detail-resolver';\r\nimport { ReviewsSharedModule } from './reviews-shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ReviewsSharedModule,\r\n        RouterModule.forChild([\r\n            {\r\n                path: 'product/:id',\r\n                component: ProductReviewsListComponent,\r\n                resolve: { data: ProductReviewsResolver },\r\n                data: { breadcrumb: productReviewsBreadcrumb },\r\n            },\r\n            {\r\n                path: '',\r\n                pathMatch: 'full',\r\n                component: AllProductReviewsListComponent,\r\n                data: {\r\n                    breadcrumb: [\r\n                        {\r\n                            label: 'Product reviews',\r\n                            link: ['/extensions', 'product-reviews'],\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n            {\r\n                path: ':id',\r\n                component: ProductReviewDetailComponent,\r\n                resolve: { entity: ReviewDetailResolver },\r\n                data: { breadcrumb: reviewDetailBreadcrumb },\r\n            },\r\n        ]),\r\n    ],\r\n    declarations: [\r\n        ProductReviewsListComponent,\r\n        ProductReviewDetailComponent,\r\n        ReviewHistogramComponent,\r\n        AllProductReviewsListComponent,\r\n        ReviewStateLabelComponent,\r\n    ],\r\n    providers: [ProductReviewsResolver, ReviewDetailResolver],\r\n})\r\nexport class ReviewsUiLazyModule {}\r\n\r\nexport function productReviewsBreadcrumb(resolved: { data: GetProductName.Product }, params: any) {\r\n    return [\r\n        {\r\n            label: 'breadcrumb.products',\r\n            link: ['/catalog', 'products'],\r\n        },\r\n        {\r\n            label: `${resolved.data.name}`,\r\n            link: ['/catalog', 'products', params.id],\r\n        },\r\n        {\r\n            label: 'Reviews',\r\n            link: [''],\r\n        },\r\n    ];\r\n}\r\n\r\nexport function reviewDetailBreadcrumb(resolved: { entity: Observable<GetReview.ProductReview> }) {\r\n    return resolved.entity.pipe(\r\n        map(entity => [\r\n            {\r\n                label: 'Product reviews',\r\n                link: ['/extensions', 'product-reviews'],\r\n            },\r\n            {\r\n                label: `${entity.id}`,\r\n                link: [],\r\n            },\r\n        ]),\r\n    );\r\n}\r\n"]}